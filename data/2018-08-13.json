{
  "watchNum": "24927",
  "blogs": [
    {
      "id": "1190000015985248",
      "title": "Java基础-类加载器以及加载机制",
      "url": "/a/1190000015985248",
      "desc": "我是在关于Java的面试题里了解到类加载器的，在这之前从未想过Java里类是如何被加载、解析的，一直以为只要Import就好了。事实上Java类加载器是一块非常重要的内容，可以用在类层次划分、OSGi、热部署、代码加密...",
      "author": {
        "nick": "Yuicon",
        "homepage": "/u/yuicon"
      }
    },
    {
      "id": "1190000015985017",
      "title": "对多线程程序，单核cpu与多核cpu如何工作相关的探讨",
      "url": "/a/1190000015985017",
      "desc": "我们程序员在编码的时候，涉及到技术方案时，往往会忽略掉代码对性能方面的影响，或者没有足够的敏感度来帮助自己判断自己的技术方案对系统性能造成的影响。改进的方式之一是，我们需要对底层系统的原理更了解一...",
      "author": {
        "nick": "码魇",
        "homepage": "/u/ma_5b4fe416664f8"
      }
    },
    {
      "id": "1190000015984484",
      "title": "最最最常见的Java面试题总结——第二周",
      "url": "/a/1190000015984484",
      "desc": "可变性　String类中使用字符数组:private　final　char　value[]保存字符串，所以String对象是不可变的。StringBuilder与StringBuffer都继承自AbstractStringBuilder类，在AbstractStringBuilder中也是使用字符数...",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    },
    {
      "id": "1190000015983576",
      "title": "Android 8.1 源码_机制篇（一） --消息分发机制",
      "url": "/a/1190000015983576",
      "desc": "Android View 虽然不是四大组件，但其并不比四大组件的地位低（涉及面的广度和深入甚至比四大组件还复杂🔥）。而View的核心知识点 “事件分发机制” 则是不少刚入门同学的拦路虎（1、项目中处处遇到事件分发机制；2...",
      "author": {
        "nick": "DeepCoder_Marco",
        "homepage": "/u/deepcoder_marco"
      }
    },
    {
      "id": "1190000015983046",
      "title": "2018 年最流行的十大编程语言，Java 无可争议！",
      "url": "/a/1190000015983046",
      "desc": "对于编程界的初学者来说，最大的困难是决定从何处入手，或者应掌握哪种语言才能在职场上平步青云。有时，专业程序员也面临学习一门新语言似乎更卓有成效的情形。",
      "author": {
        "nick": "糖宝",
        "homepage": "/u/tangbao_5a152bb72d2ed"
      }
    },
    {
      "id": "1190000015982712",
      "title": "6 道 BATJ 必考的 Java 面试题",
      "url": "/a/1190000015982712",
      "desc": "分析 Exception 和 Error 的区别，是从概念角度考察了 Java 处理机制。总的来说，还处于理解的层面，面试者只要阐述清楚就好了。",
      "author": {
        "nick": "糖宝",
        "homepage": "/u/tangbao_5a152bb72d2ed"
      }
    },
    {
      "id": "1190000015980193",
      "title": "如何成为一位「不那么差」的程序员",
      "url": "/a/1190000015980193",
      "desc": "前言 已经记不清有多少读者问过： 博主，你是怎么学习的？像我这样的情况有啥好的建议嘛？ 也不知道啥时候我居然成人生导师了。当然我不排斥这些问题，和大家交流都是学习的过程。 因此也许诺会准备一篇关于学习...",
      "author": {
        "nick": "crossoverJie",
        "homepage": "/u/crossoverjie"
      }
    },
    {
      "id": "1190000015981984",
      "title": "Sprig Cloud Ribbon",
      "url": "/a/1190000015981984",
      "desc": "Spring Cloud Ribbon是一个基于HTTP和TCP的客户端负载均衡工具，基于Netflix Ribbon实现。",
      "author": {
        "nick": "旧光影里的少年",
        "homepage": "/u/jiuguangyinglideshaonian"
      }
    },
    {
      "id": "1190000015981755",
      "title": "我为什么不要30岁以上的程序员？",
      "url": "/a/1190000015981755",
      "desc": "人们常说，程序员到35岁就不行了，我对这句话非常不认同，因为在我看来，很多程序员还没过30岁，我就已经看不到他们的未来了。",
      "author": {
        "nick": "sunny",
        "homepage": "/u/sunny_5b70b2fca9ec7"
      }
    },
    {
      "id": "1190000015979879",
      "title": "Java多线程进阶（二二）—— J.U.C之synchronizer框架：Phaser",
      "url": "/a/1190000015979879",
      "desc": "一、Phaser简介 二、Phaser示例 三、Phaser原理 四、Phaser类/接口声明",
      "author": {
        "nick": "NIT_EIP",
        "homepage": "/u/niteip"
      }
    },
    {
      "id": "1190000015979253",
      "title": "【跃迁之路】【553天】程序员高效学习方法论探索系列（实验阶段310-2018.08.12）",
      "url": "/a/1190000015979253",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，， 每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015979202",
      "title": "线程间的同步与通信(1)——同步代码块Synchronized",
      "url": "/a/1190000015979202",
      "desc": "同步代码块简单来说就是将一段代码用一把锁给锁起来, 只有获得了这把锁的线程才访问, 并且同一时刻, 只有一个线程能持有这把锁, 这样就保证了同一时刻只有一个线程能执行被锁住的代码.",
      "author": {
        "nick": "ChiuCheng",
        "homepage": "/u/chiucheng"
      }
    },
    {
      "id": "1190000015979157",
      "title": "JAVA学习之路 （六） 面向对象之封装、继承、多态",
      "url": "/a/1190000015979157",
      "desc": "将类中的信息进行隐藏在类的内部，不允许外部程序信息直接访问，而是只能通过该类的提供的方法来实现对隐藏信息的提供和访问。",
      "author": {
        "nick": "Meils",
        "homepage": "/u/guchengshaonian_5a56fe95f2c32"
      }
    },
    {
      "id": "1190000015977801",
      "title": "mybatis模仿1之我先看看",
      "url": "/a/1190000015977801",
      "desc": "用了挺久的mybatis，但一直停留在用的层面上，觉得不行的呀，得走出舒适区。所以想自己看看mybatis的实现，然后模仿着写一个，哈哈，当然一开始不会要求完成度很高。这一篇就先看下mybatis奥秘。这里参考的mybati...",
      "author": {
        "nick": "炼金术师cck",
        "homepage": "/u/_cck"
      }
    },
    {
      "id": "1190000015977731",
      "title": "拼多多【学霸批】面经",
      "url": "/a/1190000015977731",
      "desc": "时间：2018-08-12地点：浙大玉泉校区投递岗位：平台研发工程师应该是每个人都有三面（两轮技术面，一轮HR），三面是平行的，顺序不一。",
      "author": {
        "nick": "zzcjojo",
        "homepage": "/u/zzcjojo"
      }
    }
  ]
}