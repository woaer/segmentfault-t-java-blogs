{
  "watchNum": "43866",
  "blogs": [
    {
      "id": "1190000018501287",
      "title": "Java 8中处理集合的优雅姿势——Stream",
      "url": "/a/1190000018501287",
      "desc": "在Java中，集合和数组是我们经常会用到的数据结构，需要经常对他们做增、删、改、查、聚合、统计、过滤等操作。相比之下，关系型数据库中也同样有这些操作，但是在Java 8之前，集合和数组的处理并不是很便捷。",
      "author": {
        "nick": "阿里云云栖社区",
        "homepage": "/u/yunqishequ_5aa899aad5395"
      }
    },
    {
      "id": "1190000018500205",
      "title": "shiro入门笔记",
      "url": "/a/1190000018500205",
      "desc": "Apache Shiro是一个功能强大且灵活的开源安全框架，可以清晰地处理身份验证，授权，企业会话管理和加密。",
      "author": {
        "nick": "超人",
        "homepage": "/u/superman01"
      }
    },
    {
      "id": "1190000018499517",
      "title": "模拟HTTP请求调用controller",
      "url": "/a/1190000018499517",
      "desc": "MockMvc实现了对Http请求的模拟，能够直接使用网络的形式，转换到Controller调用，这样使得测试速度更快，不依赖网络环境。而且提供了一套验证的工具。",
      "author": {
        "nick": "不知怎么办才好",
        "homepage": "/u/buzhizenmebancaihao"
      }
    },
    {
      "id": "1190000018499339",
      "title": "Java中遍历Map对象的四种方法",
      "url": "/a/1190000018499339",
      "desc": "如果只需要map中的键或者值，你可以通过keySet或values来实现遍历，而不是用entrySet。",
      "author": {
        "nick": "小ho瑶",
        "homepage": "/u/xiaohoyao"
      }
    },
    {
      "id": "1190000018495989",
      "title": "spring boot学习(3): SpringApplication 事件监听",
      "url": "/a/1190000018495989",
      "desc": "在 spring 框架中，有多种事件, 这些时间会在不同的运行时刻发布，来通知监听者。本文仅仅介绍 SpringApplicationEvent 的事件的监听。",
      "author": {
        "nick": "posuoren",
        "homepage": "/u/posuoren"
      }
    },
    {
      "id": "1190000018494806",
      "title": "吃透动态代理，解密spring AOP源码（二）",
      "url": "/a/1190000018494806",
      "desc": "假设动态代理是一个代购公司，私有变量Object factory为动态生成的具体的真实对象，可代购对应的产品",
      "author": {
        "nick": "y猪",
        "homepage": "/u/aasadf"
      }
    },
    {
      "id": "1190000018494643",
      "title": "记做面试官的一天",
      "url": "/a/1190000018494643",
      "desc": "今天公司安排我负责前端的面试,其实我之前整过前端,只能说整过,具体做过多少前端的东西,只能说我理解的前端比较符合视觉传达.链接：[链接] 提取码：mt8f",
      "author": {
        "nick": "ukzq",
        "homepage": "/u/ukzq"
      }
    },
    {
      "id": "1190000018494498",
      "title": "栈和队列 - Algorithms, Part I, week 2 STACKS AND QUEUES",
      "url": "/a/1190000018494498",
      "desc": "前言 上一篇：算法分析下一篇：基本排序 本篇内容主要是栈，队列 (和包)的基本数据类型和数据结构 在很多应用中，我们需要维护多个对象的集合，而对这个集合的操作也很简单 基本数据类型 对象的集合 操作： inser...",
      "author": {
        "nick": "黑洞的奥义",
        "homepage": "/u/heidongdeaoyi"
      }
    },
    {
      "id": "1190000018494134",
      "title": "复选框",
      "url": "/a/1190000018494134",
      "desc": "==tips==：因为这个复选框是要提交的，所以要在表单中添加from表单，然后$(\"#表单id\").serialize();自然传输到后台即可拿到对应id数组",
      "author": {
        "nick": "学问思辨行",
        "homepage": "/u/xuewensibianxing"
      }
    },
    {
      "id": "1190000018494099",
      "title": "Junit借助Groboutils Core进行并发测试",
      "url": "/a/1190000018494099",
      "desc": "junit是无法进行并发测试，但是又有需要并发测试的场景怎么办呢？此时可以借助一个插件（Groboutils Core）来完成这种功能。maven仓库地址：点我直达",
      "author": {
        "nick": "不知怎么办才好",
        "homepage": "/u/buzhizenmebancaihao"
      }
    },
    {
      "id": "1190000018491877",
      "title": "【跃迁之路】【751天】程序员高效学习方法论探索系列（实验阶段508-2019.3.13）",
      "url": "/a/1190000018491877",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000018491678",
      "title": "数据结构与算法——数组",
      "url": "/a/1190000018491678",
      "desc": "数组（Array）是一种很基础的数据结构，几乎绝大多数编程语言都会支持数组这种数据结构。数组是一种线性结构，使用一组连续的内存空间，来存储相同类型的数据。",
      "author": {
        "nick": "roseduan",
        "homepage": "/u/roseduan"
      }
    },
    {
      "id": "1190000018486786",
      "title": "商品、订单、购物车和订单商品快照的关系，初步了解成为架构师的思想",
      "url": "/a/1190000018486786",
      "desc": "最近见同事在做订单和订单材料快照这方面的业务，这其实就像淘宝上的商品，不过，这里是材料了。它一共涉及到 五 张表：",
      "author": {
        "nick": "念兮",
        "homepage": "/u/nian_5aedc008c1353"
      }
    },
    {
      "id": "1190000018485946",
      "title": "轻松搞定Java位运算",
      "url": "/a/1190000018485946",
      "desc": "我们日常开发中为运算使用的并不多，但如果能巧妙的使用位运算可以减少运行开销和优化算法，通过Java的源码可知，如HashMap。",
      "author": {
        "nick": "码上实战",
        "homepage": "/u/flyhero"
      }
    },
    {
      "id": "1190000018485733",
      "title": "【Android开发技巧】在Activity页面中如何实现Fragment数据的缓加载",
      "url": "/a/1190000018485733",
      "desc": "渐渐的在开发道路上更注重App的性能， 数据的预加载的处理。在日常开发APP，一个Activity里面有可能会是有Viewpager与多个Fragment来进行组合，而如果每个Fragment都需要通过网络加载数据，或加载本地缓存。 如果...",
      "author": {
        "nick": "七號座先生",
        "homepage": "/u/_5c82200fed865"
      }
    }
  ]
}