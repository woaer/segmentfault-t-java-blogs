{
  "watchNum": "36355",
  "blogs": [
    {
      "id": "1190000017807694",
      "title": "Spring详解2.理解IoC容器",
      "url": "/a/1190000017807694",
      "desc": "上述案例中我们实现了一个香辣鸡腿堡套餐，在ZingerBurgerCombo中，我们发现套餐与汉堡、套餐与饮品产生了直接的耦合。要知道肯德基中的套餐是非常多的，这样需要建立大量不同套餐的类；而且如果该套餐中的百事可...",
      "author": {
        "nick": "SpiderLucas",
        "homepage": "/u/spidersama"
      }
    },
    {
      "id": "1190000017807395",
      "title": "如何理解java里的Comparator和Comparable",
      "url": "/a/1190000017807395",
      "desc": "Comparator，又名比较器，是为了比较两个对象的大小而抽象出的一个接口。在排序的时候常需要实现这个接口来定制比较规则。",
      "author": {
        "nick": "Linus脱袜子",
        "homepage": "/u/qiuqi_turing"
      }
    },
    {
      "id": "1190000017807368",
      "title": "03.Android之View原理问题",
      "url": "/a/1190000017807368",
      "desc": "3.0.0.1 View的绘制需要经过哪些过程？有哪些常用回调方法？View的绘制流程的详细流程是怎样的？",
      "author": {
        "nick": "潇湘剑雨",
        "homepage": "/u/xiangjianyu"
      }
    },
    {
      "id": "1190000017805620",
      "title": "分布式服务架构",
      "url": "/a/1190000017805620",
      "desc": "从进程角度看, 两个程序分别运行在两台主机的进程上, 它们相互协作最终完成同一个服务, 那么理论上这两个程序所组成的系统, 可以称作\"分布式系统\".",
      "author": {
        "nick": "sc_ik",
        "homepage": "/u/sc_ik"
      }
    },
    {
      "id": "1190000017804832",
      "title": "DUBBO监控环境搭建",
      "url": "/a/1190000017804832",
      "desc": "本文主要介绍如何搭建 Skywalking 做dubbo分布式跟踪依赖第三方组件JDK8+Elasticsearch 5.xSkywalking 5.x releases",
      "author": {
        "nick": "sf4y",
        "homepage": "/u/sf4y"
      }
    },
    {
      "id": "1190000017799779",
      "title": "(朝花夕拾)Spring-Annotation注解驱动开发",
      "url": "/a/1190000017799779",
      "desc": "大学是Java专业，毕业后实习加工作一直都是前端方向，所以还停留在SSM的年代，趁着年轻，就是要折腾。先把注解都弄明白。该文记录注解学习过程中遇到的问题。",
      "author": {
        "nick": "winward",
        "homepage": "/u/winward"
      }
    },
    {
      "id": "1190000017798821",
      "title": "Java核心技术笔记 语言基础",
      "url": "/a/1190000017798821",
      "desc": "《Java核心技术 卷Ⅰ》 第3章 Java 的基本程序设计结构 一些规则 类命名：CamelCase 驼峰命名法，以及必须是字母开头，后面跟字母和数字的任意组合； 源代码文件名：必须与公共类的名字相同（包括大小写）； Java...",
      "author": {
        "nick": "Yumiku",
        "homepage": "/u/yumiku"
      }
    },
    {
      "id": "1190000017798684",
      "title": "I/O模型和Java NIO源码分析",
      "url": "/a/1190000017798684",
      "desc": "最近在学习Java网络编程和Netty相关的知识，了解到Netty是NIO模式的网络框架，但是提供了不同的Channel来支持不同模式的网络通信处理，包括同步、异步、阻塞和非阻塞。学习要从基础开始，所以我们就要先了解一下...",
      "author": {
        "nick": "remcarpediem",
        "homepage": "/u/remcarpediem"
      }
    },
    {
      "id": "1190000017798503",
      "title": "EasyExcel为单个Cell设置样式",
      "url": "/a/1190000017798503",
      "desc": "EasyExcel是阿里巴巴对POI封装的一个库，号称解决了POI的OOM问题，并且在使用上也更方便一些Github：[]([链接]",
      "author": {
        "nick": "桔子214032",
        "homepage": "/u/juzi214032"
      }
    },
    {
      "id": "1190000017798496",
      "title": "【跃迁之路】【688天】程序员高效学习方法论探索系列（实验阶段445-2019.1.7）",
      "url": "/a/1190000017798496",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000017798086",
      "title": "Java封装",
      "url": "/a/1190000017798086",
      "desc": "封装可以认为是一个保护屏障，防止代码和数据被外部类定义的代码随机访问。封装最主要的功能在于我们可以修改自己的实现代码，而不用修改那些调用我们代码的程序片段。封装加强了代码的安全性。",
      "author": {
        "nick": "涛ZT",
        "homepage": "/u/taozt_5c20dedc2f547"
      }
    },
    {
      "id": "1190000017797484",
      "title": "Java 中的 override 和 overload，看这一篇就够",
      "url": "/a/1190000017797484",
      "desc": "问题出现： {代码...} 其他人是怎么做的： {代码...} 可以这样理解： {代码...} 分析： {代码...} 练习一下： {代码...} 参考答案： {代码...} 小结： {代码...} 传送门：[链接]本文系笔者原创转载请注明出处————...",
      "author": {
        "nick": "bour",
        "homepage": "/u/bour"
      }
    },
    {
      "id": "1190000017796794",
      "title": "JAVA接口",
      "url": "/a/1190000017796794",
      "desc": "接口在java编程语言中是一种抽象的类型，是抽象方法的集合，接口主要用interface来声明，一个类通过继承接口的方式，从而来继承接口的抽象方法。接口不是类，它只包含类要实现的方法。如果实现某个接口的类是抽象...",
      "author": {
        "nick": "涛ZT",
        "homepage": "/u/taozt_5c20dedc2f547"
      }
    },
    {
      "id": "1190000017796745",
      "title": "Java代码使用BC库中org.bouncycastle.openssl.PEMWriter 的 代码示例",
      "url": "/a/1190000017796745",
      "desc": "以下是显示如何使用 org.bouncycastle.openssl.PEMWriter 的最佳投票示例。 这些示例是从开源项目中提取的。 您可以对您喜欢的示例进行投票，您的投票将在我们的系统中使用，以生成更多好的示例。",
      "author": {
        "nick": "EamonZzz",
        "homepage": "/u/eamonzzz"
      }
    },
    {
      "id": "1190000017795841",
      "title": "性能诊断利器 JProfiler 快速入门和最佳实践",
      "url": "/a/1190000017795841",
      "desc": "性能诊断是软件工程师在日常工作中需要经常面对和解决的问题，在用户体验至上的今天，解决好应用的性能问题能带来非常大的收益。Java 作为最流行的编程语言之一，其应用性能诊断一直受到业界广泛关注。可能造成 J...",
      "author": {
        "nick": "阿里云云栖社区",
        "homepage": "/u/yunqishequ_5aa899aad5395"
      }
    }
  ]
}