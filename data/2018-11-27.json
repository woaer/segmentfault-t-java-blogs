{
  "watchNum": "30770",
  "blogs": [
    {
      "id": "1190000017156137",
      "title": "在2018年如何优雅的开发一个typescript语言的npm包？",
      "url": "/a/1190000017156137",
      "desc": "欢迎大家前往腾讯云+社区，获取更多腾讯海量技术实践干货哦~ 本文由小明plus发表 很多时候，我们可能想要用 typescript 语言来创建一些模块，并提交到 npm 供别人使用， 那么在 2018 年，如果我想要初始化这样的...",
      "author": {
        "nick": "腾讯云加社区",
        "homepage": "/u/qcloudcommunity"
      }
    },
    {
      "id": "1190000017155480",
      "title": "支付宝客户端架构解析：Android 容器化框架初探",
      "url": "/a/1190000017155480",
      "desc": "由本章节开始，我们将从支付宝客户端的架构设计方案入手，细分拆解客户端在“容器化框架设计”、“网络优化”、“性能启动优化”、“自动化日志收集”、“RPC 组件设计”、“移动应用监控、诊断、定位”等具体实现，带领大家...",
      "author": {
        "nick": "阿里云云栖社区",
        "homepage": "/u/yunqishequ_5aa899aad5395"
      }
    },
    {
      "id": "1190000017155154",
      "title": "Rust使用Actix-Web验证Auth Web微服务-整教程第3部分",
      "url": "/a/1190000017155154",
      "desc": "本文同步与Rust中文社区时间：2018-11-27，作者：krircc， 简介：天青色 欢迎向Rust中文社区投稿,投稿地址,好文将在以下地方直接展示 Rust中文社区首页 Rust中文社区Rust文章栏目 知乎专栏Rust语言 更新我们的CAR...",
      "author": {
        "nick": "kriry",
        "homepage": "/u/kriry"
      }
    },
    {
      "id": "1190000017154181",
      "title": "多线程通信的三大法器，你真的会用吗？",
      "url": "/a/1190000017154181",
      "desc": "wait, notify, notifyAll 是多线程之间通信最重要的 3 个方法，今天，栈长给大家普及一下它们的知识要点及应用实战。",
      "author": {
        "nick": "Java技术栈",
        "homepage": "/u/javastack"
      }
    },
    {
      "id": "1190000017152813",
      "title": "设计模式 续",
      "url": "/a/1190000017152813",
      "desc": "代理模式-实现方式 静态代理：由程序员创建或由特定工具自动生成代理类源代码，再对其编译。在程序运行前，代理类的.class文件就已经存在了。 动态代理：代理类在程序运行时，运用反射机制动态创建而成。静态代理...",
      "author": {
        "nick": "wait",
        "homepage": "/u/wait_5b992631a24de"
      }
    },
    {
      "id": "1190000017152245",
      "title": "Java™ 教程（Lambda表达式）",
      "url": "/a/1190000017152245",
      "desc": "匿名类的一个问题是，如果匿名类的实现非常简单，例如只包含一个方法的接口，那么匿名类的语法可能看起来不实用且不清楚，在这些情况下，你通常会尝试将方法作为参数传递给另一个方法，例如当有人单击按钮时应采...",
      "author": {
        "nick": "博弈",
        "homepage": "/u/leon_qi"
      }
    },
    {
      "id": "1190000017151899",
      "title": "记一次字符串压缩操作",
      "url": "/a/1190000017151899",
      "desc": "项目中遇到一个场景：需要将一批数据发送到APP端，且实际应用场景中，对数据的长度有一定的限制，于是就需要用到字符串压缩。APP端使用Java，后端使用Golang，使用gzip压缩，同时涉及到了base64编码，中文和西欧...",
      "author": {
        "nick": "AlexTuan",
        "homepage": "/u/alextuan1024"
      }
    },
    {
      "id": "1190000017151662",
      "title": "设计模式学习",
      "url": "/a/1190000017151662",
      "desc": "设计思想: OOP 类是做什么用的？封装数据和代码 接口是做什么用的？ 定义相接的口子，定义功能使用者和提供者之间的接口为什么要有接口？ 隔离变化的抽象类是做什么的？包含变与不变的OOP 三大特性：封装 继承 多态",
      "author": {
        "nick": "wait",
        "homepage": "/u/wait_5b992631a24de"
      }
    },
    {
      "id": "1190000017151633",
      "title": "Java™ 教程（匿名类）",
      "url": "/a/1190000017151633",
      "desc": "匿名类可以使你代码更简洁，它们使你能够同时声明和实例化一个类，它们就像局部类，除了它们没有名称，如果你只需要使用局部类一次，请使用它们。",
      "author": {
        "nick": "博弈",
        "homepage": "/u/leon_qi"
      }
    },
    {
      "id": "1190000017151285",
      "title": "java 导出 excel 最佳实践，java 大文件 excel 避免OOM(内存溢出) excel 工具框架",
      "url": "/a/1190000017151285",
      "desc": "产品需求 产品经理需要导出一个页面的所有的信息到 EXCEL 文件。 需求分析 对于 excel 导出，是一个很常见的需求。 最常见的解决方案就是使用 poi 直接同步导出一个 excel 文件。 客户体验 & 服务性能 客户体...",
      "author": {
        "nick": "叶止水",
        "homepage": "/u/houbinbin"
      }
    },
    {
      "id": "1190000017151094",
      "title": "堆和堆排序",
      "url": "/a/1190000017151094",
      "desc": "1. 堆的概念 堆是一种特殊的树，一个堆需要满足如下两个条件： 一个堆是一个完全二叉树； 堆中每个节点的值都必须大于等于或者小于等于其子树中的每个节点。 第一条，完全二叉树要求，除了最后一层，其它层的节点...",
      "author": {
        "nick": "seniusen",
        "homepage": "/u/seniusen"
      }
    },
    {
      "id": "1190000017150483",
      "title": "Python对象的身份迷思：从全体公民到万物皆数",
      "url": "/a/1190000017150483",
      "desc": "这么久以来，我终于确认了一件事，那就是不管是人也好，还是猫也好，常常会忘了想自己当下的身份位置，以及曾经的身份位置。",
      "author": {
        "nick": "豌豆花下猫",
        "homepage": "/u/chinesehuazhou"
      }
    },
    {
      "id": "1190000017150364",
      "title": "Mybatis自动代码生成器的实现",
      "url": "/a/1190000017150364",
      "desc": "MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息。",
      "author": {
        "nick": "辣子鸡",
        "homepage": "/u/laziji"
      }
    },
    {
      "id": "1190000017149824",
      "title": "Bitmap优化详谈",
      "url": "/a/1190000017149824",
      "desc": "目录介绍 01.如何计算Bitmap占用内存 1.1 如何计算占用内存 1.2 上面方法计算内存对吗 1.3 一个像素占用多大内存 02.Bitmap常见四种颜色格式 2.1 什么是bitmap 2.2 Android常见是那种 2.3 常见四种颜色格式介绍 2...",
      "author": {
        "nick": "潇湘剑雨",
        "homepage": "/u/xiangjianyu"
      }
    },
    {
      "id": "1190000017149219",
      "title": "【跃迁之路】【652天】程序员高效学习方法论探索系列（实验阶段409-2018.11.25-26）",
      "url": "/a/1190000017149219",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    }
  ]
}