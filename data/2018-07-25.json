{
  "watchNum": "24227",
  "blogs": [
    {
      "id": "1190000015760176",
      "title": "【Java猫说】每日算法：#3-枚举求就业率问题",
      "url": "/a/1190000015760176",
      "desc": "已知某大学某专业本年度毕业生的人数为三百人左右，且学生就业率为82.23%。通过for循环，来求出最可能的学生人数及已就业人数。假定总人数三百人左右的描述，是指人数上下波动在20以内。",
      "author": {
        "nick": "MySelf",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000015756191",
      "title": "谷歌被爆秘密研发新系统 欲5年内取代Android",
      "url": "/a/1190000015756191",
      "desc": "谷歌2年多来有一群工程师秘密研发新系统，希望最终能取代手机操作系统安卓。安卓日前遭欧盟以反垄断为由重罚。",
      "author": {
        "nick": "程序员小灰",
        "homepage": "/u/chengxuyuanxiaohui"
      }
    },
    {
      "id": "1190000015755683",
      "title": "spring-cloud-eureka服务治理",
      "url": "/a/1190000015755683",
      "desc": "Spring Cloud Eureka 目录 前言 构建服务注册中心 服务注册与发现 Eureka的基础架构 Eureka的服务治理机制 Eureka的配置 代码地址 前言 服务治理  随着微服务应用的不断增加，静态配置会越来越难以维护，并且随着...",
      "author": {
        "nick": "旧光影里的少年",
        "homepage": "/u/jiuguangyinglideshaonian"
      }
    },
    {
      "id": "1190000015755564",
      "title": "bat等大公司常考java多线程面试题",
      "url": "/a/1190000015755564",
      "desc": "简而言之,进程是程序运行和资源分配的基本单位,一个程序至少有一个进程,一个进程至少有一个线程.进程在执行过程中拥有独立的内存单元,而多个线程共享内存资源,减少切换次数,从而效率更高.线程是进程的一个实体,是...",
      "author": {
        "nick": "wx_好好学java",
        "homepage": "/u/sihai_5ae5ba9170388"
      }
    },
    {
      "id": "1190000015755451",
      "title": "使用IDEA基于Maven搭建多模块聚合工程（springmvc+spring+mybatis整合）",
      "url": "/a/1190000015755451",
      "desc": "文章有不当之处，欢迎指正，如果喜欢微信阅读，你也可以关注我的微信公众号：好好学java，获取优质学习资源。",
      "author": {
        "nick": "wx_好好学java",
        "homepage": "/u/sihai_5ae5ba9170388"
      }
    },
    {
      "id": "1190000015754978",
      "title": "Struts2 入门 ",
      "url": "/a/1190000015754978",
      "desc": "Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互。Struts 2是Struts的下一代产品，是在 struts 1和WebWork...",
      "author": {
        "nick": "zer0_li",
        "homepage": "/u/zer0_li"
      }
    },
    {
      "id": "1190000015754801",
      "title": "设计模式——工厂方法",
      "url": "/a/1190000015754801",
      "desc": "工厂方法是一种创建型模式，它定义一个创建对象的接口，让子类决定实例化哪一个类，可以使一个类的实例化延迟到其子类。它具有良好的扩展性，当有新产品类增加时，只需要新增一个具体的工厂类。调用者也不需要关...",
      "author": {
        "nick": "Jacob",
        "homepage": "/u/jacob93"
      }
    },
    {
      "id": "1190000015753447",
      "title": "【跃迁之路】【534天】程序员高效学习方法论探索系列（实验阶段291-2018.07.24）",
      "url": "/a/1190000015753447",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持，不...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015753433",
      "title": "【跃迁之路】【534天】刻意练习系列293（2018.07.24）",
      "url": "/a/1190000015753433",
      "desc": "技术的精进不能只是简单的刷题，而应该是不断的“刻意”练习 该系列改版后正式纳入【跃迁之路】专栏，持续更新",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015753212",
      "title": "windows——JDK下载与安装及环境变量配置",
      "url": "/a/1190000015753212",
      "desc": "2018-07-24 19:57:29 星期二 JDK的下载 jdk官网下载页面jdk1.8下载然后根据自己的系统位数下载 安装采用默认即可； 安装时可以更改目录位置（不推荐装在系统盘上） 安装完jdk会默认提示安装jre，安装建议更改目录...",
      "author": {
        "nick": "Cheney",
        "homepage": "/u/erxiangbo"
      }
    },
    {
      "id": "1190000015752873",
      "title": "那些年数组的排序",
      "url": "/a/1190000015752873",
      "desc": "今天来回顾一下简单的排序思想，留作今后的复习和备份用。本篇是非常非常基础的，甚至都不会讲实际项目真正能用的排序方法，譬如双轴快速排序 。写的不好请多多谅解。",
      "author": {
        "nick": "tengshe789",
        "homepage": "/u/tengshe789"
      }
    },
    {
      "id": "1190000015752560",
      "title": "Java 多线程并发编程面试笔录一览",
      "url": "/a/1190000015752560",
      "desc": "知识体系图： 1、线程是什么？ 线程是进程中独立运行的子任务。 2、创建线程的方式 方式一：将类声明为 Thread 的子类。该子类应重写 Thread 类的 run 方法 方式二：声明实现 Runnable 接口的类。该类然后实现 ru...",
      "author": {
        "nick": "茶轴的青春",
        "homepage": "/u/chazhoudeqingchun"
      }
    },
    {
      "id": "1190000015752512",
      "title": "逐行分析AQS源码(二): 锁的释放",
      "url": "/a/1190000015752512",
      "desc": "上一篇文章 我们逐行分析了锁的获取操作, 本篇文章我们来看锁的释放, 如果前面的锁的获取流程已经趟过一遍了, 那锁的释放部分就很简单了, 这篇文章我们直接开始看源码.",
      "author": {
        "nick": "ChiuCheng",
        "homepage": "/u/chiucheng"
      }
    },
    {
      "id": "1190000015752429",
      "title": "cookie跨域共享 cookie二级域名共享 前后端分离项目共享cookie",
      "url": "/a/1190000015752429",
      "desc": "最近在做sso单点登录，sso登录成功后后端需要把token和用户信息以cookie的方式传送给前端，由于项目是前后端分离的，这就涉及到了前后端跨域共享cookie的问题，下面就说说我在项目中的解决思路。",
      "author": {
        "nick": "princekin",
        "homepage": "/u/princekin_5b16500be0acc"
      }
    },
    {
      "id": "1190000015751502",
      "title": "mockito初探",
      "url": "/a/1190000015751502",
      "desc": "Mockito是mocking框架，它让你用简洁的API做测试。而且Mockito简单易学，它可读性强和验证语法简洁。注：由于项目中只需要注解，就直接用注解来mock对象",
      "author": {
        "nick": "木木甫",
        "homepage": "/u/mumufu"
      }
    }
  ]
}