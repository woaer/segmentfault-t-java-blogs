{
  "watchNum": "55434",
  "blogs": [
    {
      "id": "1190000019544027",
      "title": "6月份最新语言排行：Java，Python我更看好谁？",
      "url": "/a/1190000019544027",
      "desc": "最近，编程语言排行榜前几天发布更新了，在最新的TIOBE编程语言排行榜中，Java依旧位居第一，但前十名内有所变化，这里我列举了从第一到第十的语言种类：",
      "author": {
        "nick": "爱编码的coder",
        "homepage": "/u/chengxuyuanxiaohui"
      }
    },
    {
      "id": "1190000019543725",
      "title": "数据结构与算法（二）：带你读懂冒泡排序（Bubble Sorting）",
      "url": "/a/1190000019543725",
      "desc": "冒泡排序（Bubble Sorting），是一种计算机科学领域的较简单的排序算法。它的基本思想是：通过对待排序序列从前向后（从下标较小的元素开始）, 依次比较相邻元素的值，若发现逆序则交换，使值较大的元素逐渐从前...",
      "author": {
        "nick": "Coder编程",
        "homepage": "/u/520coder"
      }
    },
    {
      "id": "1190000019543204",
      "title": "单例终极分析（一）",
      "url": "/a/1190000019543204",
      "desc": "如果你看过设计模式，肯定会知道单例模式，实际上这是我能默写出代码的第一个设计模式，虽然很长一段时间我并不清楚单例具体是做什么用的。这里简单提一下单例的用处。作为java程序员，你应该知道spring框架，而...",
      "author": {
        "nick": "暗夜君王",
        "homepage": "/u/liuzijian"
      }
    },
    {
      "id": "1190000019542882",
      "title": "springCloud学习5（Spring-Cloud-Stream事件驱动）",
      "url": "/a/1190000019542882",
      "desc": "想想平常生活中做饭的场景，在用电饭锅做饭的同时，我们可以洗菜、切菜,等待电饭锅发出饭做好的提示我们回去拔下电饭锅电源（或者什么也不知让它处于保温状态），反正这个时候我们知道饭做好了，接下来可以炒菜了...",
      "author": {
        "nick": "flex",
        "homepage": "/u/flex_5af4f84597dc9"
      }
    },
    {
      "id": "1190000019542788",
      "title": "hashids插件库解决序列id易泄露易推导的问题",
      "url": "/a/1190000019542788",
      "desc": "自增序列类型数字主键，完全的自动增长，容易被判断推导出其他的主键值。本方案就是使用hashids解决id易推导的问题，并且id在数据量不大的情况下也不大。",
      "author": {
        "nick": "晕晕大作战",
        "homepage": "/u/yunyundazuozhan"
      }
    },
    {
      "id": "1190000019542623",
      "title": "Apollo源码分析(二): Apollo的代码层次: apollo-common",
      "url": "/a/1190000019542623",
      "desc": "不同与其它中间件框架，Apollo中有大量的业务代码，它向我们展示了大神是如何写业务代码的：maven依赖的层次结构，如何进行基础包配置，以及工具类编写，可以称之为springboot之最佳实践。",
      "author": {
        "nick": "方老司",
        "homepage": "/u/vvsuperman"
      }
    },
    {
      "id": "1190000019542598",
      "title": "java数据结构（一） 数组array",
      "url": "/a/1190000019542598",
      "desc": "java不支持直接new一个泛型，必须先new一个Object，然后前面进行类型转换data = (E[]) new Object[capacity]",
      "author": {
        "nick": "SkinnyTracy",
        "homepage": "/u/skinnytracy"
      }
    },
    {
      "id": "1190000019541571",
      "title": "leetcode刷题记录--【80 Remove Duplicates from Sorted Array II】",
      "url": "/a/1190000019541571",
      "desc": "给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。",
      "author": {
        "nick": "chenat9",
        "homepage": "/u/chenat9"
      }
    },
    {
      "id": "1190000019541368",
      "title": "spring retry, guava retrying 的整合-sisyphus java 重试框架",
      "url": "/a/1190000019541368",
      "desc": "Sisyphus 支持过程式编程和注解编程的 java 重试框架。 特性 支持 fluent 过程式编程 基于字节码的代理重试 基于注解的重试，允许自定义注解 无缝接入 spring 接口与注解的统一 解决 spring-retry 与 guava-retry...",
      "author": {
        "nick": "叶止水",
        "homepage": "/u/houbinbin"
      }
    },
    {
      "id": "1190000019540122",
      "title": "基于 java 注解的 csv 读写框架更加简单灵活",
      "url": "/a/1190000019540122",
      "desc": "CSV 基于 java 注解的 csv 读写框架。 相关框架 Apache commons-csv super-csv 简单看了下，这两个框架提供的特性都非常的基础。 创作原由 以前觉得 csv 文件的读写非常简单，就懒得封装。 最近一个月写了两次 cs...",
      "author": {
        "nick": "叶止水",
        "homepage": "/u/houbinbin"
      }
    },
    {
      "id": "1190000019540114",
      "title": "正向代理与反向代理的区别？",
      "url": "/a/1190000019540114",
      "desc": "△正向代理（ Forward Proxy ）：是一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容， 客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客...",
      "author": {
        "nick": "巅峰大词典",
        "homepage": "/u/lingfeng23"
      }
    },
    {
      "id": "1190000019538612",
      "title": "java迭代器",
      "url": "/a/1190000019538612",
      "desc": "通过反复调用 next 方法,可以逐个访问集合中的每个元素。但是,如果到达了集合的末尾,next 方法将抛出一个 NoSuchElementException。可以通过调用hasNext方法判断是否到达了末尾。java的迭代器是指向两个元素中间...",
      "author": {
        "nick": "金小新",
        "homepage": "/u/jinxiaoxin"
      }
    },
    {
      "id": "1190000019538481",
      "title": "Java实现对象克隆的方法",
      "url": "/a/1190000019538481",
      "desc": "当时只说了深拷贝以及浅拷贝，面试官问了两遍还有吗，我很肯定的说就这两种了，面试结束之后查了一下，啪啪打脸。",
      "author": {
        "nick": "cartoon",
        "homepage": "/u/cartoon_5cce2e0fb8fae"
      }
    },
    {
      "id": "1190000019536395",
      "title": "面试题：寻找一个字符串中出现次数最多的字符以及出现的次数",
      "url": "/a/1190000019536395",
      "desc": "要求编写代码实现：寻找一个字符串中出现次数最多的字符以及出现的次数。 解法一：用删除法实现 (挺巧妙的一种) {代码...} 解法二：用查找法实现 {代码...} 解法三：用排序法实现 {代码...}",
      "author": {
        "nick": "AlanKeene",
        "homepage": "/u/alankeene"
      }
    },
    {
      "id": "1190000019536201",
      "title": "Spring Boot的学习之路(02)：和你一起阅读Spring Boot官网",
      "url": "/a/1190000019536201",
      "desc": "我们平常开发学习中，很少去官网上看。也许学完以后，我们连官网长什么样子，都不是很清楚。所以，我们在开始去学习之前，我们先拜读一下Spring Boot官网，对其有一个大体上的了解。我们在后续的讲解中， 有可能...",
      "author": {
        "nick": "Java技术干货",
        "homepage": "/u/javajishuganhuo"
      }
    }
  ]
}