{
  "watchNum": "51546",
  "blogs": [
    {
      "id": "1190000019212018",
      "title": "zookeeper-数据同步源码分析",
      "url": "/a/1190000019212018",
      "desc": "在上一篇对 zookeeper 选举实现分析之后，我们知道 zookeeper 集群在选举结束之后，leader 节点将进入 LEADING 状态，follower 节点将进入 FOLLOWING 状态；此时集群中节点将进行数据同步操作，以保证数据一致。 ...",
      "author": {
        "nick": "断风雨",
        "homepage": "/u/duanfengyu"
      }
    },
    {
      "id": "1190000019211742",
      "title": "Android Gradle系列-原理篇",
      "url": "/a/1190000019211742",
      "desc": "上周我们在Android Gradle系列-入门篇文章中已经将gradle在项目中的结构过了一遍。对于gradle，我们许多时候都不需要修改类似与*.gradle文件，做的最多的应该是在dependencies中添加第三方依赖，或者说修改sdk版...",
      "author": {
        "nick": "idisfkj",
        "homepage": "/u/idisfkj"
      }
    },
    {
      "id": "1190000019211561",
      "title": "记录一次AWS架构面试内容",
      "url": "/a/1190000019211561",
      "desc": "最近参加了一次AWS 架构师的面试，吐槽一下整个面试时间相当的长，几乎经历了半年左右，但是我也是抱着学习伟大的AWS云产品的态度所以在整个过程中学到不少的云产品的功能、设计等知识，所以说还是相当有益处的。...",
      "author": {
        "nick": "金色大地",
        "homepage": "/u/jinsedadi"
      }
    },
    {
      "id": "1190000019211269",
      "title": "其实阅读没有那么难，教你如何掌握阅读技巧",
      "url": "/a/1190000019211269",
      "desc": "早在大学的时候，我就有了坚持阅读的习惯，每三天刷一本书，一年可以读100本书。因为平时阅读的时候，有写读书笔记的习惯，几年积累下来，当就读书笔记就足有三四十万字。",
      "author": {
        "nick": "傻白zc",
        "homepage": "/u/shabaizc"
      }
    },
    {
      "id": "1190000019211096",
      "title": "初学者福音！可能是最适合你的Java学习路线和方法推荐。",
      "url": "/a/1190000019211096",
      "desc": "我自己总结的Java学习的系统知识点以及面试问题，已经开源，目前已经 35k+ Star。会一直完善下去，欢迎建议和指导，同时也欢迎Star： [链接]",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    },
    {
      "id": "1190000019208969",
      "title": "Android异步消息机制",
      "url": "/a/1190000019208969",
      "desc": "目录介绍 1.Handler的常见的使用方式 2.如何在子线程中定义Handler 3.主线程如何自动调用Looper.prepare() 4.Looper.prepare()方法源码分析 5.Looper中用什么存储消息 6.Handler发送消息如何运作 7.Looper.loop()...",
      "author": {
        "nick": "潇湘剑雨",
        "homepage": "/u/xiangjianyu"
      }
    },
    {
      "id": "1190000019207284",
      "title": "人人都是 API 设计师：我对 RESTful API、GraphQL、RPC API 的思考",
      "url": "/a/1190000019207284",
      "desc": "原文地址：梁桂钊的博客博客地址：[链接] 欢迎关注公众号：「服务端思维」。一群同频者，一起成长，一起精进，打破认知的局限性。",
      "author": {
        "nick": "梁桂钊",
        "homepage": "/u/lianggzone"
      }
    },
    {
      "id": "1190000019207107",
      "title": "如何对两个列表进行乱序处理，同时保持它们的一一对应的关系？",
      "url": "/a/1190000019207107",
      "desc": "如何对两个列表进行乱序处理，同时保持它们的一一对应的关系？ 已知我们有两个列表 {代码...} 其中fileList和imgList中的元素是一一对应的。 现在我们希望对两个列表进行随机排序，要求排序后它们依旧是一一对应...",
      "author": {
        "nick": "fishBugs",
        "homepage": "/u/fish56"
      }
    },
    {
      "id": "1190000019206992",
      "title": "JAVA面试题(28)",
      "url": "/a/1190000019206992",
      "desc": "什么是 ORM 框架？ ORM全称是Object-Relational Mapping,中文名称为对象-关系映射",
      "author": {
        "nick": "cartoon",
        "homepage": "/u/cartoon_5cce2e0fb8fae"
      }
    },
    {
      "id": "1190000019206942",
      "title": "非常硬核的技术知识-CopyOnWrite思想",
      "url": "/a/1190000019206942",
      "desc": "“ 今天聊一个非常硬核的技术知识，给大家分析一下CopyOnWrite思想是什么，以及在Java并发包中的具体体现，包括在Kafka内核源码中是如何运用这个思想来优化并发性能的。这个CopyOnWrite在面试的时候，很可能成为面...",
      "author": {
        "nick": "连理枝",
        "homepage": "/u/caotingingandbise"
      }
    },
    {
      "id": "1190000019206920",
      "title": "3分钟干货之java当中的四种引用",
      "url": "/a/1190000019206920",
      "desc": "△强引用：如果一个对象具有强引用，它就不会被垃圾回收器回收。即使当前内存空间不足，JVM也不会回收它，而是抛出 OutOfMemoryError 错误，使程序异常终止。如果想中断强引用和某个对象之间的关联，可以显式地将...",
      "author": {
        "nick": "巅峰大词典",
        "homepage": "/u/lingfeng23"
      }
    },
    {
      "id": "1190000019206565",
      "title": "Thread中interrupt使用方法",
      "url": "/a/1190000019206565",
      "desc": "在Thread类中,提供了stop(),suspend()和resume()方法,这三个方法分别是用来结束,暂停,恢复线程. 但是都已经被标记为@Deprecated废弃了. 因为一个线程不应该由其他线程来结束,他应该收到别人的通知,然后自己在合适...",
      "author": {
        "nick": "Wuv1Up",
        "homepage": "/u/wuv1up"
      }
    },
    {
      "id": "1190000019206129",
      "title": "Dubbo 2.7.1 踩坑记",
      "url": "/a/1190000019206129",
      "desc": "Dubbo 2.7 版本增加新特性，新系统开始使用 Dubbo 2.7.1 尝鲜新功能。使用过程中不慎踩到这个版本的 Bug。",
      "author": {
        "nick": "andyxu9526",
        "homepage": "/u/andyuxu9526"
      }
    },
    {
      "id": "1190000019206065",
      "title": "Fork-Join框架",
      "url": "/a/1190000019206065",
      "desc": "Fork和Join是java 1.7提供的用于定型执行的框架，将大任务切分成若干个小任务执行，小任务执行结果汇总成大任务的框架。从字面上理解就是Fork把大任务切分成若干个小任务Join就是把小任务合并得到大任务结果。使...",
      "author": {
        "nick": "一号线",
        "homepage": "/u/yihaoxian"
      }
    },
    {
      "id": "1190000019205787",
      "title": "java面试一、恒生电子2019面试题（一）",
      "url": "/a/1190000019205787",
      "desc": "万物皆对象，java中对象是类的具体实例，类是对象的的抽象定义。类指的是一类东西，比如书籍、手机，这些都是一类东西或者物品对象：指类的具体试题，比如一本格林童话书、一个苹果手机 注意：对象具有状态（属性...",
      "author": {
        "nick": "四叶草的期待",
        "homepage": "/u/siyecaodeqidai"
      }
    }
  ]
}