{
  "watchNum": "53813",
  "blogs": [
    {
      "id": "1190000019407606",
      "title": "Servlet 异常处理",
      "url": "/a/1190000019407606",
      "desc": "免费Java入门课程：阿里云大学——开发者课堂当一个 Servlet 抛出一个异常时，Web 容器在使用了 exception-type 元素的 web.xml 中搜索与抛出异常类型相匹配的配置。必须在 web.xml 中使用 error-page 元素来指定对...",
      "author": {
        "nick": "开发者学习指南",
        "homepage": "/u/aliyundaxuexiaoliu"
      }
    },
    {
      "id": "1190000019406627",
      "title": "6月10日，En-Tan-Mo强势登陆OK交易所",
      "url": "/a/1190000019406627",
      "desc": "近两年的技术和社区沉淀，En-Tan-Mo披荆斩棘、不负众望，将于2019年6月10日重磅上线OK交易所。作为首次提出并实现SHD完备性的公链项目，En-Tan-Mo一直以来低调深耕技术，而非过多的噱头宣传。四天后，En-Tan-Mo即...",
      "author": {
        "nick": "ETM漫谈区块链",
        "homepage": "/u/entanmo"
      }
    },
    {
      "id": "1190000019402817",
      "title": "线程池没你想的那么简单（续）",
      "url": "/a/1190000019402817",
      "desc": "前言 前段时间写过一篇《线程池没你想的那么简单》，和大家一起撸了一个基本的线程池，具备： 线程池基本调度功能。 线程池自动扩容缩容。 队列缓存线程。 关闭线程池。 这些功能，最后也留下了三个待实现的 feat...",
      "author": {
        "nick": "crossoverJie",
        "homepage": "/u/crossoverjie"
      }
    },
    {
      "id": "1190000019401779",
      "title": "面试官：你是如何使用JDK来实现自己的缓存（支持高并发）？",
      "url": "/a/1190000019401779",
      "desc": "我自己总结的Java学习的系统知识点以及面试问题，已经开源，目前已经 41k+ Star。会一直完善下去，欢迎建议和指导，同时也欢迎Star： [链接]本文转载自：[链接]",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    },
    {
      "id": "1190000019401676",
      "title": "15个经典的Spring面试常见问题",
      "url": "/a/1190000019401676",
      "desc": "我自己总结的Java学习的系统知识点以及面试问题，已经开源，目前已经 41k+ Star。会一直完善下去，欢迎建议和指导，同时也欢迎Star： [链接]",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    },
    {
      "id": "1190000019401006",
      "title": "认识 android-job",
      "url": "/a/1190000019401006",
      "desc": "对于现在的应用来说，在应用生命周期之外运行一些后台任务可以说已经是一项必不可少的需求了。这些任务可能是在某个时间点提醒用户什么事情或同步本地数据到服务器等等。",
      "author": {
        "nick": "极光推送",
        "homepage": "/u/jiguangtuisong"
      }
    },
    {
      "id": "1190000019400946",
      "title": "3分钟干货之Java性能优化-合理使用java.util.Vetor",
      "url": "/a/1190000019400946",
      "desc": "Vector与StringBuffer类似，每次扩展容量时，所有现有元素都要赋值到新的存储空间中。Vector的默认存储能力为10个元素，扩容加倍。",
      "author": {
        "nick": "巅峰大词典",
        "homepage": "/u/lingfeng23"
      }
    },
    {
      "id": "1190000019400925",
      "title": "MySQL存储引擎详解",
      "url": "/a/1190000019400925",
      "desc": "（1）灾难恢复性比较好；（2）支持事务。默认的事务隔离级别为可重复度，通过MVCC（并发版本控制）来实现的。（3）使用的锁粒度为行级锁，可以支持更高的并发；（4）支持外键；（5）配合一些热备工具可以支持在线...",
      "author": {
        "nick": "夏日寒冰",
        "homepage": "/u/xiarihanbing"
      }
    },
    {
      "id": "1190000019400305",
      "title": "Java反射机制",
      "url": "/a/1190000019400305",
      "desc": "Java 反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为 Java 语言的反射...",
      "author": {
        "nick": "1s_Kiwen",
        "homepage": "/u/1s_kiwen"
      }
    },
    {
      "id": "1190000019400182",
      "title": "mybatis逆向工程",
      "url": "/a/1190000019400182",
      "desc": "一.pom文件,加入如下代码 {代码...} 二.resources文件夹下创建mybatis_generate.xml文件 {代码...} 三.运行maven插件命令:mybatis-generator:generate 成功...",
      "author": {
        "nick": "别回头",
        "homepage": "/u/biehuitou_5c112f50b3817"
      }
    },
    {
      "id": "1190000019400005",
      "title": "千万不要这样使用 Arrays.asList !",
      "url": "/a/1190000019400005",
      "desc": "使用Arrays.asList()的原因无非是想将数组或一些元素转为集合,而你得到的集合并不一定是你想要的那个集合。",
      "author": {
        "nick": "码上实战",
        "homepage": "/u/flyhero"
      }
    },
    {
      "id": "1190000019399523",
      "title": "SpringBoot 多线程处理任务 无法@Autowired注入bean问题解决",
      "url": "/a/1190000019399523",
      "desc": "在多线程处理问题时，无法通过@Autowired注入bean，报空指针异常， 在线程中为了线程安全，是防注入的，如果要用到这个类，只能从bean工厂里拿个实例。 解决方法如下： 1.创建一个工具类代码： {代码...} 2.使用...",
      "author": {
        "nick": "EVAO_大个子",
        "homepage": "/u/evao_dagezi"
      }
    },
    {
      "id": "1190000019398995",
      "title": "初学者关于Docker的一些问题记录",
      "url": "/a/1190000019398995",
      "desc": "搭建一个基于springcloud的分布式博客系统,已经实现了基于eureka的配置中心和注册中心，为了减少本地的内存压力，使用docker将配置中心注册中心放到服务器上",
      "author": {
        "nick": "彻底地学",
        "homepage": "/u/chedidixue"
      }
    },
    {
      "id": "1190000019397149",
      "title": "springboot+mybatis+mybatis-plus分页查询（简单实现）",
      "url": "/a/1190000019397149",
      "desc": "最近在研究mybatis，然后就去找简化mybatis开发的工具，发现就有通用Mapper和mybatis-plus两个比较好的可是使用，可是经过对比发现还是mybatis-plus比较好，个人觉得，勿喷。。。",
      "author": {
        "nick": "周兆东",
        "homepage": "/u/zhouzhaodong"
      }
    },
    {
      "id": "1190000019396756",
      "title": "Java 并发设计模式",
      "url": "/a/1190000019396756",
      "desc": "大多数并发问题都是由于变量的共享导致的，多个线程同时读写同一变量便会出现原子性，可见性等问题。局部变量是线程安全的，本质上也是由于各个线程各自拥有自己的变量，避免了变量的共享。",
      "author": {
        "nick": "roseduan",
        "homepage": "/u/roseduan"
      }
    }
  ]
}