{
  "watchNum": "48283",
  "blogs": [
    {
      "id": "1190000018909916",
      "title": "Java并发编程之设计线程安全的类",
      "url": "/a/1190000018909916",
      "desc": "前边我们对线程安全性的分析都停留在一两个可变共享变量的基础上，真实并发程序中可变共享变量会非常多，在出现安全性问题的时候很难准确定位是哪块儿出了问题，而且修复问题的难度也会随着程序规模的扩大而提升(...",
      "author": {
        "nick": "wayen",
        "homepage": "/u/wayen"
      }
    },
    {
      "id": "1190000018909802",
      "title": "Spring Cloud 参考文档（服务发现：Eureka客户端）",
      "url": "/a/1190000018909802",
      "desc": "服务发现是基于微服务架构的关键原理之一，尝试手动配置每个客户端或某种形式的约定可能很难做到并且可能很脆弱，Eureka是Netflix Service Discovery服务器和客户端，服务器可以被配置和部署为高可用性，每个服务...",
      "author": {
        "nick": "博弈",
        "homepage": "/u/lfheart"
      }
    },
    {
      "id": "1190000018909545",
      "title": "eclipse",
      "url": "/a/1190000018909545",
      "desc": "注释 Ctrl+Shift+/取消注释 Ctrl+Shift+\\搜索 Ctrl+h关闭当前Editer Ctrl+W 关闭所有打开的Editer Ctrl+Shift+F4 在workspace中搜索引用 Ctrl+Shift+g定位到对于的匹配符(譬如{}) Ctrl+Shift+p正向增量查找(按下C...",
      "author": {
        "nick": "cashew",
        "homepage": "/u/madrid"
      }
    },
    {
      "id": "1190000018909340",
      "title": "Java并发编程之指令重排序",
      "url": "/a/1190000018909340",
      "desc": "如果说内存可见性问题已经让你抓狂了，那么下边的这个指令重排序的事儿估计就要骂娘了～这事儿还得从一段代码说起：",
      "author": {
        "nick": "wayen",
        "homepage": "/u/wayen"
      }
    },
    {
      "id": "1190000018909119",
      "title": "D2 日报 2019年4月18日",
      "url": "/a/1190000018909119",
      "desc": "➡️ NtesEyes/pylane 非中文 watch 7 star 164 fork 10 基于 gdb 的 Python 进程注入和调试工具 github.com",
      "author": {
        "nick": "FairyEver",
        "homepage": "/u/fairyever"
      }
    },
    {
      "id": "1190000018909060",
      "title": "在 IntelliJ IDEA 中部署应用到服务器(Eclipse)",
      "url": "/a/1190000018909060",
      "desc": "在之前的文章《在 Intellij IDEA 中部署 Java 应用到 阿里云 ECS》中讲解了如何将一个本地应用部署到阿里云 ECS 上去，有些读者反馈目前还有一些测试机器是在经典网络，甚至是在本地机房中，咨询是否可以通过 Clo...",
      "author": {
        "nick": "阿里云云栖社区",
        "homepage": "/u/yunqishequ_5aa899aad5395"
      }
    },
    {
      "id": "1190000018908606",
      "title": "Java并发编程之原子性操作",
      "url": "/a/1190000018908606",
      "desc": "上头一直在说以线程为基础的并发编程的好处了，什么提高处理器利用率啦，简化编程模型啦。但是砖家们还是认为并发编程是程序开发中最不可捉摸、最诡异、最扯犊子、最麻烦、最恶心、最心烦、最容易出错、最不符合...",
      "author": {
        "nick": "wayen",
        "homepage": "/u/wayen"
      }
    },
    {
      "id": "1190000018907619",
      "title": "面试官问你数组和ArrayList怎么答？",
      "url": "/a/1190000018907619",
      "desc": "我在想每个人在面试的时候都会被问到集合相关的问题，有好大一部分人在回答的时候并没有那么多的逻辑性，通常都是想到哪里说到哪里，这篇文章大概的捋一捋关于集合的相关问题。在每种编程语言中，都会有循环、数...",
      "author": {
        "nick": "布鲁斯船长",
        "homepage": "/u/ambition_go"
      }
    },
    {
      "id": "1190000018906668",
      "title": "优秀代码的必知必会（一）？",
      "url": "/a/1190000018906668",
      "desc": "静态工厂方法的优点： 不像构造方法，它是有名字的。 它不需要每次调用时都创建一个新对象。 它可以返回 其返回类型的任何子类型的对象。 返回对象的类可以根据输入参数的不同而不同。 在编写包含该方法的类时，...",
      "author": {
        "nick": "清尘",
        "homepage": "/u/qingchen_5cb000715a410"
      }
    },
    {
      "id": "1190000018905763",
      "title": "什么性格的人适合做好的程序员？镜花水月",
      "url": "/a/1190000018905763",
      "desc": "本博客 猫叔的博客，转载请申明出处 看看你是不是能当好程序员的料！ 就按照0和1的说法来说，我分为正反两个面，正如标题所说的，我将性格分为黑和白。 白：为乐观派、理想主义； 黑：为悲观派、现实主义； 其实...",
      "author": {
        "nick": "Java猫说",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000018904163",
      "title": "leetcode403. Frog Jump",
      "url": "/a/1190000018904163",
      "desc": "假设有一只青蛙需要过河，河中会有一些石子，青蛙必须踩在石头上才算成功。石头的位置用整数数组来表示。青蛙的行走规则为：假设上一次青蛙跳了k格，则当前青蛙只能跳k-1或k或k+1格，且青蛙只能向前跳，不能向后跳。",
      "author": {
        "nick": "raledong",
        "homepage": "/u/raledong"
      }
    },
    {
      "id": "1190000018904080",
      "title": "\b[Java并发-4]解决Java死锁的问题",
      "url": "/a/1190000018904080",
      "desc": "在上一篇中，我们尝试使用了 Account.class作为互斥锁，来解决转账问题。但是很容易发现这样，所有的转账操作都是串行的，性能太差了。",
      "author": {
        "nick": "df007df",
        "homepage": "/u/df007df"
      }
    },
    {
      "id": "1190000018903915",
      "title": "Java系列之数组",
      "url": "/a/1190000018903915",
      "desc": "本来打算温习一下注解方面的内容作为今天的推送，但是来不及写了，那就一起来看一下数组，数组是用来存放一组具有相同类型数据的数据结构，通过下标来访问数组中的元素。",
      "author": {
        "nick": "jzman",
        "homepage": "/u/jzman"
      }
    },
    {
      "id": "1190000018902998",
      "title": "MyBatis 级联",
      "url": "/a/1190000018902998",
      "desc": "因为上图中,学生和学生关系为一对一关系.由于是数据库的一对一关系,那么对应的bean中,也应该是一对一关系举栗子的表为学生表和学生证表其中学生证表的中的学生编号的外键为学生表的主键那么在学生表的POJO对象中,...",
      "author": {
        "nick": "小小____",
        "homepage": "/u/xiaoxiao___________"
      }
    },
    {
      "id": "1190000018902886",
      "title": "MyBatis 映射器",
      "url": "/a/1190000018902886",
      "desc": "ps 一个用于生成MyBatis配置文件的插件 mybatis-generator使用方法呢, 是加入maven插件中 然后执行相关命令可以实现自动生成MyBatis配置文件",
      "author": {
        "nick": "小小____",
        "homepage": "/u/xiaoxiao___________"
      }
    }
  ]
}