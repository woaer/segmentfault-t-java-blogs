{
  "watchNum": "29788",
  "blogs": [
    {
      "id": "1190000016500256",
      "title": "递归实现迷宫求解",
      "url": "/a/1190000016500256",
      "desc": "这周数据结构老师布置了一个作业，用栈来实现迷宫的求解，本来是要求自己写一个栈的类来实现，但是自己懒得写了，因为递归也是栈的一种实现，就直接用了递归来写。",
      "author": {
        "nick": "鲸冬香",
        "homepage": "/u/jingdongxiang"
      }
    },
    {
      "id": "1190000016499989",
      "title": "【跃迁之路】【596天】程序员高效学习方法论探索系列（实验阶段353-2018.09.24）",
      "url": "/a/1190000016499989",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，， 每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000016499520",
      "title": "[LeetCode] 37. Sudoku Solver",
      "url": "/a/1190000016499520",
      "desc": "Write a program to solve a Sudoku puzzle by filling the empty cells.",
      "author": {
        "nick": "linspiration",
        "homepage": "/u/linspiration"
      }
    },
    {
      "id": "1190000016499499",
      "title": "[LeetCode] 32. Longest Valid Parentheses",
      "url": "/a/1190000016499499",
      "desc": "Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.",
      "author": {
        "nick": "linspiration",
        "homepage": "/u/linspiration"
      }
    },
    {
      "id": "1190000016498072",
      "title": "【跃迁之路】【595天】程序员高效学习方法论探索系列（实验阶段352-2018.09.23）",
      "url": "/a/1190000016498072",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，， 每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000016498000",
      "title": "Java 设计模式之策略模式",
      "url": "/a/1190000016498000",
      "desc": "策略模式 (Strategy Pattern) 是指对一系列的算法定义，并将每一个算法封装起来，而且使它们还可以相互替换。此模式让算法的变化独立于使用算法的客户。",
      "author": {
        "nick": "留兰香",
        "homepage": "/u/zchen96"
      }
    },
    {
      "id": "1190000016497280",
      "title": "[LeetCode] 441. Arranging Coins",
      "url": "/a/1190000016497280",
      "desc": "You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.",
      "author": {
        "nick": "linspiration",
        "homepage": "/u/linspiration"
      }
    },
    {
      "id": "1190000016496185",
      "title": "Annotation注解详细介绍",
      "url": "/a/1190000016496185",
      "desc": "目录介绍 1.Annotation库的简单介绍 2.@Nullable和@NonNull 3.资源类型注释 4.类型定义注释 5.线程注释 6.RGB颜色纸注释 7.值范围注释 8.权限注释 9.重写函数注释 10.返回值注释 11.@Keep注释 12.@SuppressWarnin...",
      "author": {
        "nick": "潇湘剑雨",
        "homepage": "/u/xiangjianyu"
      }
    },
    {
      "id": "1190000016495989",
      "title": "Tomcat优化笔记",
      "url": "/a/1190000016495989",
      "desc": "关于Tomcat的优化点之多，我估计没有上万，也有成千。不同的应用场景，不同的架构，不同的需求，都会对优化设置有不同要求。在这里我所记述的只是我自己在一些Tomcat应用中所设置的优化项，以备不时之需，并不是...",
      "author": {
        "nick": "张京",
        "homepage": "/u/fengerzh"
      }
    },
    {
      "id": "1190000016494624",
      "title": "【跃迁之路】【594天】程序员高效学习方法论探索系列（实验阶段351-2018.09.22）",
      "url": "/a/1190000016494624",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，， 每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000016493968",
      "title": "浅谈java中的i=i++",
      "url": "/a/1190000016493968",
      "desc": "在上图中，我首先进行了运行，可以看到结果，我们的i并不是如大多人猜测的那样为13输出 ，而是看上去没有做这个自增的操作，然而这是为什么呢？",
      "author": {
        "nick": "Vincent",
        "homepage": "/u/vincent_blog"
      }
    },
    {
      "id": "1190000016491262",
      "title": "Java-FlameGraph火焰图",
      "url": "/a/1190000016491262",
      "desc": "什么是FlameGraph火焰图？怎么用？以下会为你一一解答。 Let's Go! 1.结论 如果能生成出来对应图表，分析java使用cpu性能很好用。 但是有时生成出来的堆栈写着Unknown，没有具体堆栈信息，会比较抓狂。 如想获取...",
      "author": {
        "nick": "joe_chou",
        "homepage": "/u/joe_chou"
      }
    },
    {
      "id": "1190000016488964",
      "title": "良好的RPC接口设计，需要注意这些方面",
      "url": "/a/1190000016488964",
      "desc": "RPC 框架的讨论一直是各个技术交流群中的热点话题，阿里的 dubbo，新浪微博的 motan，谷歌的 grpc，以及不久前蚂蚁金服开源的 sofa，都是比较出名的 RPC 框架。RPC 框架，或者一部分人习惯称之为服务治理框架，更...",
      "author": {
        "nick": "bali",
        "homepage": "/u/bali_5a0a92fba16aa"
      }
    },
    {
      "id": "1190000016488763",
      "title": "Java编程基础19——Map集合&斗地主案例",
      "url": "/a/1190000016488763",
      "desc": "1_Map集合概述和特点 A:Map接口概述 查看API可以知道： 将键映射到值的对象 一个映射不能包含重复的键 每个键最多只能映射到一个值 B:Map接口和Collection接口的不同 Map是双列的,Collection是单列的 Map的键唯一...",
      "author": {
        "nick": "扎瓦",
        "homepage": "/u/ideas"
      }
    },
    {
      "id": "1190000016488521",
      "title": "怎么用Java从网上下载一个视频下来",
      "url": "/a/1190000016488521",
      "desc": "原理：就是用URL对象与目标地址建立一个链接，用IO流的方式从这个链接上把视频的二进制数据读取下载然后再写入本地文件。",
      "author": {
        "nick": "13678398293",
        "homepage": "/u/13678398293"
      }
    }
  ]
}