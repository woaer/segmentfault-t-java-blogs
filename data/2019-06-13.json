{
  "watchNum": "54552",
  "blogs": [
    {
      "id": "1190000019468233",
      "title": "【牛客网】-- 日日刷(第三天)",
      "url": "/a/1190000019468233",
      "desc": "=========================================================================",
      "author": {
        "nick": "牛帅",
        "homepage": "/u/diguaganer"
      }
    },
    {
      "id": "1190000019466569",
      "title": "Android保存多张图片到本地",
      "url": "/a/1190000019466569",
      "desc": "目录介绍 01.实际开发保存图片遇到的问题 02.直接用http请求图片并保存本地 03.用glide下载图片保存本地 04.如何实现连续保存多张图片 05.关于其他介绍 好消息 博客笔记大汇总【16年3月到至今】，包括Java基础及...",
      "author": {
        "nick": "潇湘剑雨",
        "homepage": "/u/xiangjianyu"
      }
    },
    {
      "id": "1190000019466502",
      "title": "spring statemachine的企业可用级开发指南3-多个状态机共存",
      "url": "/a/1190000019466502",
      "desc": "1、多个状态机的搞法在实际的企业应用中，基本不可能只有一个状态机流程在跑，比如订单，肯定是很多个订单在运行，每个订单都有自己的订单状态机流程，但上一章的例子，大家可以试一下，当执行到一个状态时，再次...",
      "author": {
        "nick": "弯月残照飞檐",
        "homepage": "/u/wanyuecanzhaofei"
      }
    },
    {
      "id": "1190000019465082",
      "title": "Java 基础总结",
      "url": "/a/1190000019465082",
      "desc": "优点：对程序性能要求比较高，而类调用时开销比较大，比较消耗资源，面向过程开发避免了这一弊端，性能较好",
      "author": {
        "nick": "followingMan",
        "homepage": "/u/followingman"
      }
    },
    {
      "id": "1190000019463997",
      "title": "springCloud学习2(服务发现)",
      "url": "/a/1190000019463997",
      "desc": "本篇代码存放于:github 一、服务发现架构   服务发现架构通常具有下面 4 个概念： 服务注册：服务如何使用服务发现代理进行注册？ 服务地址的客户端查找：服务客户端查找服务信息的方法是什么？ 信息共享：如何跨...",
      "author": {
        "nick": "flex",
        "homepage": "/u/flex_5af4f84597dc9"
      }
    },
    {
      "id": "1190000019462883",
      "title": "Spring Boot 配置文件中的花样，看这一篇足矣！",
      "url": "/a/1190000019462883",
      "desc": "在快速入门一节中，我们轻松的实现了一个简单的RESTful API应用，体验了一下Spring Boot给我们带来的诸多优点，我们用非常少的代码量就成功的实现了一个Web应用，这是传统的Spring应用无法办到的，虽然我们在实现...",
      "author": {
        "nick": "程序猿DD",
        "homepage": "/u/coderdd"
      }
    },
    {
      "id": "1190000019462443",
      "title": "分表后需要注意的二三事",
      "url": "/a/1190000019462443",
      "desc": "前言 本篇是上一篇《一次分表踩坑实践的探讨》，所以还没看过的朋友建议先看上文。 还是先来简单回顾下上次提到了哪些内容： 分表策略：哈希、时间归档等。 分表字段的选择。 数据迁移方案。 而本篇文章的背景是...",
      "author": {
        "nick": "crossoverJie",
        "homepage": "/u/crossoverjie"
      }
    },
    {
      "id": "1190000019462252",
      "title": "Tomcat 7 类加载器是如何实现的",
      "url": "/a/1190000019462252",
      "desc": "与许多服务器应用程序一样，Tomcat安装了各种类加载器（即实现的类java.lang.ClassLoader），以允许容器的不同部分和容器上运行的Web应用程序访问可用类和资源的不同存储库。此机制用于提供Servlet规范2.4版中定...",
      "author": {
        "nick": "Yujiaao",
        "homepage": "/u/yujiaao"
      }
    },
    {
      "id": "1190000019461971",
      "title": "Java设计模式-单例模式（Singleton Pattern）",
      "url": "/a/1190000019461971",
      "desc": "Ensure a class has only one instance, and provide a global point of access to it.确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。",
      "author": {
        "nick": "tianranll",
        "homepage": "/u/tianranll"
      }
    },
    {
      "id": "1190000019461133",
      "title": "基于Java的同花顺股票数据爬虫",
      "url": "/a/1190000019461133",
      "desc": "问题来源 今天与同学聊天，得知他有个任务是抓取同花顺网站上的股票数据，有点兴趣，便做了相关实验。 介绍 网站地址：[链接] 网站界面： 爬取内容：图中全部股票专栏表格中的数据 观察 浏览器：Firefox 观察现象...",
      "author": {
        "nick": "余大鱼",
        "homepage": "/u/yudayu"
      }
    },
    {
      "id": "1190000019460901",
      "title": "乘积数组",
      "url": "/a/1190000019460901",
      "desc": "给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],其中B中的元素B[i]=A[0]A[1]...A[i-1]A[i+1]...A[n-1]。不能使用除法。",
      "author": {
        "nick": "flyingcr",
        "homepage": "/u/chenrong_flying"
      }
    },
    {
      "id": "1190000019460568",
      "title": "MongoDB的特性和优势",
      "url": "/a/1190000019460568",
      "desc": "△事务支持MongoDB 目前只支持单文档事务，需要复杂事务支持的场景暂时不适合 △灵活的文档模型JSON 格式存储最接近真实对象模型，对开发者友好，方便快速开发迭代 △高可用复制集满足数据高可靠、服务高可用的需求...",
      "author": {
        "nick": "巅峰大词典",
        "homepage": "/u/lingfeng23"
      }
    },
    {
      "id": "1190000019460183",
      "title": "基本类型包装类的简单入门",
      "url": "/a/1190000019460183",
      "desc": "我们提出一个需求，将520的二进制、八进制、十六进制算出来，对于这种基本类型的一些操作，包装类就可以很好地解决这些问题。",
      "author": {
        "nick": "BWH_Steven",
        "homepage": "/u/bwh_steven"
      }
    },
    {
      "id": "1190000019459417",
      "title": "java动态代理的理解",
      "url": "/a/1190000019459417",
      "desc": "静态代理 {代码...} 代理类持有目标类的引用 动态代理 {代码...} 要有接口 要实现InocationHandler 通过Proxy.newInstance来生成代理类 通过强转取得目标类的实例 如何理解动态代理 当调用theProxy的method1时，...",
      "author": {
        "nick": "直抒胸臆",
        "homepage": "/u/zhishuxiongyi"
      }
    },
    {
      "id": "1190000019459191",
      "title": "HashMap源码解析（一）",
      "url": "/a/1190000019459191",
      "desc": "常量 {代码...} 基本哈希bin节点Node {代码...} 静态工具类（方法） hash(Object key) {代码...} 范例 {代码...} comparableClassFor 如果它的形式为“class C implements Comparable <C>”，则返回x的Class...",
      "author": {
        "nick": "刘启威",
        "homepage": "/u/liuqiwei"
      }
    }
  ]
}