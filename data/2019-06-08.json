{
  "watchNum": "53995",
  "blogs": [
    {
      "id": "1190000019418456",
      "title": "开源项目几点心得，Java架构必会几大技术点",
      "url": "/a/1190000019418456",
      "desc": "Java架构必会几大技术点 关于学习架构，必须会的几点技术 列表项目 java反射技术 xml文件处理 properties属性文件处理 线程安全机制 annocation注解 设计模式 代理机制（aop） serlvet基础(过滤器等等) 几样比较...",
      "author": {
        "nick": "scott",
        "homepage": "/u/jeecg"
      }
    },
    {
      "id": "1190000019418273",
      "title": "设计模式之单例模式",
      "url": "/a/1190000019418273",
      "desc": "0x01.定义与类型 定义：保证一个类仅有一个实例，并提供一个全局访问点 类型：创建型 UML 单例模式的基本要素 私有的构造方法 指向自己实例的私有静态引用 以自己实例为返回值的静态的公有的方法 0x02.适用场景 ...",
      "author": {
        "nick": "猿在天",
        "homepage": "/u/cos2a"
      }
    },
    {
      "id": "1190000019417975",
      "title": "乐字节-Java8核心特性实战之Stream（流）",
      "url": "/a/1190000019417975",
      "desc": "大家好，我是乐字节的小乐。说起流，我们会联想到手机、电脑组装流水线,物流仓库商品包装流水线等等,如果把手机 ,电脑,包裹看做最终结果的话,那么加工商品前的各种零部件就可以看做数据源，而中间一系列的加工作...",
      "author": {
        "nick": "乐字节",
        "homepage": "/u/lezijie"
      }
    },
    {
      "id": "1190000019417750",
      "title": "JAVA前后端分离开发环境搭建详细教程——JeecgBoot快速开发平台",
      "url": "/a/1190000019417750",
      "desc": "目录索引： 后端开发工具 前端开发工具 Nodejs镜像 WebStorm入门配置 {代码...} 后端开发工具 序号 工具 参考 1 eclipse安装lombok插件 [链接] 2 Eclipse自定义皮肤主题 [链接] 3 Eclipse常用快捷键 [链接] 前端...",
      "author": {
        "nick": "scott",
        "homepage": "/u/jeecg"
      }
    },
    {
      "id": "1190000019417697",
      "title": "Jeecg-Boot 极简部署方案",
      "url": "/a/1190000019417697",
      "desc": "基于 spring boot 特性 1、首先修改配置，去掉项目名 jeecg-boot {代码...} 2、修改路由History 模式为“hash” {代码...} 然后 ant-design-jeecg-vue 运行 build {代码...} 3、然后将编译之后dist下的文件复制到 j...",
      "author": {
        "nick": "scott",
        "homepage": "/u/jeecg"
      }
    },
    {
      "id": "1190000019417591",
      "title": "什么是Java内部类？",
      "url": "/a/1190000019417591",
      "desc": "内部类 (一) 概述 把类定义在另一个类的内部，该类就被称为内部类。 举例：把类Inner定义在类Outer中，类Inner就被称为内部类。 {代码...} (二) 内部类的访问规则 ​ A:可以直接访问外部类的成员，包括私有 ​ B:外...",
      "author": {
        "nick": "BWH_Steven",
        "homepage": "/u/bwh_steven"
      }
    },
    {
      "id": "1190000019416278",
      "title": "leetcode363. Max Sum of Rectangle No Larger Than K",
      "url": "/a/1190000019416278",
      "desc": "现有一个由整数构成的矩阵，问从中找到一个子矩阵，要求该子矩阵中各个元素的和为不超过k的最大值，问子矩阵中元素的和为多少?注：后面的文章中将使用[左上角顶点坐标，右下角顶点坐标]来表示一个矩阵，如[(1,2),...",
      "author": {
        "nick": "raledong",
        "homepage": "/u/raledong"
      }
    },
    {
      "id": "1190000019415993",
      "title": "ArrayList和LinkedList选用要点",
      "url": "/a/1190000019415993",
      "desc": "少于10个元素的，统一使用常用的array就可以了 需要从开头或中间，而不是在最后删除或新增(不包括修改)元素的，用linked。其他情况用array 用array不要在开头或中间增删元素，整个数组移位，很慢 用linked不要使...",
      "author": {
        "nick": "ouyida3",
        "homepage": "/u/ouyida3"
      }
    },
    {
      "id": "1190000019415763",
      "title": "【Netty】如何接入新连接",
      "url": "/a/1190000019415763",
      "desc": "前文再续，书接上一回【NioEventLoop】。在研究NioEventLoop执行过程的时候，检测IO事件（包括新连接），处理IO事件，执行所有任务三个过程。其中检测IO事件中通过持有的selector去轮询事件，检测出新连接。这里...",
      "author": {
        "nick": "zero",
        "homepage": "/u/zero_5b9fc2c32c74c"
      }
    },
    {
      "id": "1190000019415611",
      "title": "Activiti工作流从入门到入土：完整Hello World大比拼（Activiti工作流 API结合实例讲解）",
      "url": "/a/1190000019415611",
      "desc": "本来想着闲来无事，前面在项目中刚刚用到了工作流 Activiti 框架，写写博客的，但是，事情总是纷纷杂杂，一直拖延到现在，这一节原本想要写一下关于 Activiti 的 API ，但是，想着太多这样的博客了，而且显得太生...",
      "author": {
        "nick": "欧阳思海",
        "homepage": "/u/sihai_5ae5ba9170388"
      }
    },
    {
      "id": "1190000019415576",
      "title": "Activiti工作流从入门到入土：整合spring",
      "url": "/a/1190000019415576",
      "desc": "在上一节中，通过一个入门程序，把activiti的环境准备好了，这一节，将整合spring，并且部署一个最简单的bpmn流程图。",
      "author": {
        "nick": "欧阳思海",
        "homepage": "/u/sihai_5ae5ba9170388"
      }
    },
    {
      "id": "1190000019415546",
      "title": "Activiti工作流从入门到入土：入门实例",
      "url": "/a/1190000019415546",
      "desc": "这里我们使用Idea进行工作流开发，虽然Idea对于工作流的友好度不是很好，因为会有一些小的bug，但是，Idea对于Java的开发还是非常的好的。",
      "author": {
        "nick": "欧阳思海",
        "homepage": "/u/sihai_5ae5ba9170388"
      }
    },
    {
      "id": "1190000019415511",
      "title": "Activiti工作流从入门到入土：工作流简介",
      "url": "/a/1190000019415511",
      "desc": "Activiti5是由Alfresco软件在2010年5月17日发布的业务流程管理（BPM）框架，它是覆盖了业务流程管理、工作流、服务协作等领域的一个开源的、灵活的、易扩展的可执行流程语言框架。Activiti基于Apache许可的开源BP...",
      "author": {
        "nick": "欧阳思海",
        "homepage": "/u/sihai_5ae5ba9170388"
      }
    },
    {
      "id": "1190000019415484",
      "title": "ArrayList和LinkedList使用要点",
      "url": "/a/1190000019415484",
      "desc": "少于10个元素的，统一使用常用的array就可以了 需要从中间，而不是最开始或者在结尾增加或者删除或者修改元素的，用linked。其他情况用list 用array不要在中间增删元素 用linked不要使用get(i)，很慢。用迭代循环",
      "author": {
        "nick": "ouyida3",
        "homepage": "/u/ouyida3"
      }
    },
    {
      "id": "1190000019415471",
      "title": "Java8 之 lambda 表达式、方法引用、函数式接口、默认方式、静态方法",
      "url": "/a/1190000019415471",
      "desc": "今天我来聊聊 Java8 的一些新的特性，确实 Java8 的新特性的出现，给开发者带来了非常大的便利，可能刚刚开始的时候会有点不习惯的这种写法，但是，当你真正的熟悉了之后，你一定会爱上这些新的特性的，这篇文章...",
      "author": {
        "nick": "欧阳思海",
        "homepage": "/u/sihai_5ae5ba9170388"
      }
    }
  ]
}