{
  "watchNum": "54417",
  "blogs": [
    {
      "id": "1190000019456498",
      "title": "springboot多数据源配置",
      "url": "/a/1190000019456498",
      "desc": "二.注意不同的数据源的mapper类一定不能放在一个包下,否则@mapperscan只扫描一个数据源,即只会使用一个数据源,里一个不会加载",
      "author": {
        "nick": "别回头",
        "homepage": "/u/biehuitou_5c112f50b3817"
      }
    },
    {
      "id": "1190000019454042",
      "title": "工厂方法",
      "url": "/a/1190000019454042",
      "desc": "定义：定义一个创建对象的接口，但让实现这个接口的类决定实例化哪个类，工厂方法让类的实例化推迟到子类中进行。",
      "author": {
        "nick": "LuoJKL",
        "homepage": "/u/luojkl"
      }
    },
    {
      "id": "1190000019453053",
      "title": "今日头条极速版邀请码是什么？实现思路是怎么样的？",
      "url": "/a/1190000019453053",
      "desc": "互联网公司推出新产品的时候，经常使用邀请码（C8RB8DXF）作为一种运营手段，在一定的时间内，只有具有邀请资格的用户，才能参与到早期产品的体验中去。这么做，一方面为了体现产品体验的稀缺性，鼓励用户抢购，...",
      "author": {
        "nick": "溪杨杨",
        "homepage": "/u/xiyangyang_5ce7902b2cbe7"
      }
    },
    {
      "id": "1190000019452965",
      "title": "简单工厂",
      "url": "/a/1190000019452965",
      "desc": "简单工厂 定义：由一个工厂对象决定创建出哪一种产品类的实例 类型：创建性，但不属于GOF23种设计模式 适用场景 工厂类负责创建的对象比较少 客户端（应用层）只知道传入工厂类的参数，对于如何创建对象（逻辑）...",
      "author": {
        "nick": "LuoJKL",
        "homepage": "/u/luojkl"
      }
    },
    {
      "id": "1190000019452785",
      "title": "【牛客网】-- 日日刷(第二天)",
      "url": "/a/1190000019452785",
      "desc": "=========================================================================",
      "author": {
        "nick": "牛帅",
        "homepage": "/u/diguaganer"
      }
    },
    {
      "id": "1190000019452271",
      "title": "在浏览器输入一个网址，按回车之后发生了什么",
      "url": "/a/1190000019452271",
      "desc": "<1> 查找浏览器缓存,浏览器会保存之前访问过的一些网站DNS（域名系统 英文：Domain Name System）信息。",
      "author": {
        "nick": "沧海一粟",
        "homepage": "/u/canghaiyisu_5a91066673c15"
      }
    },
    {
      "id": "1190000019451550",
      "title": "spring statemachine的企业可用级开发指南2-先跑起来",
      "url": "/a/1190000019451550",
      "desc": "1、来个spring boot去start.spring.io新建一个springboot的项目，虽然我对spirngboot也有不少的牢骚，但作为demo的开始，还是一个很好用的脚手架，记得选spring statemachine，为了方便，我还选了web 模块",
      "author": {
        "nick": "弯月残照飞檐",
        "homepage": "/u/wanyuecanzhaofei"
      }
    },
    {
      "id": "1190000019451180",
      "title": "查找字符数组中出现次数最多的字符",
      "url": "/a/1190000019451180",
      "desc": "给定一个字符数组，例如char[] chars = { 'a', 'b', 'b', 'b', 'b', 'c', 'a', 'a', 'a'};找出数组中出现次数最多的字符，如果存在相同次数的字符，取出现较早者。一个问题的解决方案有多种：",
      "author": {
        "nick": "平湖",
        "homepage": "/u/eahau"
      }
    },
    {
      "id": "1190000019451121",
      "title": "通熟易懂的设计模式（二）",
      "url": "/a/1190000019451121",
      "desc": "组合模式看起来就像对象组的树形结构，一个对象里面包含一个或一组其他的对象。它是属于结构型模式。例如，一个公司包括很多个部门，每个部门又包括很多人，这个用数据结构来表示就是树形结构，实际上也是用到来...",
      "author": {
        "nick": "清尘",
        "homepage": "/u/qingchen_5cb000715a410"
      }
    },
    {
      "id": "1190000019450676",
      "title": "浅谈双重检查锁定和延迟初始化",
      "url": "/a/1190000019450676",
      "desc": "在Java多线程程序中，有时需要采用延迟初始化来降低初始化类和创建对象的开销，双重检查锁定是常见的延迟初始化技术，但它是一种错误的用法",
      "author": {
        "nick": "建飞",
        "homepage": "/u/jianfei_pang"
      }
    },
    {
      "id": "1190000019450387",
      "title": "Java系列之内部类",
      "url": "/a/1190000019450387",
      "desc": "今天温习一下 Java 中的内部类，内部类一般有如下几种：静态内部类、成员内部类、匿名内部类和方法内部类，下文中将主要介绍静态内部类和成员内部类，主要内容如下：",
      "author": {
        "nick": "jzman",
        "homepage": "/u/jzman"
      }
    },
    {
      "id": "1190000019449800",
      "title": "Java开发工作一年毕业生的感悟",
      "url": "/a/1190000019449800",
      "desc": "前言:夏天到了，人也变得些许焦躁。转眼工作一年了，想着写点什么来总结一下我这个IT新人的起起伏伏。毕竟从刚入职不久，我这颗跳槽的心一直蠢蠢欲动。都怪自己大学不努力，在人生的许多节骨眼上被动的做出了选择...",
      "author": {
        "nick": "Jacob",
        "homepage": "/u/jacob_5ccd514dcc945"
      }
    },
    {
      "id": "1190000019448857",
      "title": "红黑树查找总结",
      "url": "/a/1190000019448857",
      "desc": "从根结点开始查找，把根结点设置为当前结点；若当前结点为空，返回null；若当前结点不为空，用当前结点的key跟查找key作比较；若当前结点key等于查找key，那么该key就是查找目标，返回当前结点；若当前结点key大...",
      "author": {
        "nick": "巅峰大词典",
        "homepage": "/u/lingfeng23"
      }
    },
    {
      "id": "1190000019448820",
      "title": "JAVA知识梳理",
      "url": "/a/1190000019448820",
      "desc": "由于最近一个项目需要,需要学习JAVA知识,学习的过程中做了一些笔记,主要以知识点记录为主,现在分享出来供参考.大部分内容是参考的自强学堂.这里做了归纳.接口:",
      "author": {
        "nick": "JcTung",
        "homepage": "/u/jctung"
      }
    },
    {
      "id": "1190000019448517",
      "title": "spring statemachine的企业可用级开发指南1-说些废话",
      "url": "/a/1190000019448517",
      "desc": "1、背景在我打算学习spring statemachine的时候，我几乎看过了所有网上的中文教程，基本上都处于浅尝辄止的阶段，有几篇讲的比较深入的，都只是堆代码，具体用在什么地方，都语焉不详，我打算把我一路摸索的过程...",
      "author": {
        "nick": "弯月残照飞檐",
        "homepage": "/u/wanyuecanzhaofei"
      }
    }
  ]
}