{
  "watchNum": "38516",
  "blogs": [
    {
      "id": "1190000018019127",
      "title": "准备下次编程面试前你应该知道的数据结构",
      "url": "/a/1190000018019127",
      "desc": "国外 IT 教育学院 Educative.io 创始人 Fahim ul Haq 写过一篇过万赞的文章《The top data structures you should know for your next coding interview》,总结了程序员面试中需要掌握的 8 种数据结构知识。Fahim...",
      "author": {
        "nick": "程序员小吴",
        "homepage": "/u/shuidonghanxing"
      }
    },
    {
      "id": "1190000018017703",
      "title": "Spring Boot 实战 | 如何使用 IDEA 构建 Spring Boot 工程",
      "url": "/a/1190000018017703",
      "desc": "新年立了个 flag，好好运营这个公众号。具体来说，就是每周要写两篇文章在这个号发表。刚立的 flag 可不能这么快打脸。下面送上本周第一篇。本文我们将介绍嵌入 Intellij IDEA 中的 Spring Initializr 工具，它同...",
      "author": {
        "nick": "一个优秀的废人",
        "homepage": "/u/nasus"
      }
    },
    {
      "id": "1190000018017540",
      "title": "测试",
      "url": "/a/1190000018017540",
      "desc": "博文标题 一.列表一 1.子列表1 2.子列表2 3.子列表3 一.列表二 1.子列表1 2.子列表2 3.子列表3",
      "author": {
        "nick": "姚根深",
        "homepage": "/u/yaogenshen"
      }
    },
    {
      "id": "1190000018017382",
      "title": "JVM（四）垃圾回收的实现算法和执行细节",
      "url": "/a/1190000018017382",
      "desc": "上一篇我们讲了垃圾标记的一些实现细节和经典算法，而本文将系统的讲解一下垃圾回收的经典算法，和Hotspot虚拟机执行垃圾回收的一些实现细节，比如安全点和安全区域等。",
      "author": {
        "nick": "王磊的博客",
        "homepage": "/u/vipstone"
      }
    },
    {
      "id": "1190000018016406",
      "title": "dubbo源码解析（二十七）远程调用——injvm本地调用",
      "url": "/a/1190000018016406",
      "desc": "dubbo是一个远程调用的框架，但是它没有理由不支持本地调用，本文就要讲解dubbo关于本地调用的实现。本地调用要比远程调用简单的多。",
      "author": {
        "nick": "CrazyHzm",
        "homepage": "/u/mmmmm_592a5e72c8ea7"
      }
    },
    {
      "id": "1190000018015024",
      "title": "【跃迁之路】【704天】程序员高效学习方法论探索系列（实验阶段461-2019.1.24）",
      "url": "/a/1190000018015024",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000018014314",
      "title": "在Java中怎样实现多线程？Java线程的四种状态",
      "url": "/a/1190000018014314",
      "desc": "方法一：继承 Thread 类，覆盖方法 run()，我们在创建的 Thread 类的子类中重写 run() ,加入线程所要执行的代码即可。",
      "author": {
        "nick": "尚学堂明辉",
        "homepage": "/u/shangxuetangminghui"
      }
    },
    {
      "id": "1190000018013837",
      "title": "logback的简单使用",
      "url": "/a/1190000018013837",
      "desc": "logback当前分成三个模块：logback-core,logback- classic和logback-access。",
      "author": {
        "nick": "荆轲乐逍遥",
        "homepage": "/u/panjingg"
      }
    },
    {
      "id": "1190000018012307",
      "title": "Java 23种设计模式 之单例模式 7种实现方式",
      "url": "/a/1190000018012307",
      "desc": "一、懒汉式（线程不安全） {代码...} 二、懒汉式（线程安全） {代码...} 三、饿汉式（线程安全） {代码...} 四、缓存实现（线程不安全） {代码...} 五、双重检查加锁（懒汉式 线程安全的进一步优化） {代码...} ...",
      "author": {
        "nick": "陈杨",
        "homepage": "/u/king_kirito"
      }
    },
    {
      "id": "1190000018011535",
      "title": "SpringBoot自动配置原理",
      "url": "/a/1190000018011535",
      "desc": "前言 只有光头才能变强。 文本已收录至我的GitHub仓库，欢迎Star：[链接] 回顾前面Spring的文章(以学习的顺序排好)： Spring入门这一篇就够了 Spring【依赖注入】就是这么简单 Spring【AOP模块】就这么简单 Sprin...",
      "author": {
        "nick": "Java3y",
        "homepage": "/u/java_3y"
      }
    },
    {
      "id": "1190000018011016",
      "title": "logback.xml日志写入数据库改造，重写源码手工读取yml参数作为数据源参数的方法",
      "url": "/a/1190000018011016",
      "desc": "需求：实现logback日志写入数据库，并且logback关于数据库链接使用yml已有的数据源信息在logback.xml改造如下",
      "author": {
        "nick": "晕晕大作战",
        "homepage": "/u/yunyundazuozhan"
      }
    },
    {
      "id": "1190000018009290",
      "title": "SpringBoot 实战 | 使用 LomBok",
      "url": "/a/1190000018009290",
      "desc": "上周去了开年会，去的地方是温泉度假村。老实说，我是无感的，90% 是因为没中奖（老板太抠，两百人只抽三个奖），10 % 是因为从小泡温泉长大没啥感觉。",
      "author": {
        "nick": "一个优秀的废人",
        "homepage": "/u/nasus"
      }
    },
    {
      "id": "1190000018008968",
      "title": "码农上工Java017-正则表达式",
      "url": "/a/1190000018008968",
      "desc": "定义 {代码...} 好处 {代码...} 特点 {代码...} 弊端 {代码...} 组 {代码...} 常见操作 匹配 {代码...} 切割 {代码...} 替换 {代码...} 获取 {代码...} 常用示例 校验数字的表达式 {代码...} 校验字符的表达式 {...",
      "author": {
        "nick": "姚根深",
        "homepage": "/u/yaogenshen"
      }
    },
    {
      "id": "1190000018008878",
      "title": "码农上工Java016-反射技术",
      "url": "/a/1190000018008878",
      "desc": "定义 {代码...} 反射的好处： {代码...} 反射的基本步骤： {代码...} 获取这个Class对象，有三种方式： {代码...} 反射的用法 {代码...} 获取了字节码文件对象后，最终都需要创建指定类的对象： {代码...} 综上所...",
      "author": {
        "nick": "姚根深",
        "homepage": "/u/yaogenshen"
      }
    },
    {
      "id": "1190000018008837",
      "title": "码农上工Java015-网络编程",
      "url": "/a/1190000018008837",
      "desc": "UDP传输：1，只要是网络传输，必须有socket 。2，数据一定要封装到数据包中，数据包中包括目的地址、端口、数据等信息。",
      "author": {
        "nick": "姚根深",
        "homepage": "/u/yaogenshen"
      }
    }
  ]
}