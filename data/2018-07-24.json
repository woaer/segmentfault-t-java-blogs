{
  "watchNum": "24195",
  "blogs": [
    {
      "id": "1190000015744460",
      "title": "CentOS下安装环境安装(1)-----jdk",
      "url": "/a/1190000015744460",
      "desc": "centos下jdk的安装 1.卸载自带的jdk centos默认安装为baseservice时自带jdk 需要现行卸载 1、找到自带的jdk {代码...} 2、卸载 {代码...} 一步到位版本 {代码...} 2.指定安装两个目录 第三方安装的环境都可以安转...",
      "author": {
        "nick": "source",
        "homepage": "/u/webyh"
      }
    },
    {
      "id": "1190000015742857",
      "title": "Spring Boot Web 应用性能优化",
      "url": "/a/1190000015742857",
      "desc": "在大多数 Web 应用场景下，可以选择性地关闭一下自动装配的Spring 组件 Bean，以达到提升性能的目的。",
      "author": {
        "nick": "mercyblitz",
        "homepage": "/u/mercyblitz"
      }
    },
    {
      "id": "1190000015741842",
      "title": "java 性能测试框架工具-junitperf",
      "url": "/a/1190000015741842",
      "desc": "性能测试工具 对于 Java 开发者来说，要去学习性能测试工具未免很麻烦。 但有时候会有性能测试的需求。 junitperf junitperf 就是一款为 Java 开发者设计的性能测试框架，如果你会 Junit，很容易就可以学会。 特...",
      "author": {
        "nick": "叶止水",
        "homepage": "/u/houbinbin"
      }
    },
    {
      "id": "1190000015741797",
      "title": "Spring Boot 核心配置文件 bootstrap & application 详解。",
      "url": "/a/1190000015741797",
      "desc": "用过 Spring Boot 的都知道在 Spring Boot 中有以下两种配置文件 bootstrap (.yml 或者 .properties) application (.yml 或者 .properties) 为什么会有这两种配置文件呢？大家都清楚它们的区别和具体使用场景吗？...",
      "author": {
        "nick": "Java技术栈",
        "homepage": "/u/javastack"
      }
    },
    {
      "id": "1190000015723414",
      "title": "【Java猫说】每日算法：#2-三目运算符美观打印ASCII码",
      "url": "/a/1190000015723414",
      "desc": "将ASCII码位于32-126之间的95个字符显示在屏幕上，为了美观，要求小于100的码值前填充一个0，每打印8个字符后换行。",
      "author": {
        "nick": "MySelf",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000015740181",
      "title": "hibernate一对多、多对多的实体设计和配置文件配置",
      "url": "/a/1190000015740181",
      "desc": "一对多 实体类 {代码...} 配置文件 一： {代码...} 多： {代码...} 多对多 实体类 {代码...} 配置文件 多： {代码...} 多： {代码...}",
      "author": {
        "nick": "zer0_li",
        "homepage": "/u/zer0_li"
      }
    },
    {
      "id": "1190000015739343",
      "title": "逐行分析AQS源码(一): 锁的获取",
      "url": "/a/1190000015739343",
      "desc": "AQS是JAVA中众多锁的基础，其底层采用乐观锁，大量使用了CAS操作， 并且在冲突时，采用自旋方式重试，以实现轻量级和高效地获取锁。",
      "author": {
        "nick": "ChiuCheng",
        "homepage": "/u/chiucheng"
      }
    },
    {
      "id": "1190000015739051",
      "title": "JOCL 开发环境搭建",
      "url": "/a/1190000015739051",
      "desc": "jocl实际上就是对opencl用java语言进行了封装，许多代码都和opencl一样，连有些方法都是一样的，可以到github查看源码",
      "author": {
        "nick": "allen",
        "homepage": "/u/allen_liu"
      }
    },
    {
      "id": "1190000015739041",
      "title": "180723-Quick-Task 动态脚本支持框架之结构设计篇",
      "url": "/a/1190000015739041",
      "desc": "Quick-Task 动态脚本支持框架之结构设计篇 相关博文: 180702-QuickTask动态脚本支持框架整体介绍篇 180719-Quick-Task 动态脚本支持框架之使用介绍篇 前面两篇博文，主要是整体介绍和如何使用；接下来开始进入正...",
      "author": {
        "nick": "小灰灰Blog",
        "homepage": "/u/xiaohuihuiblog"
      }
    },
    {
      "id": "1190000015738316",
      "title": "认识Java泛型",
      "url": "/a/1190000015738316",
      "desc": "一、泛型的概念 泛型实现了参数化类型的概念，使代码可以用于多种类型 二、泛型的目的 希望类和方法能够具备最广泛的表达能力 用来指定容器要持有什么类型的对象，而且由编译器来保证类型的正确性 三、泛型的使用...",
      "author": {
        "nick": "浮花俱尽",
        "homepage": "/u/bingchen_59378c774400a"
      }
    },
    {
      "id": "1190000015738121",
      "title": "数据库两个神器【索引和锁】",
      "url": "/a/1190000015738121",
      "desc": "前言 只有光头才能变强 索引和锁在数据库中可以说是非常重要的知识点了，在面试中也会经常会被问到的。 本文力求简单讲清每个知识点，希望大家看完能有所收获 声明：如果没有说明具体的数据库和存储引擎，默认指...",
      "author": {
        "nick": "Java3y",
        "homepage": "/u/java_3y"
      }
    },
    {
      "id": "1190000015737679",
      "title": "【跃迁之路】【533天】程序员高效学习方法论探索系列（实验阶段290-2018.07.23）",
      "url": "/a/1190000015737679",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持，不...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015737630",
      "title": "【跃迁之路】【533天】刻意练习系列292（2018.07.23）",
      "url": "/a/1190000015737630",
      "desc": "技术的精进不能只是简单的刷题，而应该是不断的“刻意”练习 该系列改版后正式纳入【跃迁之路】专栏，持续更新",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015736004",
      "title": "使用动态代理简单模拟一下spring的事务管理",
      "url": "/a/1190000015736004",
      "desc": "我们的目的是，执行sayHello中的添加删除操作时，让这几条sql语句同时提交(commit)或同时回滚(rollback)，下面我们用动态代理的方式，实现这个功能：自定义一个代理管家，帮我们创建代理类，需要实现InvocationHa...",
      "author": {
        "nick": "瓦力",
        "homepage": "/u/wallee"
      }
    },
    {
      "id": "1190000015732330",
      "title": "SpringBoot入门0x001-idea创建 SpringBoot 项目并运行",
      "url": "/a/1190000015732330",
      "desc": "填写 group、artifact，这两个可以组合成 package，一般group是项目域名倒置，artifact是项目名，然后由这两个组合成主包名。",
      "author": {
        "nick": "followWinter",
        "homepage": "/u/followwinter"
      }
    }
  ]
}