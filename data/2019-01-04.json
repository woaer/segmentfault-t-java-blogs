{
  "watchNum": "35901",
  "blogs": [
    {
      "id": "1190000017758676",
      "title": "Spring Cloud Stream 使用延迟消息实现定时任务（RabbitMQ）",
      "url": "/a/1190000017758676",
      "desc": "我们在使用一些开源调度系统（比如：elastic-job等）的时候，对于任务的执行时间通常都是有规律性的，可能是每隔半小时执行一次，或者每天凌晨一点执行一次。然而实际业务中还存在另外一种定时任务，它可能需要一...",
      "author": {
        "nick": "程序猿DD",
        "homepage": "/u/coderdd"
      }
    },
    {
      "id": "1190000017758532",
      "title": "Gradle更小、更快构建APP的奇淫技巧",
      "url": "/a/1190000017758532",
      "desc": "上个月，我有机会在 LINE DEVELOPER DAY 2018 发表演讲。对我来说是特殊的时刻，因为这是我第一次在日本演讲。在成为演讲者之前，LINE 活动的工作人员必须向全球团队提交他们的演讲。",
      "author": {
        "nick": "爱编码的coder",
        "homepage": "/u/chengxuyuanxiaohui"
      }
    },
    {
      "id": "1190000017757521",
      "title": "做开发十年，我总结出了这些开发经验",
      "url": "/a/1190000017757521",
      "desc": "在一线做了十年的开发，经历了网易、百度、腾讯研究院、MIG 等几个地方，陆续做过 3D 游戏、2D 页游、浏览器、移动端翻译 app 等。",
      "author": {
        "nick": "腾讯云加社区",
        "homepage": "/u/qcloudcommunity"
      }
    },
    {
      "id": "1190000017757198",
      "title": "设计模式之软件开发原开闭原则和依赖倒置原则",
      "url": "/a/1190000017757198",
      "desc": "所谓开闭原则就是一个软件实体如类、模块和函数应该对扩展开放、对修改关闭。强调用抽象构建框架，实现实现拓展细节。",
      "author": {
        "nick": "一号线",
        "homepage": "/u/yihaoxian"
      }
    },
    {
      "id": "1190000017757066",
      "title": "Intellij IDEA 初体验",
      "url": "/a/1190000017757066",
      "desc": "Ctrl + Alt + S 进入设置 --> Keymap --> Main maue --> Completion -->basic",
      "author": {
        "nick": "参商",
        "homepage": "/u/canshang_5b41ec5ab1db1"
      }
    },
    {
      "id": "1190000017755960",
      "title": "一分钟学会《模板方法模式》",
      "url": "/a/1190000017755960",
      "desc": "前言 只有光头才能变强。文本已收录至我的GitHub仓库，欢迎Star：[链接] 在上一篇有读者说，一分钟就看完门面模式了，所以今天的标题就取《一分钟学会模板方法模式》 回顾前面所写过的设计模式： 给女朋友讲解什...",
      "author": {
        "nick": "Java3y",
        "homepage": "/u/java_3y"
      }
    },
    {
      "id": "1190000017755726",
      "title": "用Java构建一个简单的WebSocket聊天项目之新增HTTP接口调度",
      "url": "/a/1190000017755726",
      "desc": "本文首发公众号与个人博客：Java猫说 & 猫叔的博客 | MySelf，转载请申明出处。 前言 大家可以看看上一篇：用Java构建一个简单的WebSocket聊天室 在上一篇文章中我们已经实现了：自我对话、好友交流、群聊、...",
      "author": {
        "nick": "Java猫说",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000017754794",
      "title": "Java基础差，需要怎么补",
      "url": "/a/1190000017754794",
      "desc": "现在的网上资源基本是不缺的，缺的是你去搜索的积极性，你需要善于使用搜索引擎，去查找你想要的答案，类似百度、必应等大型搜索引擎，或者是去一些技术的问答平台提问。对于Java的一些基础知识，你可以轻而易举...",
      "author": {
        "nick": "Java猫说",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000017754790",
      "title": "java重入锁、公平锁和非公平锁",
      "url": "/a/1190000017754790",
      "desc": "从上面的代码中，可以一目了然的发现，当获取锁的线程与拥有锁的线程是同一个线程时，仅会对状态进行累加。so easy ,并没有什么难度。那接下来我们想一下，如何实现公平所和非公平锁，上面的代码是非公平锁的实现...",
      "author": {
        "nick": "haofengpingjieli",
        "homepage": "/u/haofengpingjieli"
      }
    },
    {
      "id": "1190000017753965",
      "title": "Java 并发方案全面学习总结",
      "url": "/a/1190000017753965",
      "desc": "并发(Concurrency): 问题域中的概念—— 程序需要被设计成能够处理多个同时（或者几乎同时）发生的事件",
      "author": {
        "nick": "songofhawk",
        "homepage": "/u/songofhawk"
      }
    },
    {
      "id": "1190000017751958",
      "title": "追踪解析Gson源码(1)",
      "url": "/a/1190000017751958",
      "desc": "Gson 是谷歌开源的 java json 解析工具。市场上同类的开源产品还有 Fastjson、Jackson、json-lib等。",
      "author": {
        "nick": "三流",
        "homepage": "/u/sanliu"
      }
    },
    {
      "id": "1190000017751922",
      "title": "1071 小赌怡情 （15 分）java",
      "url": "/a/1190000017751922",
      "desc": "常言道“小赌怡情”。这是一个很简单的小游戏：首先由计算机给出第一个整数；然后玩家下注赌第二个整数将会比第一个数大还是小；玩家下注 t 个筹码后，计算机给出第二个数。若玩家猜对了，则系统奖励玩家 t 个筹码...",
      "author": {
        "nick": "PangHuanTeng",
        "homepage": "/u/panghuanteng"
      }
    },
    {
      "id": "1190000017750457",
      "title": "Java-基础-关键字volatile",
      "url": "/a/1190000017750457",
      "desc": "Java 内存模型定义：屏蔽掉各种硬件和操作系统的内存访问差异，实现让 Java 程序在各种平台下能达到一致的内存访问效果。避免更换平台后在并发问题上出现访问错误。",
      "author": {
        "nick": "CarlosHaoxj",
        "homepage": "/u/carloshaoxj"
      }
    },
    {
      "id": "1190000017749497",
      "title": "【跃迁之路】【684天】程序员高效学习方法论探索系列（实验阶段441-2019.1.3）",
      "url": "/a/1190000017749497",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000017749193",
      "title": "&和&&的共同点和区别、Java字符含义和Java创建对象的几种方式",
      "url": "/a/1190000017749193",
      "desc": "1、&和&&的联系(共同点)：&和&&都可以用作逻辑与运算符，但是要看使用时的具体条件来决定。",
      "author": {
        "nick": "尚学堂明辉",
        "homepage": "/u/shangxuetangminghui"
      }
    }
  ]
}