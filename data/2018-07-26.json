{
  "watchNum": "24262",
  "blogs": [
    {
      "id": "1190000015773591",
      "title": "48小时开发实践：如何开发一款可实时视频的智能小车",
      "url": "/a/1190000015773591",
      "desc": "本文的三位作者正阳、海洋、阿力，是来自不同公司的工程师，将 Agora SDK 与智能小车结合，开发了一款可实时视频远程看房的创新性项目。本文将从方案设计到具体实现，详实分享他们的开发经验。三人也凭借该项目，...",
      "author": {
        "nick": "agora",
        "homepage": "/u/agora"
      }
    },
    {
      "id": "1190000015773409",
      "title": "如何降低90%Java垃圾回收时间？以阿里HBase的GC优化实践为例",
      "url": "/a/1190000015773409",
      "desc": "GC一直是Java应用中讨论的一个热门话题，尤其在像HBase这样的大型在线存储系统中，大堆下(百GB)的GC停顿延迟产生的在线实时影响，成为内核和应用开发者的一大痛点。",
      "author": {
        "nick": "阿里云云栖社区",
        "homepage": "/u/yunqishequ_5aa899aad5395"
      }
    },
    {
      "id": "1190000015771211",
      "title": "SpringMVC学习",
      "url": "/a/1190000015771211",
      "desc": "一般在开始一个知识点的学习之前，搭建一个小的测试项目有助于理解问题，因此我已经搭好了一个基础的模拟登录小平台，输入密码可以跳转页面。代码上传在码云上[链接]。",
      "author": {
        "nick": "Fangye",
        "homepage": "/u/lingnancfy"
      }
    },
    {
      "id": "1190000015770897",
      "title": "「Java」你知道我们常使用的Java注解，是怎么实现的吗",
      "url": "/a/1190000015770897",
      "desc": "注解相当于是标记，它与注释的区别在于注解的内容可以可以使用，下面，让我们认识下Java的注解。 要使用注解，我们可以分成三个部分，分别是：注解本身、注解使用类、注解处理类，如下图：图片描述 「Java」你知...",
      "author": {
        "nick": "糖宝",
        "homepage": "/u/tangbao_5a152bb72d2ed"
      }
    },
    {
      "id": "1190000015770613",
      "title": "屌炸天，Oracle 发布了一个全栈虚拟机 GraalVM，支持 Python！",
      "url": "/a/1190000015770613",
      "desc": "前阵子，Oracle 发布了一个黑科技 \"GraalVM\"，号称是一个全新的通用全栈虚拟机，并具有高性能、跨语言交互等逆天特性，真有这么神奇？",
      "author": {
        "nick": "Java技术栈",
        "homepage": "/u/javastack"
      }
    },
    {
      "id": "1190000015770345",
      "title": "springboot添加gradle  jpa组件项目搭建五分钟快速上手",
      "url": "/a/1190000015770345",
      "desc": "springboot gradle jpa项目如何搭建？只要一首歌的时间 废话不多说马上开始 新建一个项目 此处注意选择Type为Gradle Project 因为只是演示最基础的项目搭建所以只选择必要的 web jpa mysql 取个项目名，finish 进...",
      "author": {
        "nick": "Cold不叫寇德",
        "homepage": "/u/coldbjcd"
      }
    },
    {
      "id": "1190000015769325",
      "title": "猫头鹰的深夜翻译：理解java的classloader",
      "url": "/a/1190000015769325",
      "desc": "Java ClassLoader是java运行系统中一个至关重要但是经常被忽略的组件。它负责在运行时寻找并加载类文件。创建自定义的ClassLoader可以彻底重定义如何将类文件加载至系统。",
      "author": {
        "nick": "raledong",
        "homepage": "/u/raledong"
      }
    },
    {
      "id": "1190000015769190",
      "title": "OGNL表达式",
      "url": "/a/1190000015769190",
      "desc": "OGNL是Object-Graph Navigation Language的缩写，它是一种功能强大的表达式语言，通过它简单一致的表达式语法，可以存取对象的任意属性，调用对象的方法，遍历整个对象的结构图，实现字段类型转化等功能。它使用...",
      "author": {
        "nick": "zer0_li",
        "homepage": "/u/zer0_li"
      }
    },
    {
      "id": "1190000015769172",
      "title": "设计模式——抽象工厂",
      "url": "/a/1190000015769172",
      "desc": "抽象工厂是一种创建型模式，它提代一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。抽象工厂允许调用者使用抽象的接口创建一组相关的产口，而不需要关心它们具体的产品，这样就从具体的产口中...",
      "author": {
        "nick": "Jacob",
        "homepage": "/u/jacob93"
      }
    },
    {
      "id": "1190000015769078",
      "title": "【跃迁之路】【535天】程序员高效学习方法论探索系列（实验阶段292-2018.07.25）",
      "url": "/a/1190000015769078",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持，不...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015769028",
      "title": "【跃迁之路】【535天】刻意练习系列294（2018.07.25）",
      "url": "/a/1190000015769028",
      "desc": "技术的精进不能只是简单的刷题，而应该是不断的“刻意”练习 该系列改版后正式纳入【跃迁之路】专栏，持续更新",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015768809",
      "title": "想不想在maven里直接下载ojdbc这个jar？",
      "url": "/a/1190000015768809",
      "desc": "不知道你们开发项目的时候，这个jar一般都是从什么途径获得的。从旧项目？从oracle安装文件里找？下载别人上传到csdn的？在oracle官网下载？就不想堂堂正正从官网直接maven回来吗？",
      "author": {
        "nick": "新の助2",
        "homepage": "/u/xinzhu2"
      }
    },
    {
      "id": "1190000015768757",
      "title": "Struts 入门 2",
      "url": "/a/1190000015768757",
      "desc": "结果跳转方式 1.转发 {代码...} 3.重定向 {代码...} 4.转发到Action {代码...} 5.重定向到Action {代码...} 访问servletAPI方式 1.原理 通过ActionContext {代码...} 如何获得参数 servlet线程是不安全的，servle...",
      "author": {
        "nick": "zer0_li",
        "homepage": "/u/zer0_li"
      }
    },
    {
      "id": "1190000015768287",
      "title": "把vuejs打包出来的文件整合到springboot里",
      "url": "/a/1190000015768287",
      "desc": "这个需求不知道是不是合适，因为静态的vuejs项目，用nginx部署，听说很快。一般有这个需求的，都是用tomcat来部署java项目，tomcat转发静态vuejs，应该不会很快。",
      "author": {
        "nick": "新の助2",
        "homepage": "/u/xinzhu2"
      }
    },
    {
      "id": "1190000015768249",
      "title": "程序员简历之道",
      "url": "/a/1190000015768249",
      "desc": "俗话说的好：“工欲善其事，必先利其器”。准备一份好的简历对于能不能找到一份好工作起到了至关重要的作用。",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    }
  ]
}