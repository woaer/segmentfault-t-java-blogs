{
  "watchNum": "24002",
  "blogs": [
    {
      "id": "1190000015659244",
      "title": "Java并发编程笔记之FutureTask源码分析",
      "url": "/a/1190000015659244",
      "desc": "FutureTask可用于异步获取执行结果或取消执行任务的场景。通过传入Runnable或者Callable的任务给FutureTask，直接调用其run方法或者放入线程池执行，之后可以在外部通过FutureTask的get方法异步获取执行结果，因...",
      "author": {
        "nick": "阿里云云栖社区",
        "homepage": "/u/yunqishequ_5aa899aad5395"
      }
    },
    {
      "id": "1190000015659237",
      "title": "ActivateMQ 本地debug调试 环境搭建",
      "url": "/a/1190000015659237",
      "desc": "最近项目中需要构建一个消息推送的服务端，要求是需要基于MQTT，不想使用第三方的推送，所以准备选择一个开源的消息推送服务，进行扩展。",
      "author": {
        "nick": "taohonghui",
        "homepage": "/u/taohonghui"
      }
    },
    {
      "id": "1190000015658743",
      "title": "java虚拟机",
      "url": "/a/1190000015658743",
      "desc": "内存中较小的内存空间，通过计数器的值可以选取下一条执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。",
      "author": {
        "nick": "dack",
        "homepage": "/u/dack_5b3b85f9d7cd4"
      }
    },
    {
      "id": "1190000015658724",
      "title": "普通网站防暴力破解的新设计",
      "url": "/a/1190000015658724",
      "desc": "传统的防范暴力破解的方法是在前端登录页面增加验证码, 虽然能有一定程度效果, 但是用户也跟着遭罪, 验证码越复杂, 用户登录的失败率越高",
      "author": {
        "nick": "辣子鸡",
        "homepage": "/u/laziji"
      }
    },
    {
      "id": "1190000015658564",
      "title": "MyBatis 源码分析系列文章导读",
      "url": "/a/1190000015658564",
      "desc": "本篇文章是我为接下来的 MyBatis 源码分析系列文章写的一个导读文章。本篇文章从 MyBatis 是什么（what），为什么要使用（why），以及如何使用（how）等三个角度进行了说明和演示。由于文章的篇幅比较大，这里特...",
      "author": {
        "nick": "coolblog",
        "homepage": "/u/coolblog"
      }
    },
    {
      "id": "1190000015658536",
      "title": "【Java猫说】Java基本概念一",
      "url": "/a/1190000015658536",
      "desc": "友好的语法、面向对象、内存管理和最棒的跨平台可移植性、write-once/run-anywhere",
      "author": {
        "nick": "MySelf",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000015657952",
      "title": "Java知识点总结（动态字节码操作-Javassist的API使用）",
      "url": "/a/1190000015657952",
      "desc": "Java知识点总结（动态字节码操作-Javassist的API使用） @(Java知识点总结)[Java, 动态字节码操作] 参考文章： 传送 操作示例： {代码...} {代码...} {代码...}",
      "author": {
        "nick": "苏生",
        "homepage": "/u/susheng_579d70745d3d3"
      }
    },
    {
      "id": "1190000015656570",
      "title": "java小心机(2)| 重载和构造器的小细节",
      "url": "/a/1190000015656570",
      "desc": "每天进步一点点,距离大腿又近一步 阅读本文大概需要10分钟java小心机,为你诉说java鲜为人知的一面",
      "author": {
        "nick": "java从心",
        "homepage": "/u/javacongxin"
      }
    },
    {
      "id": "1190000015655306",
      "title": "微信小程序Java登录流程（ssm实现具体功能和加解密隐私信息问题解决方案）",
      "url": "/a/1190000015655306",
      "desc": "文章有不当之处，欢迎指正，如果喜欢微信阅读，你也可以关注我的微信公众号：好好学java，获取优质学习资源。",
      "author": {
        "nick": "wx_好好学java",
        "homepage": "/u/sihai_5ae5ba9170388"
      }
    },
    {
      "id": "1190000015654823",
      "title": "Java知识点总结（动态字节码操作-Javassist介绍）",
      "url": "/a/1190000015654823",
      "desc": "Java知识点总结（动态字节码操作-Javassist介绍） @(Java知识点总结)[Java, 动态字节码操作] 运行时操作字节码可以让我们实现如下功能： 动态生成新的类 动态改变某个类的结构（添加/删除/修改 新的属性/方法） j...",
      "author": {
        "nick": "苏生",
        "homepage": "/u/susheng_579d70745d3d3"
      }
    },
    {
      "id": "1190000015654796",
      "title": "设计模式——装饰者模式",
      "url": "/a/1190000015654796",
      "desc": "装饰者模式可以动态的将责任附加到对象上，在扩展功能方面，它比继承更有弹性。装饰者模式遵循了开闭原则，对扩展开放，对修改关闭。  虽然在装饰者模式中也使用了继承，但是继承只是为了与被装饰者拥有共同的父...",
      "author": {
        "nick": "Jacob",
        "homepage": "/u/jacob93"
      }
    },
    {
      "id": "1190000015654304",
      "title": "一名3年工作经验的java程序员应该具备的职业技能",
      "url": "/a/1190000015654304",
      "desc": "一名3年工作经验的Java程序员应该具备的技能，这可能是Java程序员们比较关心的内容。我这里要说明一下，以下列举的内容不是都要会的东西—-但是如果你掌握得越多，最终能得到的评价、拿到的薪水势必也越高。",
      "author": {
        "nick": "茶轴的青春",
        "homepage": "/u/chazhoudeqingchun"
      }
    },
    {
      "id": "1190000015654119",
      "title": "IDEA开发工具报错----启动项目报错",
      "url": "/a/1190000015654119",
      "desc": "查了很多资料，有的说是端口号被占用，修改后发现并不是；有的说是tomcat配置问题，修改后也没能解决；还有的说是jdk配置，都没能解决问题。",
      "author": {
        "nick": "盘子",
        "homepage": "/u/panzi_5abcaf30a5e6b"
      }
    },
    {
      "id": "1190000015654040",
      "title": "IDEA开发工具报错----启动项目报错",
      "url": "/a/1190000015654040",
      "desc": "在windows的“允许应用通过widows防火墙”中勾选“Java(TM) Platform SE binary”，保存，重启",
      "author": {
        "nick": "盘子",
        "homepage": "/u/panzi_5abcaf30a5e6b"
      }
    },
    {
      "id": "1190000015653943",
      "title": "IDEA开发工具报错----spring boot启动报错",
      "url": "/a/1190000015653943",
      "desc": "打包是不需要tomcat的，所以这里把tomcat的依赖改为provided，但是idea存在一个bug，就是provided的pom不会加入classpath中，所以运行的时候就找不到tomcat相关的包，解决：",
      "author": {
        "nick": "盘子",
        "homepage": "/u/panzi_5abcaf30a5e6b"
      }
    }
  ]
}