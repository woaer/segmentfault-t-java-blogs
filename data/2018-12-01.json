{
  "watchNum": "31445",
  "blogs": [
    {
      "id": "1190000017216243",
      "title": "测试一波SpringBoot的HTTP吞吐量",
      "url": "/a/1190000017216243",
      "desc": "测试一波SpringBoot的HTTP吞吐量",
      "author": {
        "nick": "MySelf",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000017215926",
      "title": "Java中如何优雅地删除List中的元素",
      "url": "/a/1190000017215926",
      "desc": "在工作中的许多场景下，我们都会使用到List这个数据结构，那么同样的有很多场景下需要删除List中的某一个元素或某几个元素，那么我们该如何正确无误地删除List中的元素的，今天我来教大家三种方式。",
      "author": {
        "nick": "翎野君",
        "homepage": "/u/lingyejun"
      }
    },
    {
      "id": "1190000017215560",
      "title": "想让你的博文获得更多推荐吗？快来了解下思维导图吧",
      "url": "/a/1190000017215560",
      "desc": "我猜发布文章的同学肯定都有一个目标，那就是获得更多的推荐。推荐越多，表示得到别人的认同越多，自我满足感就越强，写博客的动力也就是越足，也就越能激励笔者写出更多更好的文章。",
      "author": {
        "nick": "ReyCG",
        "homepage": "/u/reycg"
      }
    },
    {
      "id": "1190000017214254",
      "title": "java8新特性Lambda和Stream",
      "url": "/a/1190000017214254",
      "desc": "Java8出来已经4年,但还是有很多人用上了jdk8,但并没用到里面的新东西,那不就等于没用?jdk8有许多的新特性,详细可看下面脑图",
      "author": {
        "nick": "java从心",
        "homepage": "/u/javacongxin"
      }
    },
    {
      "id": "1190000017214216",
      "title": "【修真院“善良”系列之十】初级Java程序员的学习路线",
      "url": "/a/1190000017214216",
      "desc": "知乎总是建议我修改内容，说我骗赞。算了，直接发专栏好了。 说过很多遍这个话题了。重复一遍，再说一次。 第一。 Java语法的学习。 3天 你需要会这些：  String，Integer，Long，Array，List，Map会用就够了。 I...",
      "author": {
        "nick": "IT修真院",
        "homepage": "/u/itxiuzhenyuan"
      }
    },
    {
      "id": "1190000017214098",
      "title": " 非科班的java程序员该如何补充计算机基础知识，需要看哪些书？",
      "url": "/a/1190000017214098",
      "desc": "java比较特殊，毕竟后端扛霸子，想要认真学好java，必须有好的计算机基础，可是为什么需要基础呢？",
      "author": {
        "nick": "IT修真院",
        "homepage": "/u/itxiuzhenyuan"
      }
    },
    {
      "id": "1190000017214026",
      "title": "为什么要用Log4j来替代System.out.println",
      "url": "/a/1190000017214026",
      "desc": "这里是修真院前端小课堂，每篇分享文从 【背景介绍】【知识剖析】【常见问题】【解决方案】【编码实战】【扩展思考】【更多讨论】【参考文献】 八个方面深度解析前端知识/技能，本篇分享的是： 【为什么要用Log4j...",
      "author": {
        "nick": "IT修真院",
        "homepage": "/u/itxiuzhenyuan"
      }
    },
    {
      "id": "1190000017213227",
      "title": "你应该知道的数据库数据类型及其设计原则",
      "url": "/a/1190000017213227",
      "desc": "整数类型有：tinyint、smallint、mediumint、int、bigint，分别使用 8、16、24、32、64 位存储空间。它们可以存储的值范围从 -2 的 (n-1) 次方到 2 的 (n-1) 次方 -1，n 是存储空间的位数。",
      "author": {
        "nick": "不只Java",
        "homepage": "/u/buzhijava"
      }
    },
    {
      "id": "1190000017213198",
      "title": "这也许是你不曾留意过的 Mybatis 细节",
      "url": "/a/1190000017213198",
      "desc": "Mybatis 可以说是 Java 后端的必备技能，可能你和我一样经常使用到它。但有时 cv 多了，会忘记了一些细节处理，比如为什么要加上这个注解？它的作用是什么等等。",
      "author": {
        "nick": "不只Java",
        "homepage": "/u/buzhijava"
      }
    },
    {
      "id": "1190000017213169",
      "title": "浅谈布隆过滤器",
      "url": "/a/1190000017213169",
      "desc": "如果面试官问你，一个网站有 100 亿 url 存在一个黑名单中，每条 url 平均 64 字节。问这个黑名单要怎么存？若此时随便输入一个 url，如何判断该 url 是否在这个黑名单中？",
      "author": {
        "nick": "不只Java",
        "homepage": "/u/buzhijava"
      }
    },
    {
      "id": "1190000017213152",
      "title": "interrupt(),interrupted() 和 isInterrupted() 的区别",
      "url": "/a/1190000017213152",
      "desc": "interrupt()：将调用该方法的对象所表示的线程标记一个停止标记，并不是真的停止该线程。interrupted()：获取当前线程的中断状态，并且会清除线程的状态标记。是一个是静态方法。 isInterrupted()：获取调用该方...",
      "author": {
        "nick": "不只Java",
        "homepage": "/u/buzhijava"
      }
    },
    {
      "id": "1190000017213015",
      "title": "记一次狂怼多线程的面经",
      "url": "/a/1190000017213015",
      "desc": "最近面试一家有直播业务的公司，明显感觉到对多线程的理解有一些要求。第一轮面试大概就面了 70 分钟左右，一轮下来口干舌燥。",
      "author": {
        "nick": "不只Java",
        "homepage": "/u/buzhijava"
      }
    },
    {
      "id": "1190000017211657",
      "title": "基于 SpringBoot2.0+优雅整合 SpringBoot+Mybatis",
      "url": "/a/1190000017211657",
      "desc": "Github 地址：[链接](SpringBoot和其他常用技术的整合,可能是你遇到的讲解最详细的学习案例,力争新手也能看懂并且能够在看完之后独立实践。基于最新的 SpringBoot2.0+，是你学习SpringBoot 的最佳指南。) ，欢迎...",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    },
    {
      "id": "1190000017210573",
      "title": "《设计模式》3.结构型模式",
      "url": "/a/1190000017210573",
      "desc": "适配器模式把一个类的接口变换成客户端所期待的另一种接口，使得原本因接口不匹配而无法在一起工作的两个类能够在一起工作。",
      "author": {
        "nick": "SpiderSama",
        "homepage": "/u/spidersama"
      }
    },
    {
      "id": "1190000017209441",
      "title": "【跃迁之路】【656天】程序员高效学习方法论探索系列（实验阶段413-2018.11.30）",
      "url": "/a/1190000017209441",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    }
  ]
}