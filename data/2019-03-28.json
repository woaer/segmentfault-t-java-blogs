{
  "watchNum": "45782",
  "blogs": [
    {
      "id": "1190000018684699",
      "title": "工作996，生病ICU",
      "url": "/a/1190000018684699",
      "desc": "昨日火爆整个猿界的莫过于GitHub上996.ICU，一日之间star数高达上万。估计今日次项目必达GitHub榜首！",
      "author": {
        "nick": "码上实战",
        "homepage": "/u/flyhero"
      }
    },
    {
      "id": "1190000018684413",
      "title": "java高级技术交流群",
      "url": "/a/1190000018684413",
      "desc": "《明天的地平线》专注Java相关技术：SpringBoot、SpringCloud、MyBatis、Docker、微服务、集群、分布式、Linux、Jenkins、Netty、Angular 5 、Vue、微信小程序等技术干货的分享、致力于Java全栈开发！还不会不定...",
      "author": {
        "nick": "明天的地平线",
        "homepage": "/u/somta"
      }
    },
    {
      "id": "1190000018682934",
      "title": "Android 2019最新面试实战总结",
      "url": "/a/1190000018682934",
      "desc": "1：首先计算出 density，计算公式：当前设备屏幕总宽度（单位为像素）/ 设计图总宽度（单位为 dp) = densitydensity 的意思就是 1 dp 占当前设备多少像素计算density 的原因：在布局文件中填写的是什么单位，最后...",
      "author": {
        "nick": "爱编码的coder",
        "homepage": "/u/chengxuyuanxiaohui"
      }
    },
    {
      "id": "1190000018673904",
      "title": "如何在Tomcat中做TLS客户端认证",
      "url": "/a/1190000018673904",
      "desc": "常见的https网站做的是服务端认证（server authentication），浏览器通过证书判断你所访问的[链接]，而不是其他人伪造的网站。同时还对流量加密，防止别人窃听你的流量。",
      "author": {
        "nick": "chanjarster",
        "homepage": "/u/chanjarster"
      }
    },
    {
      "id": "1190000018681672",
      "title": "浅谈REST风格",
      "url": "/a/1190000018681672",
      "desc": "现如今微服务如日中天，那么大家有没有想过各个微服务之间是怎么调用数据亦或是怎么交互的呢？当然方式有很多，但今天所说的REST风格被业界推荐为微服务之间交互的首选方式（小编还是非常喜欢这种方式的）。废话...",
      "author": {
        "nick": "菜鸟小码",
        "homepage": "/u/cnxm"
      }
    },
    {
      "id": "1190000018681156",
      "title": "力扣(LeetCode)310",
      "url": "/a/1190000018681156",
      "desc": "解答：这一题比较有技巧，如果求任意一点到任意一点的距离，那么会时间复杂度会很大。比较高效的做法是，每次把叶子节点从图(把树转换为图结构)删掉。直到只剩下1个或者2个点的时候输出。",
      "author": {
        "nick": "Linus脱袜子",
        "homepage": "/u/qiuqi_turing"
      }
    },
    {
      "id": "1190000018680467",
      "title": "【跃迁之路】【764天】程序员高效学习方法论探索系列（实验阶段521-2019.3.26-27）",
      "url": "/a/1190000018680467",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000018679689",
      "title": "【本人秃顶程序员】Java集合框架综述",
      "url": "/a/1190000018679689",
      "desc": "←←←←←←←←←←←← 快！点关注 一、集合框架图 简化图： 说明：对于以上的框架图有如下几点说明 所有集合类都位于java.util包下。Java的集合类主要由两个接口派生而出：Collection和Map，Collection和Map是Java集合框...",
      "author": {
        "nick": "本人秃顶程序员",
        "homepage": "/u/benrentudingchengxuyuan"
      }
    },
    {
      "id": "1190000018679258",
      "title": "数据结构与算法——广度和深度优先搜索",
      "url": "/a/1190000018679258",
      "desc": "前面说到了图这种非线性的数据结构，并且我使用了代码，简单演示了图是如何实现的。今天就来看看基于图的两种搜索算法，分别是广度优先搜索和深度优先搜索算法，这两个算法都十分的常见，在平常的面试当中也可能...",
      "author": {
        "nick": "roseduan",
        "homepage": "/u/roseduan"
      }
    },
    {
      "id": "1190000018678659",
      "title": "力扣(LeetCode)207",
      "url": "/a/1190000018678659",
      "desc": "在选修某些课程之前需要一些先修课程。 例如，想要学习课程 0 ，你需要先完成课程 1 ，我们用一个匹配来表示他们: [0,1]",
      "author": {
        "nick": "Linus脱袜子",
        "homepage": "/u/qiuqi_turing"
      }
    },
    {
      "id": "1190000018677806",
      "title": "Java™ 教程（Deque接口）",
      "url": "/a/1190000018677806",
      "desc": "通常读作deck，deque是双端队列，双端队列是元素的线性集合，支持在两个端点处插入和移除元素，Deque接口是比Stack和Queue更丰富的抽象数据类型，因为它同时实现堆栈和队列。Deque接口定义了访问Deque实例两端元...",
      "author": {
        "nick": "博弈",
        "homepage": "/u/lfheart"
      }
    },
    {
      "id": "1190000018677182",
      "title": "数据结构与算法——二叉树（上）",
      "url": "/a/1190000018677182",
      "desc": "前面说到的几种数据结构都是线性的，例如链表、栈、队列等，今天就来学习一种非线性的数据结构——树。先来看看几种树的结构：",
      "author": {
        "nick": "roseduan",
        "homepage": "/u/roseduan"
      }
    },
    {
      "id": "1190000018676060",
      "title": "认识与实现Skip List ",
      "url": "/a/1190000018676060",
      "desc": "增加了向前指针的链表叫作跳表。跳表全称叫做跳跃表，简称跳表。跳表是一个随机化的数据结构，实质就是一种可以进行二分查找的有序链表。跳表在原有的有序链表上面增加了多级索引，通过索引来实现快速查找。跳表...",
      "author": {
        "nick": "赵栩彬",
        "homepage": "/u/crabapple"
      }
    },
    {
      "id": "1190000018674629",
      "title": "30分钟极速通关react mobx react-router及打通springboot",
      "url": "/a/1190000018674629",
      "desc": "内容导航 简单开发react 将react与mobx结合开发 使用react-router进行多页面开发 将项目打包到后端项目中进行部署 将完成的项目做成脚手架，避免重复的环境搭建 需要环境 确保node已经安装 确保npm已经安装 创建...",
      "author": {
        "nick": "佐灵",
        "homepage": "/u/zuoling"
      }
    },
    {
      "id": "1190000018674544",
      "title": "从阿里平薪跳头条，值得吗？",
      "url": "/a/1190000018674544",
      "desc": "本文经授权转载自wingjay（ID：cool-coder）有一位供职于阿里的朋友跑来咨询我一个关于跳槽的问题：朋友目前在阿里工作两年时间，刚拿到头条的 Offer，但非常纠结是否要接，所以来咨询下我的意见。而正好最近不少...",
      "author": {
        "nick": "Java高级架构",
        "homepage": "/u/javagaojijiagou_5b18fe1e8778a"
      }
    }
  ]
}