{
  "watchNum": "31107",
  "blogs": [
    {
      "id": "1190000017189007",
      "title": "XXL-CONF v1.6.0 发布，分布式配置管理平台。废弃ZK轻量级架构升级",
      "url": "/a/1190000017189007",
      "desc": "1、轻量级改造：废弃ZK，改为 \"DB + 磁盘 + long polling\" 方案，部署更轻量，学习更简单；集群部署更方便，与单机一致；",
      "author": {
        "nick": "xuxueli",
        "homepage": "/u/xuxueli"
      }
    },
    {
      "id": "1190000017188939",
      "title": "Centos7.x下安装JDK8",
      "url": "/a/1190000017188939",
      "desc": "1、登录甲骨文支持网站：[链接]2、下载linux64位jdk的tar.gz文件3、通过winscp上传至服务器/usr/java/,无此目录创建对应文件夹",
      "author": {
        "nick": "独上兰舟",
        "homepage": "/u/dushanglanzhou_59b608615765d"
      }
    },
    {
      "id": "1190000017186653",
      "title": "return的用法是什么？若用在for循环中，还会执行下一次循环吗？",
      "url": "/a/1190000017186653",
      "desc": "这里是修真院前端小课堂，每篇分享文从 【背景介绍】【知识剖析】【常见问题】【解决方案】【编码实战】【扩展思考】【更多讨论】【参考文献】 八个方面深度解析前端知识/技能，本篇分享的是： 【return的用法是...",
      "author": {
        "nick": "IT修真院",
        "homepage": "/u/itxiuzhenyuan"
      }
    },
    {
      "id": "1190000017183575",
      "title": "Java 导入与导出",
      "url": "/a/1190000017183575",
      "desc": "Java 导入 Java 导出 上传 前提 {代码...} 准备上传页面 {代码...} {代码...} 解析 Excel 生成 Excel 下载",
      "author": {
        "nick": "104828720",
        "homepage": "/u/104828720_582bfbf471440"
      }
    },
    {
      "id": "1190000017182807",
      "title": "Python是否支持复制字符串呢？",
      "url": "/a/1190000017182807",
      "desc": "连续几篇文章都在写 Python 字符串，这出乎我的意料了。但是，有的问题，不写不行，特别是那种灵机一动想到的问题，最后你发现，很多人根本不懂却又误以为自己懂了。那就继续刨根问底，探究个明白吧。",
      "author": {
        "nick": "豌豆花下猫",
        "homepage": "/u/chinesehuazhou"
      }
    },
    {
      "id": "1190000017182561",
      "title": "Spring Aware接口",
      "url": "/a/1190000017182561",
      "desc": "容器管理的 Bean 一般不需要了解容器的状态和直接使用容器, 但是在某些情况下, 是需要在 Bean 中直接对IOC容器进行操作的, 可以通过特定的 Aware 接口来完成. aware 接口有以下这些:",
      "author": {
        "nick": "sc_ik",
        "homepage": "/u/sc_ik"
      }
    },
    {
      "id": "1190000017182310",
      "title": "重构改善既有的代码设计（代码的坏味道）",
      "url": "/a/1190000017182310",
      "desc": "坏的味道：指的是应该被修改，被重构的代码，不具有可读性，复用性，判断逻辑复杂，冗余代码。应该使用各种重构的手法去改变它！",
      "author": {
        "nick": "null",
        "homepage": "/u/cchen93"
      }
    },
    {
      "id": "1190000017182255",
      "title": "Bean 的生命周期回调",
      "url": "/a/1190000017182255",
      "desc": "我们可能会在 Bean 对象创建完成后, 执行某些操作或在销毁前做某些操作. 我们可以实现 InitializingBean 或 DisposableBean 接口 {代码...} 当然我们可以使用注解来实现 {代码...} 还有另一种方法可以使用 @Bean ...",
      "author": {
        "nick": "sc_ik",
        "homepage": "/u/sc_ik"
      }
    },
    {
      "id": "1190000017147599",
      "title": "JavaWEB开发14——ajax",
      "url": "/a/1190000017147599",
      "desc": "一、Ajax概述1．什么是同步，什么是异步同步现象：客户端发送请求到服务器端，当服务器返回响应之前，客户端都处于等待 卡死状态异步现象：客户端发送请求到服务器端，无论服务器是否返回响应，客户端都可以随 意...",
      "author": {
        "nick": "扎瓦",
        "homepage": "/u/ideas"
      }
    },
    {
      "id": "1190000017180859",
      "title": "【跃迁之路】【654天】程序员高效学习方法论探索系列（实验阶段411-2018.11.28）",
      "url": "/a/1190000017180859",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000017178722",
      "title": " 超详细，新手都能看懂 ！使用SpringBoot+Dubbo 搭建一个简单的分布式服务",
      "url": "/a/1190000017178722",
      "desc": "Github 地址：[链接] ，欢迎各位 Star。 目录： 使用 SpringBoot+Dubbo 搭建一个简单分布式服务 实战之前，先来看几个重要的概念 什么是分布式? 什么是 Duboo？ Dubbo 架构 什么是 RPC？ 为什么要用 Dubbo？ 开始...",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    },
    {
      "id": "1190000017177261",
      "title": "应用监控的选型思考",
      "url": "/a/1190000017177261",
      "desc": "最近由于项目的缘故，经常会和同学们聊到一个话题，那就是企业如何在应用性能管理(Application Performance Monitoring, 简称APM) 领域的开源和商业化产品中选择合适自己的产品，下面就以该领域为例和大家做一个...",
      "author": {
        "nick": "暖忆",
        "homepage": "/u/nuanyi"
      }
    },
    {
      "id": "1190000017176658",
      "title": "什么是RESTFUL？REST的请求方法有哪些，有什么区别？",
      "url": "/a/1190000017176658",
      "desc": "这里是修真院前端小课堂，每篇分享文从 【背景介绍】【知识剖析】【常见问题】【解决方案】【编码实战】【扩展思考】【更多讨论】【参考文献】 八个方面深度解析前端知识/技能，本篇分享的是： 【什么是RESTFUL？...",
      "author": {
        "nick": "IT修真院",
        "homepage": "/u/itxiuzhenyuan"
      }
    },
    {
      "id": "1190000017176401",
      "title": "自学 Java 怎么入门？",
      "url": "/a/1190000017176401",
      "desc": "第一。 Java语法的学习。 3天 你需要会这些： 1. String，Integer，Long，Array，List，Map会用就够了。 2. Interface和Impl能分得清就够了，永远不要去用继承。 3.Model，也是Bean，记着Model里只有Get和Set方法...",
      "author": {
        "nick": "IT修真院",
        "homepage": "/u/itxiuzhenyuan"
      }
    },
    {
      "id": "1190000017176397",
      "title": "Java™ 教程（注解）",
      "url": "/a/1190000017176397",
      "desc": "注解 注解（一种元数据形式）提供有关不属于程序本身的程序的数据，注解对它们注解的代码的操作没有直接影响。 注解有许多用途，其中包括： 编译器的信息 — 编译器可以使用注解来检测错误或抑制警告。 编译时和部...",
      "author": {
        "nick": "博弈",
        "homepage": "/u/leon_qi"
      }
    }
  ]
}