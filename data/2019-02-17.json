{
  "watchNum": "40335",
  "blogs": [
    {
      "id": "1190000018179569",
      "title": "枚举的使用示例",
      "url": "/a/1190000018179569",
      "desc": "在枚举中增加一个方法用于通过数字型的状态码获取对应的消息（类似于map中通过key来找value）。",
      "author": {
        "nick": "RainNenya",
        "homepage": "/u/rainnenya"
      }
    },
    {
      "id": "1190000018179391",
      "title": "【跃迁之路】【727天】程序员高效学习方法论探索系列（实验阶段484-2019.2.17）",
      "url": "/a/1190000018179391",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000018179149",
      "title": "Netty+SpringBoot+FastDFS+Html5实现聊天App详解(四)",
      "url": "/a/1190000018179149",
      "desc": "Netty+SpringBoot+FastDFS+Html5实现聊天App，项目介绍。Netty+SpringBoot+FastDFS+Html5实现聊天App，项目github链接。本章完整代码链接。",
      "author": {
        "nick": "Shimmer",
        "homepage": "/u/shimmer_5bbffffb26ebf"
      }
    },
    {
      "id": "1190000018177736",
      "title": "leetcode398. Random Pick Index",
      "url": "/a/1190000018177736",
      "desc": "设计一个数据结构，使得从该数据结构中查询一个数字时，能够以等概率返回该数字所在的任何下标。额外的要求是只要占用O(1)的额外的空间复杂度。",
      "author": {
        "nick": "raledong",
        "homepage": "/u/raledong"
      }
    },
    {
      "id": "1190000018177725",
      "title": "Java代码如何运行在Java虚拟机中",
      "url": "/a/1190000018177725",
      "desc": "我们都知道要运行Java代码就必须要有JRE，也就是Java运行时环境，JRE中包含了Java程序的必需组件，包括Java虚拟机以及Java核心类库，然而运行C++代码则不需要额外的运行时环境，只需要把代码编译成CPU能识别的指...",
      "author": {
        "nick": "贱贱",
        "homepage": "/u/jianjian_591c30d4a2854"
      }
    },
    {
      "id": "1190000018177151",
      "title": "1048 数字加密 （20 分）java",
      "url": "/a/1190000018177151",
      "desc": "本题要求实现一种数字加密方法。首先固定一个加密用正整数 A，对任一正整数 B，将其每 1 位数字与 A 的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对 13 取余——这里用 J 代表 10、Q 代表 11、K ...",
      "author": {
        "nick": "PangHuanTeng",
        "homepage": "/u/panghuanteng"
      }
    },
    {
      "id": "1190000018176880",
      "title": "统计两个IP地址之间的IP个数",
      "url": "/a/1190000018176880",
      "desc": "求两个IP地址之间的IP个数，例如192.18.16.1~192.18.16.5，2001:DB8:0000:0023:0008:0800:200C:417C~2001:DB8:0:23:8:800:200C:417D之间的IP个数？",
      "author": {
        "nick": "晓序东风",
        "homepage": "/u/xxdf"
      }
    },
    {
      "id": "1190000018176747",
      "title": "集成Netty|tensorflow实现 聊天AI--PigPig养成记(2)",
      "url": "/a/1190000018176747",
      "desc": "本章将介绍项目关于Netty的集成问题，在集成Netty之后，我们的AI_PigPig可以通过web应用与大家日常互撩。由于只是一个小测试，所以不考虑性能方面的问题，在下一章我们将重点处理效率难关，集成Redis。",
      "author": {
        "nick": "Shimmer",
        "homepage": "/u/shimmer_5bbffffb26ebf"
      }
    },
    {
      "id": "1190000018176613",
      "title": "【Java并发】线程安全性",
      "url": "/a/1190000018176613",
      "desc": "定义：当多个线程访问某个类时，不管运行时环境采用何种调度方式或者这些线程将如何交替执行，并且在主调代码中不需要任何额外的同步或协同，这个类都能表现出正确的行为，那么就称这个类是线程安全的。",
      "author": {
        "nick": "gcusky",
        "homepage": "/u/gcusky"
      }
    },
    {
      "id": "1190000018176143",
      "title": "【Leetcode】95~96 不同的二叉搜索树",
      "url": "/a/1190000018176143",
      "desc": "Leetcode 95 不同的二叉搜索树 II 输入: 3输出: {代码...} 解释:以上的输出对应以下 5 种不同结构的二叉搜索树： {代码...} Leetcode 86 不同的二叉搜索树 给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树...",
      "author": {
        "nick": "Acceml",
        "homepage": "/u/acceml"
      }
    },
    {
      "id": "1190000018175660",
      "title": "【跃迁之路】【726天】程序员高效学习方法论探索系列（实验阶段483-2019.2.16）",
      "url": "/a/1190000018175660",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000018175282",
      "title": "Netty+SpringBoot+FastDFS+Html5实现聊天App详解(三)",
      "url": "/a/1190000018175282",
      "desc": "Netty+SpringBoot+FastDFS+Html5实现聊天App，项目介绍。Netty+SpringBoot+FastDFS+Html5实现聊天App，项目github链接。本章完整代码链接。本节主要讲解聊天App PigChat中关于好友申请的发送与接受。",
      "author": {
        "nick": "Shimmer",
        "homepage": "/u/shimmer_5bbffffb26ebf"
      }
    },
    {
      "id": "1190000018174913",
      "title": "力扣(LeetCode)72",
      "url": "/a/1190000018174913",
      "desc": "题目地址：[链接]题目描述：给定两个单词 word1 和 word2，计算出将 word1 转换成 word2 所使用的最少操作数 。",
      "author": {
        "nick": "Linus脱袜子",
        "homepage": "/u/qiuqi_turing"
      }
    },
    {
      "id": "1190000018171818",
      "title": "Java技术转（兼顾）产品经理——读《快速转行做产品经理》有感",
      "url": "/a/1190000018171818",
      "desc": "年前部门一次性购买了一批书，我知道这次我应该会被指派阅读一些偏向于管理类的书籍，但是没想到美女领导直接给了我这本书《快速转行做产品经理》，其实一开始我有点反抗，因为我并不想放弃我的技术核心行业，我...",
      "author": {
        "nick": "Java猫说",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000018171611",
      "title": "leetcode381. Insert Delete GetRandom O(1) - Duplicates allowed",
      "url": "/a/1190000018171611",
      "desc": "设计一个数据结构，支持能够在O(1)的时间内完成对数字的插入，删除和获取随机数的操作，允许插入重复的数字，同时要求每个数字被随机获取的概率和该数字当前在数据结构中的个数成正比。",
      "author": {
        "nick": "raledong",
        "homepage": "/u/raledong"
      }
    }
  ]
}