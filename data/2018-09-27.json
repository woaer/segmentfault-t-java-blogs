{
  "watchNum": "29886",
  "blogs": [
    {
      "id": "1190000016533657",
      "title": "线程间的同步与通信(8)——Semaphore源码分析",
      "url": "/a/1190000016533657",
      "desc": "Semaphore（信号量）也是常用的并发工具之一，它常常用于流量控制。通常情况下，公共的资源常常是有限的，例如数据库的连接数。使用Semaphore可以帮助我们有效的管理这些有限资源的使用。",
      "author": {
        "nick": "ChiuCheng",
        "homepage": "/u/chiucheng"
      }
    },
    {
      "id": "1190000016533060",
      "title": "还没用上 JDK 11吧，JDK 12 早期访问构建版使用",
      "url": "/a/1190000016533060",
      "desc": "本周Java的最大新闻可能是JDK 11的正式发布。不过在 6 月底，JDK 11 就已经进入了 Rampdown Phase One 阶段，这意味着该版本所有新的功能特性被冻结，不会再加入更多的 JEP，然而，另一个令人兴奋的发展是JDK 12 ...",
      "author": {
        "nick": "关注公众号搜云库",
        "homepage": "/u/souyunku"
      }
    },
    {
      "id": "1190000016532806",
      "title": "Aidl进程间通信详细介绍",
      "url": "/a/1190000016532806",
      "desc": "目录介绍 1.问题答疑 2.Aidl相关属性介绍 2.1 AIDL所支持的数据类型 2.2 服务端和客户端 2.3 AIDL的基本概念 3.实际开发中案例操作 3.1 aidl通信业务需求 3.2 操作步骤伪代码 3.3 服务端操作步骤 3.4 客户端操作...",
      "author": {
        "nick": "潇湘剑雨",
        "homepage": "/u/xiangjianyu"
      }
    },
    {
      "id": "1190000016531302",
      "title": "使用EOSJS和scatter在EOS区块链上开发dApp",
      "url": "/a/1190000016531302",
      "desc": "由于我一直在深入研究EOS dApp的开发，我看了不少好文章。在这里，我汇总了下做一些研究后得到的所有知识。在本文中，我将解释如何使用EOSJS和scatter。我假设你对智能合约以及如何在EOS区块链上部署它们有基本的...",
      "author": {
        "nick": "malakashi",
        "homepage": "/u/malakashi"
      }
    },
    {
      "id": "1190000016529083",
      "title": "微服务写的最全的一篇文章",
      "url": "/a/1190000016529083",
      "desc": "今年有人提出了2018年微服务将疯狂至死，可见微服务的争论从未停止过。在这我将自己对微服务的理解整理了一下，希望对大家有所帮助。",
      "author": {
        "nick": "bali",
        "homepage": "/u/bali_5a0a92fba16aa"
      }
    },
    {
      "id": "1190000016529889",
      "title": "JAVA继承时父类子类都有静态代码块构造代码块时输出顺序问题",
      "url": "/a/1190000016529889",
      "desc": "父类，子类 子类方法三者中有同名变量num时，调用子类方法输出，num输出30，为子类方法中的值，this.num表示子类中的值，super.num表示父类中的值。",
      "author": {
        "nick": "Kenny",
        "homepage": "/u/kenny_5babab97a39f6"
      }
    },
    {
      "id": "1190000016528123",
      "title": "JDK11新特性解读",
      "url": "/a/1190000016528123",
      "desc": "千呼万唤，JDK11于2018-09-25正式发布GA版本(GA即General Availability，也就是官方推荐可以广泛使用的版本)，其中发布了包括ZGC、Flight Recorder等17个新特性，让我们一睹为快。",
      "author": {
        "nick": "IT4Life",
        "homepage": "/u/it4life"
      }
    },
    {
      "id": "1190000016527932",
      "title": " Java11的新特性",
      "url": "/a/1190000016527932",
      "desc": "Java语言特性系列 Java5的新特性 Java6的新特性 Java7的新特性 Java8的新特性 Java9的新特性 Java10的新特性 Java11的新特性 Java12的新特性 序 本文主要讲述一下Java11的新特性 版本号 {代码...} General-Availa...",
      "author": {
        "nick": "codecraft",
        "homepage": "/u/codecraft"
      }
    },
    {
      "id": "1190000016527822",
      "title": "Spring Cloud OAuth2 优雅集成登录",
      "url": "/a/1190000016527822",
      "desc": "基于Spring Boot创建项目server-auth[链接]在pom.xml添加lombok，并且idea安装了lombok插件（不会安装，百度一下）",
      "author": {
        "nick": "裕谷",
        "homepage": "/u/yugu"
      }
    },
    {
      "id": "1190000016527781",
      "title": "Java编程基础20——异常&IO(File类)",
      "url": "/a/1190000016527781",
      "desc": "1_异常(异常的概述和分类) A:异常的概述 异常就是Java程序在运行过程中出现的错误。 B:异常的分类 通过API查看Throwable Error 服务器宕机,数据库崩溃等 Exception C:异常的继承体系 {代码...} 2_异常(JVM默认是...",
      "author": {
        "nick": "扎瓦",
        "homepage": "/u/ideas"
      }
    },
    {
      "id": "1190000016527581",
      "title": "【跃迁之路】【598天】程序员高效学习方法论探索系列（实验阶段355-2018.09.26）",
      "url": "/a/1190000016527581",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000016527275",
      "title": "设计模式--静态工厂、简单工厂方法案例分析",
      "url": "/a/1190000016527275",
      "desc": "1.学习本篇文章，了解简单工厂设计模式的使用场景。2.如何使用简单工厂模式。3.简单工厂模式能解决什么问题？",
      "author": {
        "nick": "Eirunye",
        "homepage": "/u/eirunye"
      }
    },
    {
      "id": "1190000016527100",
      "title": "rocketmq之producer解析",
      "url": "/a/1190000016527100",
      "desc": "1、核心发布消息的类DefaultMQProducer，继承自MQProducer接口，此接口定义了一系列发送消息的方法，如普通消息，顺序消息，延时消息等，最终进行网络通信会交给MQClientAPIImpl处理。",
      "author": {
        "nick": "杨辉",
        "homepage": "/u/qzuser_5831baa1efc7f"
      }
    },
    {
      "id": "1190000016526815",
      "title": "fast-family快速开发框架,让你的CRUD更快更强",
      "url": "/a/1190000016526815",
      "desc": "fast-family是一个快速开发框架,减少业务开发人员工作量.砍掉常规代码生成器.统一业务开发人员编码规范",
      "author": {
        "nick": "有点站不稳",
        "homepage": "/u/youdianzhanbuwen"
      }
    },
    {
      "id": "1190000016526462",
      "title": "如何以并发方式在同一个流上执行多种操作？--复制流",
      "url": "/a/1190000016526462",
      "desc": "正常情况下，一个流在执行一次终端操作之后便结束了。本文通过复制流内数据的方式，曲折的实现了同一个流上执行多次操作。Demo只是思路，其性能并不一定高效，尤其是数据都在内存中处理时复制的开销很大。但如果...",
      "author": {
        "nick": "矮人水枪手",
        "homepage": "/u/airenshuiqiangshou"
      }
    }
  ]
}