{
  "watchNum": "30114",
  "blogs": [
    {
      "id": "1190000016973561",
      "title": "【跃迁之路】【637天】程序员高效学习方法论探索系列（实验阶段394-2018.11.10）",
      "url": "/a/1190000016973561",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000016973554",
      "title": "java高性能反射及性能对比",
      "url": "/a/1190000016973554",
      "desc": "java编程中，使用反射来增强灵活性（如各类框架）、某些抽象（如各类框架）及减少样板代码（如Java Bean）。因此，反射在实际的java项目中被大量使用。",
      "author": {
        "nick": "frapples",
        "homepage": "/u/frapples"
      }
    },
    {
      "id": "1190000016973075",
      "title": "《Java8实战》-第十一章笔记（CompletableFuture：组合式异步编程）",
      "url": "/a/1190000016973075",
      "desc": "最近这些年，两种趋势不断地推动我们反思我们设计软件的方式。第一种趋势和应用运行的硬件平台相关，第二种趋势与应用程序的架构相关，尤其是它们之间如何交互。我们在第7章中已经讨论过硬件平台的影响。我们注意...",
      "author": {
        "nick": "雷侠",
        "homepage": "/u/nglsl666"
      }
    },
    {
      "id": "1190000016972789",
      "title": "Java集合总结",
      "url": "/a/1190000016972789",
      "desc": "概述 Java集合类主要有2大分支，Collection及Map。Collection体系如下： [链接] [链接] Map体系如下： [链接] Collection体系如下[链接]1、List接口和Set接口都继承自Collection接口，Collection接口继承Iterable...",
      "author": {
        "nick": "Huangy远",
        "homepage": "/u/huangyuanlu"
      }
    },
    {
      "id": "1190000016972726",
      "title": "dubbo源码解析——cluster",
      "url": "/a/1190000016972726",
      "desc": "将 Directory 中的多个 Invoker 伪装成一个 Invoker（伪装过程用到loadBalance），对上层透明，伪装过程包含了容错逻辑，调用失败后，重试另一个。简单来说,就是应对出错情况采取的策略。看看这个接口：该接口有9...",
      "author": {
        "nick": "Huangy远",
        "homepage": "/u/huangyuanlu"
      }
    },
    {
      "id": "1190000016972720",
      "title": "dubbo源码解析——Directory",
      "url": "/a/1190000016972720",
      "desc": "首先来看一下directory接口的实现类,他主要有两个实现类,一个是StaticDirectory,一个是RegistryDirectory，本文主要解析RegistryDirectory。",
      "author": {
        "nick": "Huangy远",
        "homepage": "/u/huangyuanlu"
      }
    },
    {
      "id": "1190000016972704",
      "title": "dubbo源码解析——消费过程",
      "url": "/a/1190000016972704",
      "desc": "上一篇 dubbo源码解析——概要篇中我们了解到dubbo中的一些概念及消费端总体调用过程。本文中，将进入消费端源码解析（具体逻辑会放到代码的注释中）。本文先是对消费过程的总体代码逻辑理一遍，个别需要细讲的点，...",
      "author": {
        "nick": "Huangy远",
        "homepage": "/u/huangyuanlu"
      }
    },
    {
      "id": "1190000016972679",
      "title": "dubbo源码解析——概要篇",
      "url": "/a/1190000016972679",
      "desc": "这次源码解析借鉴《肥朝》前辈的dubbo源码解析，进行源码学习。总结起来就是先总体,后局部.也就是先把需要注意的概念先抛出来,把整体架构图先画出来.让读者拿着\"地图\"跟着我的脚步,并且每一步我都提醒,现在我们在...",
      "author": {
        "nick": "Huangy远",
        "homepage": "/u/huangyuanlu"
      }
    },
    {
      "id": "1190000016972445",
      "title": " 【备战春招/秋招系列】美团面经总结基础篇 （附详解答案）",
      "url": "/a/1190000016972445",
      "desc": "【强烈推荐！非广告！】阿里云双11褥羊毛活动：[链接] 差不多一折，不过仅限阿里云新人购买，不是新人的朋友自己找方法买哦！",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    },
    {
      "id": "1190000016971486",
      "title": "集合框架知识系列06  HashMap和TreeMap中的红黑树",
      "url": "/a/1190000016971486",
      "desc": "{代码...} 一、红黑树的特征和基本操作 {代码...} 1、红黑树的数据结构 {代码...} {代码...} 2、红黑树的左旋和右旋 {代码...} {代码...} 3、插入节点后调整红黑树 当在红黑树中插入一个节点后，可能会破坏红黑树...",
      "author": {
        "nick": "zhzhd",
        "homepage": "/u/zhzhd"
      }
    },
    {
      "id": "1190000016969753",
      "title": "面试官：说说快速失败和安全失败是什么",
      "url": "/a/1190000016969753",
      "desc": "什么是快速失败（fail-fast）和安全失败（fail-safe）？它们又和什么内容有关系。以上两点就是这篇文章的内容，废话不多话，正文请慢用。",
      "author": {
        "nick": "不只Java",
        "homepage": "/u/buzhijava"
      }
    },
    {
      "id": "1190000016968628",
      "title": "简易RPC框架：序列化机制",
      "url": "/a/1190000016968628",
      "desc": "在上一篇文章《简易RPC框架：基于 netty 的协议编解码》中谈到对于协议的 decode 和 encode，在谈 decode 之前，必须先要知道 encode 的过程是什么，它把什么东西转化成了二进制协议。由于我们还未谈到具体的 RPC...",
      "author": {
        "nick": "beanlam",
        "homepage": "/u/beanlam"
      }
    },
    {
      "id": "1190000016968156",
      "title": "【备战春招/秋招系列】Java程序员必备书单",
      "url": "/a/1190000016968156",
      "desc": "【强烈推荐！非广告！】阿里云双11褥羊毛活动：[链接] 差不多一折，不过仅限阿里云新人购买，不是新人的朋友自己找方法买哦！",
      "author": {
        "nick": "Snailclimb",
        "homepage": "/u/snailclimb"
      }
    },
    {
      "id": "1190000016967229",
      "title": "开发NEO智能合约的步骤流程",
      "url": "/a/1190000016967229",
      "desc": "摘要：开发NEO智能合约的典型开发流程有两个实际阶段：编码（在IDE中编码并将源码编译为.avm文件）以及测试（在测试网上部署、调用、检查结果）。这个工作流需要编译和部署来调试任何代码的变更。在NEO社区开发的...",
      "author": {
        "nick": "NEO爱好者",
        "homepage": "/u/neoaihaozhe"
      }
    },
    {
      "id": "1190000016966832",
      "title": "【跃迁之路】【636天】程序员高效学习方法论探索系列（实验阶段393-2018.11.09）",
      "url": "/a/1190000016966832",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    }
  ]
}