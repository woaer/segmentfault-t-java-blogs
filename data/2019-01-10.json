{
  "watchNum": "36677",
  "blogs": [
    {
      "id": "1190000017841257",
      "title": "Java™ 教程（为什么要使用泛型？）",
      "url": "/a/1190000017841257",
      "desc": "在任何重要的软件项目中，bug都是不可避免的，仔细的规划、编程和测试可以帮助减少它们的普遍性，但是它们总会在某个地方以某种方式潜入你的代码，随着新功能的引入以及你的代码库在规模和复杂性方面的增长，这一...",
      "author": {
        "nick": "博弈",
        "homepage": "/u/lfheart"
      }
    },
    {
      "id": "1190000017841040",
      "title": "SpringBoot搭建一个SSM开发框架",
      "url": "/a/1190000017841040",
      "desc": "tx-parent 顶级父项目（公司默认有的） |- tx-manager ---------------------------pom.xml 父项目",
      "author": {
        "nick": "老男孩",
        "homepage": "/u/laonanhai_5b474e6f3957a"
      }
    },
    {
      "id": "1190000017840737",
      "title": "Spring详解4.容器内幕",
      "url": "/a/1190000017840737",
      "desc": "AbstractApplicationContext是ApplicationContext的抽象实现类，其中最重要的是refresh()方法，它定义了容器在加载配置文件以后的各项处理过程。",
      "author": {
        "nick": "SpiderLucas",
        "homepage": "/u/spidersama"
      }
    },
    {
      "id": "1190000017839924",
      "title": "前后端分离应用——用户信息传递",
      "url": "/a/1190000017839924",
      "desc": "前言 记录前后端分离的系统应用下应用场景————用户信息传递 需求缘起 照例先看看web系统的一张经典架构图，这张图参考自网络： 在　Ｄubbo 自定义异常，你是怎么处理的？ 中已经对该架构做了简单说明，这里不再描...",
      "author": {
        "nick": "张少林同学",
        "homepage": "/u/zhangshaolintongxue_5c20a226c6646"
      }
    },
    {
      "id": "1190000017839204",
      "title": "为什么需要Docker？",
      "url": "/a/1190000017839204",
      "desc": "估计大家也可能听过Docker这项技术(在论坛上、招聘技能上、交流群上等等)，要是不了解Docker，都不好意思在网上冲浪的时候吹牛逼了。",
      "author": {
        "nick": "Java3y",
        "homepage": "/u/java_3y"
      }
    },
    {
      "id": "1190000017839056",
      "title": "Java™ 教程（自动装箱和拆箱）",
      "url": "/a/1190000017839056",
      "desc": "自动装箱是Java编译器在基元类型和相应的对象包装类之间进行的自动转换，例如，将int转换为Integer，将double转换为Double，依此类推，如果转换是另一种方式，则称为拆箱。",
      "author": {
        "nick": "博弈",
        "homepage": "/u/lfheart"
      }
    },
    {
      "id": "1190000017838497",
      "title": "我不是机器人：谷歌最新版验证码系统ReCaptcha破解已开源",
      "url": "/a/1190000017838497",
      "desc": "每个人都讨厌验证码，这些恼人的图片中包含你必须输入的字符，我们只有正确地填写才能继续访问网站。验证码旨在确认访问者是人还是程序，并防止恶意程序的入侵。然而，随着深度学习和计算机视觉技术的发展，现在...",
      "author": {
        "nick": "爱编码的coder",
        "homepage": "/u/chengxuyuanxiaohui"
      }
    },
    {
      "id": "1190000017838375",
      "title": "Mybatis是如何工作的（一）",
      "url": "/a/1190000017838375",
      "desc": "本文目标： 使用纯Mybatis框架获取数据； 理清Mybatis的工作过程。 创建项目并运行 首先创建maven项目，过程不再赘述。依赖如下： {代码...} 下面准备一张表： {代码...} 添加一条数据： 对应的实体类： {代码......",
      "author": {
        "nick": "星河",
        "homepage": "/u/xinghe_super"
      }
    },
    {
      "id": "1190000017838041",
      "title": "关于跨域攻击和网络信标",
      "url": "/a/1190000017838041",
      "desc": "本人工作中偶尔会和浏览器打交道，也遇到过一些坑，在此分享一下网页跨域访问的相关场景和知识，希望对读者有帮助。本文来自于我的博客网站：www.51think.net",
      "author": {
        "nick": "思想者",
        "homepage": "/u/sixiangzhe_5c309b3233be8"
      }
    },
    {
      "id": "1190000017835417",
      "title": "Java™ 教程（StringBuilder类）",
      "url": "/a/1190000017835417",
      "desc": "StringBuilder对象与String对象类似，只是它可以被修改，在内部，这些对象被视为包含一系列字符的可变长度数组，在任何时候，可以通过方法调用来改变序列的长度和内容。",
      "author": {
        "nick": "博弈",
        "homepage": "/u/lfheart"
      }
    },
    {
      "id": "1190000017834831",
      "title": "马上收藏！史上最全正则表达式合集",
      "url": "/a/1190000017834831",
      "desc": "正则表达式，新手见它的感觉就是“这都什么玩意，乱七八糟的，完全不知所云”，但学会它就会体验那种一行代码抵数十上百行，效率飞起的感觉，简直不要太爽。今天小肆先把我自己收藏的一些正则表达式写法分享给大家...",
      "author": {
        "nick": "Feleti",
        "homepage": "/u/feleti"
      }
    },
    {
      "id": "1190000017834694",
      "title": "Java™ 教程（比较字符串和字符串的部分）",
      "url": "/a/1190000017834694",
      "desc": "以下程序RegionMatchesDemo使用regionMatches方法在另一个字符串中搜索字符串：",
      "author": {
        "nick": "博弈",
        "homepage": "/u/lfheart"
      }
    },
    {
      "id": "1190000017834659",
      "title": "微服务架构的核心要点和实现原理",
      "url": "/a/1190000017834659",
      "desc": "比如外部应用要调用服务1, 就会经过 API 网关(外部服务), 内部应用也是一样的. 如果服务N要调用服务2, 则也需要通过 API 网关进行调用.",
      "author": {
        "nick": "sc_ik",
        "homepage": "/u/sc_ik"
      }
    },
    {
      "id": "1190000017834568",
      "title": "Java™ 教程（操纵字符串中的字符）",
      "url": "/a/1190000017834568",
      "desc": "String类有许多方法可用于检查字符串的内容，查找字符串中的字符或子字符串，更改大小写以及其他任务。",
      "author": {
        "nick": "博弈",
        "homepage": "/u/lfheart"
      }
    },
    {
      "id": "1190000017834406",
      "title": "【跃迁之路】【690天】程序员高效学习方法论探索系列（实验阶段447-2019.1.9）",
      "url": "/a/1190000017834406",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    }
  ]
}