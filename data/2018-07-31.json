{
  "watchNum": "24401",
  "blogs": [
    {
      "id": "1190000015828094",
      "title": "【Java猫说】每日算法：#4-选择排序",
      "url": "/a/1190000015828094",
      "desc": "Java每日算法 分析 选择排序，一种O(n^2)的排序算法。 1、为什么学习O(n^2)的排序算法？ {代码...} 2、什么是选择排序（Selection Sort） {代码...} 编码 {代码...} 地址与代码获取 项目以传Github，定期更新算法...",
      "author": {
        "nick": "MySelf",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000015827227",
      "title": "JDBC查询条件中包含中文，无查询结果（编码问题）",
      "url": "/a/1190000015827227",
      "desc": "问题描述：查询条件：where name='关税'client 查询结果：正常显示jdbc 查询结果：无显示",
      "author": {
        "nick": "爱笑的猫",
        "homepage": "/u/liyancheng"
      }
    },
    {
      "id": "1190000015826733",
      "title": "深入理解HashMap(五): 关键源码逐行分析之put",
      "url": "/a/1190000015826733",
      "desc": "上一篇我们讨论了HashMap的扩容操作, 提到扩容操作发生在table的初始化或者table大小超过threshold后，而这两个条件的触发基本上就发生在put操作中。",
      "author": {
        "nick": "ChiuCheng",
        "homepage": "/u/chiucheng"
      }
    },
    {
      "id": "1190000015825207",
      "title": "Java多线程进阶（十三）—— J.U.C之atomic框架：AtomicInteger类",
      "url": "/a/1190000015825207",
      "desc": "AtomicInteger，应该是atomic框架中用得最多的原子类了。顾名思义，AtomicInteger是Integer类型的线程安全原子类，可以在应用程序中以原子的方式更新int值。",
      "author": {
        "nick": "Ressmix",
        "homepage": "/u/ressmix"
      }
    },
    {
      "id": "1190000015822883",
      "title": "录制回放模式创建测试用例 - Katalon Studio",
      "url": "/a/1190000015822883",
      "desc": "对于自动化测试菜鸟来说，开始学习自动化最简单的方法是测试录制。识别应用系统上的对象是一件费时且痛苦的事情。Web Recorder Utility（网页录制功能） 捕获你在应用系统上的操作行为并且在后台把它们转化为可运...",
      "author": {
        "nick": "Janny",
        "homepage": "/u/jannytester"
      }
    },
    {
      "id": "1190000015822828",
      "title": "脚本模式创建测试用例 - Katalon Studio",
      "url": "/a/1190000015822828",
      "desc": "脚本模式创建测试用例 在手动视图之外，Katalon Studio还允许专家级用户在脚本视图中用编程方式编写自动化测试用例。有Groovy/Java 背景的用户可以在这个视图中很容易地编辑测试脚本。 如何使用Katalon Studio手...",
      "author": {
        "nick": "Janny",
        "homepage": "/u/jannytester"
      }
    },
    {
      "id": "1190000015822794",
      "title": "spring 入门 3 整合JDBC和AOP事务",
      "url": "/a/1190000015822794",
      "desc": "spring整合JDBC spring提供了很多模板整合Dao技术 ORM持久化技术 模板类 JDBC org.springframework.Jdbc.core.JdbcTemplate Hibernate3.0 org.springframework.orm.hiberate3.HibernateTemplate IBatis(MyBatis) ...",
      "author": {
        "nick": "zer0_li",
        "homepage": "/u/zer0_li"
      }
    },
    {
      "id": "1190000015822481",
      "title": "了解dubbo序列化 从bug开始",
      "url": "/a/1190000015822481",
      "desc": "首先交代背景，前几天遇到一个小bug，由于其他系统的一个DTO子类和父类有一个字段名重复了，所以导致我set的子类字段那边拿不到值。改起来很简单嘛，让对面把子类的字段删掉就好，但是拿不到值的原因让我想了很久...",
      "author": {
        "nick": "马振杰",
        "homepage": "/u/mazhenjie"
      }
    },
    {
      "id": "1190000015822442",
      "title": "一位资深程序员大牛给予Java初学者的学习路线建议",
      "url": "/a/1190000015822442",
      "desc": "每天进步一丢丢,连接梦与想推荐一篇深度好文，指引你如何去学java大概需要18分钟阅读作者:华行天下原地址: [链接]",
      "author": {
        "nick": "java从心",
        "homepage": "/u/javacongxin"
      }
    },
    {
      "id": "1190000015822141",
      "title": "SpringBoot 中 @SpringBootApplication注解背后的三体结构探秘",
      "url": "/a/1190000015822141",
      "desc": "SpringBoot 约定大于配置 的功力让我们如沐春风，在我之前写的文章《从SpringBoot到SpringMVC》 也对比过 SpringBoot 和 SpringMVC 这两个框架，不过最终 SpringBoot 以超高的代码信噪比 和 易上手性 让我们映像...",
      "author": {
        "nick": "CodeSheep",
        "homepage": "/u/hansonwang99"
      }
    },
    {
      "id": "1190000015821501",
      "title": "【跃迁之路】【540天】程序员高效学习方法论探索系列（实验阶段297-2018.07.30）",
      "url": "/a/1190000015821501",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持，不...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015821379",
      "title": "【跃迁之路】【540天】刻意练习系列299（2018.07.30）",
      "url": "/a/1190000015821379",
      "desc": "技术的精进不能只是简单的刷题，而应该是不断的“刻意”练习 该系列改版后正式纳入【跃迁之路】专栏，持续更新",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000015820968",
      "title": "HTTP2和HTTPS来不来了解一下？",
      "url": "/a/1190000015820968",
      "desc": "一、前言 只有光头才能变强 HTTP博文回顾： PC端：HTTP就是这么简单 PC端：HTTP面试题都在这里 微信公众号端：HTTP就是这么简单 微信公众号端：HTTP面试题都在这里 本文力求简单讲清每个知识点，希望大家看完能有...",
      "author": {
        "nick": "Java3y",
        "homepage": "/u/java_3y"
      }
    },
    {
      "id": "1190000015818532",
      "title": "Nodejs“实现”Dubbo Provider",
      "url": "/a/1190000015818532",
      "desc": "目前nodejs应用越来越广泛，但和java的dubbo体系接入困难，所以我们需要实现node端的dubbo provider逻辑。java的dubbo provider是和consumer在一个jar中，提供了服务配置、注册、集群与负载均衡、监控和多种协议...",
      "author": {
        "nick": "RoyalRover",
        "homepage": "/u/royalrover"
      }
    },
    {
      "id": "1190000015817512",
      "title": "半路出家的程序员，学到什么程度就能出去找工作了？",
      "url": "/a/1190000015817512",
      "desc": "谈到就业问题，都是大问题。谁都想有个好起点，一步领先可能步步领先。小编接触了很多学员，有些人一毕业就能拿到Offer，有的人迟迟徘徊。有的人勤奋刻苦，但是面临找工作却缕缕败下阵来。",
      "author": {
        "nick": "糖宝",
        "homepage": "/u/tangbao_5a152bb72d2ed"
      }
    }
  ]
}