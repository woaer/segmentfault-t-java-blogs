{
  "watchNum": "29879",
  "blogs": [
    {
      "id": "1190000016520312",
      "title": "面试",
      "url": "/a/1190000016520312",
      "desc": "1.1 为什么说简历很重要？1.2-这3点你必须知道1.3-两大法则了解一1.4-项目经历怎么写？1.5-专业技能该怎么写？1.6-开源程序员简历模板分享1.7 其他的一些小tips",
      "author": {
        "nick": "模糊",
        "homepage": "/u/mohu"
      }
    },
    {
      "id": "1190000016518256",
      "title": "线程间的同步与通信(7)——CyclicBarrier源码分析",
      "url": "/a/1190000016518256",
      "desc": "上一篇 我们学习了基于AQS共享锁实现的CountDownLatch，本篇我们来看看另一个和它比较像的并发工具CyclicBarrier。",
      "author": {
        "nick": "ChiuCheng",
        "homepage": "/u/chiucheng"
      }
    },
    {
      "id": "1190000016515823",
      "title": "分布式系统消息中间件——RibbitMQ的使用基础篇",
      "url": "/a/1190000016515823",
      "desc": "我是在解决分布式事务的一致性问题时了解到RabbitMQ的，当时主要是要基于RabbitMQ来实现我们分布式系统之间对有事务可靠性要求的系统间通信的。关于分布式事务一致性问题及其常见的解决方案，可以看我另一篇博客...",
      "author": {
        "nick": "bali",
        "homepage": "/u/bali_5a0a92fba16aa"
      }
    },
    {
      "id": "1190000016515140",
      "title": "【跃迁之路】【597天】程序员高效学习方法论探索系列（实验阶段354-2018.09.25）",
      "url": "/a/1190000016515140",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000016515127",
      "title": "【Leetcode】78. 子集",
      "url": "/a/1190000016515127",
      "desc": "全排列，部分排列这些问题都是回溯的题目。这个题目每个状态都是解，包括空list也是解，所以直接都加进去就好。",
      "author": {
        "nick": "Acceml",
        "homepage": "/u/acceml"
      }
    },
    {
      "id": "1190000016514348",
      "title": "对HashMap的思考及手写实现",
      "url": "/a/1190000016514348",
      "desc": "前言HashMap是Java中常用的集合，而且HashMap的一些思想，对于我们平时解决业务上的一些问题，在思路上有帮助，基于此，本篇博客将分析HashMap底层设计思想，并手写一个迷你版的HashMap！",
      "author": {
        "nick": "阿里java",
        "homepage": "/u/alijava"
      }
    },
    {
      "id": "1190000016513938",
      "title": "Java反射-方法",
      "url": "/a/1190000016513938",
      "desc": "使用反射可以检视类的方法，并在运行时调用。这是通过类java.lang.reflect.Method实现的。本文将深入介绍Method对象。",
      "author": {
        "nick": "团结",
        "homepage": "/u/2006"
      }
    },
    {
      "id": "1190000016513520",
      "title": "Java反射-属性",
      "url": "/a/1190000016513520",
      "desc": "使用反射可以检视类属性（成员变量），并且可以在运行时get/set。这些是通过类java.lang.reflect.Field实现的。本文将详细介绍javaField对象。别忘了参考Sun的JavaDoc。",
      "author": {
        "nick": "团结",
        "homepage": "/u/2006"
      }
    },
    {
      "id": "1190000016513317",
      "title": "让你久等了！《码出高效：Java 开发手册》正式发布",
      "url": "/a/1190000016513317",
      "desc": "9月22日杭州云栖大会，众所期待的新书《码出高效：Java 开发手册》正式发布，并宣布将所有图书收益捐赠于公益项目。",
      "author": {
        "nick": "阿里云云栖社区",
        "homepage": "/u/yunqishequ_5aa899aad5395"
      }
    },
    {
      "id": "1190000016512564",
      "title": "mysql数据库面试题",
      "url": "/a/1190000016512564",
      "desc": "数据库优化建表优化1）数据库范式l 第一范式（1NF）：强调的是列的原子性，即列不能够再分成其他几列。",
      "author": {
        "nick": "阿里java",
        "homepage": "/u/alijava"
      }
    },
    {
      "id": "1190000016511792",
      "title": "微信公众号 扫一扫",
      "url": "/a/1190000016511792",
      "desc": "使用 weixin-java-tools 完成公众端唤起微信扫一扫 如果没有引入相关的jar 可以查看之前的文章 点我 Java代码 使用 wxMpService 很方便获取一些微信需要的参数 {代码...} 前端拿到对象后直接塞到配置中 {代码...}...",
      "author": {
        "nick": "hao_",
        "homepage": "/u/hao_"
      }
    },
    {
      "id": "1190000016511589",
      "title": "Java反射-构造函数",
      "url": "/a/1190000016511589",
      "desc": "使用反射可以检视类的构造函数，并且能在运行时实例化对象。这些是通过java 类java.lang.reflect.Constructor实现的。本文将更详细的介绍Constructor类。",
      "author": {
        "nick": "团结",
        "homepage": "/u/2006"
      }
    },
    {
      "id": "1190000016510744",
      "title": "文件下载时前后台MD5校验",
      "url": "/a/1190000016510744",
      "desc": "在项目中发现，文件下载时有可能出现文件不完全导致的文件无法打开的情况，考虑在后台响应中加入文件MD5，与前台取得文件后生成的MD5值作一次校验，来判断文件是否正确下载。",
      "author": {
        "nick": "开到荼蘼",
        "homepage": "/u/sunqian1991"
      }
    },
    {
      "id": "1190000016510728",
      "title": "Java设计模式之builder模式",
      "url": "/a/1190000016510728",
      "desc": "今天学mybatis的时候，知道了SQLSessionFactory使用的是builder模式来生成的。再次整理一下什么是builder模式以及应用场景。",
      "author": {
        "nick": "scu酱油仔",
        "homepage": "/u/scu2jiangyouzi"
      }
    },
    {
      "id": "1190000016509799",
      "title": "嘻哈说：设计模式之里氏替换原则",
      "url": "/a/1190000016509799",
      "desc": "所有引用基类（父类）的地方必须能透明地使用其子类的对象。 通俗的说，子类可以扩展父类功能，但不能改变父类原有功能。",
      "author": {
        "nick": "番茄课堂_懒人",
        "homepage": "/u/fanqiekt"
      }
    }
  ]
}