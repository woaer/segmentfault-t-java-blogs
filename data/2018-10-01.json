{
  "watchNum": "29914",
  "blogs": [
    {
      "id": "1190000016578522",
      "title": "[LeetCode] 143. Reorder List",
      "url": "/a/1190000016578522",
      "desc": "Given a singly linked list L: L0→L1→…→Ln-1→Ln,reorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…",
      "author": {
        "nick": "linspiration",
        "homepage": "/u/linspiration"
      }
    },
    {
      "id": "1190000016578470",
      "title": "[LeetCode] 148. Sort List",
      "url": "/a/1190000016578470",
      "desc": "Sort a linked list in O(n log n) time using constant space complexity.",
      "author": {
        "nick": "linspiration",
        "homepage": "/u/linspiration"
      }
    },
    {
      "id": "1190000016577552",
      "title": "从程序员到架构师的方法与逻辑",
      "url": "/a/1190000016577552",
      "desc": "架构师这个词经常见到，很多人都冠着这个头衔，实际上很多人对架构师究竟是干什么的都没有统一的认识。V众投发起人李智勇则利用特定场景进行分析，诠释了架构师这个概念，并给出如何成为架构师方法。",
      "author": {
        "nick": "007大树将军",
        "homepage": "/u/javajiagoushi007"
      }
    },
    {
      "id": "1190000016576827",
      "title": "java实现多线程的两种方式",
      "url": "/a/1190000016576827",
      "desc": "多线程环境存在共享资源多个线程操作（修改）共享资源下面分别用继承Thread类和实现Runnable接口俩种方式实现并发控制，",
      "author": {
        "nick": "进取的心",
        "homepage": "/u/jinqudexin"
      }
    },
    {
      "id": "1190000016576805",
      "title": "分布式的系统核心是什么——日志",
      "url": "/a/1190000016576805",
      "desc": "日志就是按照时间顺序追加的、完全有序的记录序列，其实就是一种特殊的文件格式，文件是一个字节数组，而这里日志是一个记录数据，只是相对于文件来说，这里每条记录都是按照时间的相对顺序排列的，可以说日志是...",
      "author": {
        "nick": "007大树将军",
        "homepage": "/u/javajiagoushi007"
      }
    },
    {
      "id": "1190000016576329",
      "title": "前后端分离项目 — Java后台统一错误消息处理",
      "url": "/a/1190000016576329",
      "desc": "一般我们后台出错报Exception都是直接抛出来的，但是微信公众号，或者支付宝支付等等，他们的异常都有错误码对应错误信息，他们是如何根据错误信息展示对应的错误码提供给前端的呢，这也就是我们要说的统一错误消...",
      "author": {
        "nick": "Awbeci",
        "homepage": "/u/awbeci"
      }
    },
    {
      "id": "1190000016576212",
      "title": "Centos学习笔记14-java程序启动脚本",
      "url": "/a/1190000016576212",
      "desc": "服务器如果关机，应用比较多的话，需要重启把所有程序启动一遍。在网上找了一些脚本，综合改了一个新的出来。以后启动就可以少写一些命令了。",
      "author": {
        "nick": "星空",
        "homepage": "/u/xingkong2017"
      }
    },
    {
      "id": "1190000016576091",
      "title": "优秀架构师必须掌握的架构思维",
      "url": "/a/1190000016576091",
      "desc": "如果要问软件研发/系统架构中最重要的能力是什么，我会毫不犹豫回答是抽象能力。抽象(abstraction)这个词大家经常听到，但是真正理解和能讲清楚什么是抽象的人少之又少。抽象其实是这样定义的：",
      "author": {
        "nick": "007大树将军",
        "homepage": "/u/javajiagoushi007"
      }
    },
    {
      "id": "1190000016575200",
      "title": "Java 11 教程",
      "url": "/a/1190000016575200",
      "desc": "Java11 已于 2018/09/25 成功发布，不过目前 绝大多数人 在生产环境仍旧使用的是Java 8。这篇以案例为主的教程涵盖了从 Java 9 到 Java 11的绝大多数重要的语法与API特性。让我们开始吧！",
      "author": {
        "nick": "wangweiX",
        "homepage": "/u/wangweix"
      }
    },
    {
      "id": "1190000016575197",
      "title": "Java反射-注解",
      "url": "/a/1190000016575197",
      "desc": "注解是Java5的新特性。注解是可以添加到Java代码中的一种注释或者说是元数据。注解可以使用预编译工具在编译时处理，或者通过反射在运行时处理。下面是类注解的示例：",
      "author": {
        "nick": "团结",
        "homepage": "/u/2006"
      }
    },
    {
      "id": "1190000016574603",
      "title": "Java 设计模式之单例模式",
      "url": "/a/1190000016574603",
      "desc": "在《Head First 设计模式》一书中，将单例模式称作单件模式。这里为了适应大环境，把它称之为大家更熟悉的单例模式。",
      "author": {
        "nick": "留兰香",
        "homepage": "/u/zchen96"
      }
    },
    {
      "id": "1190000016574457",
      "title": "记JVM堆外内存泄漏Bug查找",
      "url": "/a/1190000016574457",
      "desc": "一个做BI数据展示的服务在一个晚上重启了5次，由于是通过k8s容器编排，服务挂了以后会自动重启，所以服务还能继续提供服务。",
      "author": {
        "nick": "扑火的蛾",
        "homepage": "/u/butterflyofzhang"
      }
    },
    {
      "id": "1190000016573322",
      "title": "加速JDBC的快捷方法",
      "url": "/a/1190000016573322",
      "desc": "JAVA 应用必须通过 JDBC 从数据库中取数，有时候我们会发现，数据库的负担一点也不重而且 SQL 很简单，但取数的速度仍然很慢。仔细测试会发现，性能瓶颈主要在 JDBC 上，比如 MySQL 的 JDBC 性能就非常差，Oracle...",
      "author": {
        "nick": "raqsoft",
        "homepage": "/u/raqsoft"
      }
    },
    {
      "id": "1190000016572591",
      "title": "FutureTask源码解析(2)——深入理解FutureTask",
      "url": "/a/1190000016572591",
      "desc": "在深入分析源码之前，我们再来拎一下FutureTask到底是干嘛的。人如其名，FutureTask包含了Future和Task两部分。",
      "author": {
        "nick": "ChiuCheng",
        "homepage": "/u/chiucheng"
      }
    },
    {
      "id": "1190000016571329",
      "title": "【MYSQL】使用RAID增加传统机器硬盘的性能",
      "url": "/a/1190000016571329",
      "desc": "RAID是磁盘冗余队列的简称（Redundant Arrays of Independent Disks）。简单来说，RAID的作用就是可以把多个容量较小的磁盘组成一组容量更大的磁盘，并提供数据冗余来保证数据完整性的技术。",
      "author": {
        "nick": "MySelf",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    }
  ]
}