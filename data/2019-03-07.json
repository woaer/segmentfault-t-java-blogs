{
  "watchNum": "42893",
  "blogs": [
    {
      "id": "1190000018418291",
      "title": "开发函数计算的正确姿势——运行 Selenium Java",
      "url": "/a/1190000018418291",
      "desc": "函数计算（Function Compute）: 函数计算是一个事件驱动的服务，通过函数计算，用户无需管理服务器等运行情况，只需编写代码并上传。函数计算准备计算资源，并以弹性伸缩的方式运行用户代码，而用户只需根据实际...",
      "author": {
        "nick": "阿里云云栖社区",
        "homepage": "/u/yunqishequ_5aa899aad5395"
      }
    },
    {
      "id": "1190000018417767",
      "title": "蓝桥杯 算法训练 审美课  java",
      "url": "/a/1190000018417767",
      "desc": "问题描述　　《审美的历程》课上有n位学生，帅老师展示了m幅画，其中有些是梵高的作品，另外的都出自五岁小朋友之手。老师请同学们分辨哪些画的作者是梵高，但是老师自己并没有答案，因为这些画看上去都像是小朋...",
      "author": {
        "nick": "PangHuanTeng",
        "homepage": "/u/panghuanteng"
      }
    },
    {
      "id": "1190000018417433",
      "title": "Java抽象类和接口小记",
      "url": "/a/1190000018417433",
      "desc": "Java抽象类和接口实现了java的多态.多态是面向对象程序语言的核心,在项目开发过程中,其实很少使用抽象类,接口用得比较多,今天小记一下抽象类和接口的区别.",
      "author": {
        "nick": "赵栩彬",
        "homepage": "/u/crabapple"
      }
    },
    {
      "id": "1190000018417104",
      "title": "Spring Boot Admin2.X监控的服务context-path问题",
      "url": "/a/1190000018417104",
      "desc": "在使用Spring Boot Admin进行监控时，如果被监控的服务没有加context-path的话是不会有任何问题的，一旦服务加了context-path的配置，监控就会失败。",
      "author": {
        "nick": "猿天地",
        "homepage": "/u/yuantiandi"
      }
    },
    {
      "id": "1190000018416216",
      "title": "基于虹软ArcFace2.0 java版 利用人脸识别猜年龄的demo",
      "url": "/a/1190000018416216",
      "desc": "这是一个用javav编写的可视化应用，用户通过自己的脸和计算机进行交互，计算机则通过萌萌女孩的语音和用户对话。核心程序就是利用ArcFace2.0识别性别、年龄，但是为了获得正面脸，会根据ArcFace2.0的人脸3D角度、...",
      "author": {
        "nick": "KEAIILIN",
        "homepage": "/u/keaiilin"
      }
    },
    {
      "id": "1190000018415592",
      "title": "你真的知道 == 和 equals 的区别吗？",
      "url": "/a/1190000018415592",
      "desc": "常见的错误回答就是：== 基础类型对比的是值是否相同，引用类型对比的是引用是否相同；而 equals 则是比较的值是否相同。",
      "author": {
        "nick": "王磊的博客",
        "homepage": "/u/vipstone"
      }
    },
    {
      "id": "1190000018415493",
      "title": "Java 200+ 面试题补充 ThreadLocal 模块",
      "url": "/a/1190000018415493",
      "desc": "ThreadLocal 是一个本地线程副本变量工具类。主要用于将私有线程和该线程存放的副本对象做一个映射，各个线程之间的变量互不干扰，在高并发场景下，可以实现无状态的调用，适用于各个线程不共享变量值的操作。",
      "author": {
        "nick": "王磊的博客",
        "homepage": "/u/vipstone"
      }
    },
    {
      "id": "1190000018415149",
      "title": "关于一次系统无法正常登陆的问题...",
      "url": "/a/1190000018415149",
      "desc": "今天下班前我自己都还登陆过的，咋突然间就不行了捏？怀着郁闷的心情，首先看了下为什么不能登陆，打开 了F12看了下：",
      "author": {
        "nick": "小哥",
        "homepage": "/u/xiaoge_5b5a97df9e470"
      }
    },
    {
      "id": "1190000018414564",
      "title": "说说Java 位运算",
      "url": "/a/1190000018414564",
      "desc": "前言 我们都知道，在计算机世界里，再复杂，再美的程序，到最后都会变成0与1。也就是我们常说的：二进制。二进制相信大家都很熟悉。与现实世界不同的是，在现实世界里，我们通常都是用十进制来表示的，也就是遇十...",
      "author": {
        "nick": "andyqian",
        "homepage": "/u/andyqian"
      }
    },
    {
      "id": "1190000018414064",
      "title": "支付与签名原串的那些事，但选择排序生成签名原串",
      "url": "/a/1190000018414064",
      "desc": "笔者最近在做支付、调用天猫优惠券、绑定银行卡相关的业务，在这些业务中，我们都需要将数据加密。然而，数据的加密方式不同，绑定银行卡用md5加密，这不涉及金钱上的往来，使用MD5加密没问题。然而，一旦涉及了...",
      "author": {
        "nick": "念兮",
        "homepage": "/u/nian_5aedc008c1353"
      }
    },
    {
      "id": "1190000018413573",
      "title": "掌握 MySQL 这 19 个骚操作，效率至少提高3倍",
      "url": "/a/1190000018413573",
      "desc": "本文我们来谈谈项目中常用的MySQL优化方法，共19条，利用好这19条方法，会让你的效率提升至少3倍。",
      "author": {
        "nick": "Java填坑之路",
        "homepage": "/u/javatiankengzhilu"
      }
    },
    {
      "id": "1190000018412451",
      "title": "spring路由",
      "url": "/a/1190000018412451",
      "desc": "在方法头上添加：@GetMapping(\"/edit/{id}\")或在方法参数添加：String edit(@PathVariable(\"id\") String id){",
      "author": {
        "nick": "学问思辨行",
        "homepage": "/u/xuewensibianxing"
      }
    },
    {
      "id": "1190000018411547",
      "title": "IntelliJ IDEA 激活码分享, 可使用至2020年1月",
      "url": "/a/1190000018411547",
      "desc": "继破解Jetbrains全家桶的反射服务器被封杀之后, 使用lanyu的激活码激活的IDE即将于今年5月份到期, 习惯于JB带来的便捷性的开发者若果不早做打算,想必青年节那天会十分尴尬.奈何正版的收费让不少人望而却步. 未雨...",
      "author": {
        "nick": "frolc",
        "homepage": "/u/frolc"
      }
    },
    {
      "id": "1190000018411363",
      "title": "【跃迁之路】【744天】程序员高效学习方法论探索系列（实验阶段501-2019.3.6）",
      "url": "/a/1190000018411363",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000018411313",
      "title": "轻松学会责任链模式",
      "url": "/a/1190000018411313",
      "desc": "顾名思义，责任链模式（Chain of Responsibility Pattern）为请求创建了一个接收者对象的链。这种模式给予请求的类型，对请求的发送者和接收者进行解耦。这种类型的设计模式属于行为型模式。",
      "author": {
        "nick": "admin79",
        "homepage": "/u/admin79"
      }
    }
  ]
}