{
  "watchNum": "26568",
  "blogs": [
    {
      "id": "1190000016151426",
      "title": "JVM(2)--一文读懂垃圾回收",
      "url": "/a/1190000016151426",
      "desc": "与其他语言相比，例如c/c++，我们都知道，java虚拟机对于程序中产生的垃圾，虚拟机是会自动帮我们进行清除管理的，而像c/c++这些语言平台则需要程序员自己手动对内存进行释放。",
      "author": {
        "nick": "帅地",
        "homepage": "/u/iamshuaidi"
      }
    },
    {
      "id": "1190000016149909",
      "title": "【跃迁之路】【566天】程序员高效学习方法论探索系列（实验阶段323-2018.08.25）",
      "url": "/a/1190000016149909",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，， 每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000016149711",
      "title": "源码注释解读—HashMap",
      "url": "/a/1190000016149711",
      "desc": "为了更贴近作者的实现意图，以及JDK中每个类的功能特点，决定从源码的注释中和实现来窥探其真谛。字斟句酌、查缺补漏；顺带提高英文阅读能力；首先从HashMap入手：",
      "author": {
        "nick": "帅帅的波",
        "homepage": "/u/dashuaibo"
      }
    },
    {
      "id": "1190000016147024",
      "title": "我理解的数据结构（三）—— 队列（Queue）",
      "url": "/a/1190000016147024",
      "desc": "我理解的数据结构（三）—— 队列（Queue） 一、队列 队列是一种线性结构 相比数组，队列对应的操作是数组的子集 只能从一端（队尾）添加元素，只能从另一端（队首）取出元素 队列是一种先进先出的数据结构（FIFO）...",
      "author": {
        "nick": "罗纳尔多Coder",
        "homepage": "/u/xiezong"
      }
    },
    {
      "id": "1190000016146836",
      "title": "maven 配置可运行的jar",
      "url": "/a/1190000016146836",
      "desc": "{代码...}",
      "author": {
        "nick": "zhiyong357",
        "homepage": "/u/zhiyong357"
      }
    },
    {
      "id": "1190000016146073",
      "title": "JAVA设计模式-策略模式",
      "url": "/a/1190000016146073",
      "desc": "策略模式：定义了算法族，分别封装起来，让他们之间可以相互替换，此模式让算法的变化独立于使用算法的客户",
      "author": {
        "nick": "DH镔",
        "homepage": "/u/dhbin"
      }
    },
    {
      "id": "1190000016145779",
      "title": "FastJson转换字符串引用相同对象产生的错误",
      "url": "/a/1190000016145779",
      "desc": "问题产生 最开始问题是在C层的单元测试中产生的： 报错提示我们说：引用瞬态值，引用之前应该保存一下。 问题解决 1.这好说，一看是minMeasureScaleUnit没有保存，那么保存一下就行了。然而没有用。 2.既然不起作...",
      "author": {
        "nick": "喵先生的进阶之路",
        "homepage": "/u/poshichao"
      }
    },
    {
      "id": "1190000016145140",
      "title": "《Java8实战》-第四章读书笔记（引入流Stream）",
      "url": "/a/1190000016145140",
      "desc": "流是Java API的新成员，它允许你以声明性方式处理数据集合（通过查询语句来表达，而不是临时编写一个实现）。就现在来说，你可以把它们看成遍历数据集的高级迭代器。此外，流还可以透明地并行处理，你无需写任何...",
      "author": {
        "nick": "NGLSL",
        "homepage": "/u/nglsl666"
      }
    },
    {
      "id": "1190000016144655",
      "title": "JVM(1)---虚拟机在运行期的优化策略",
      "url": "/a/1190000016144655",
      "desc": "采用解释器的形式，也就是说，在运行.class运行的时候，解释器一边把.class文件翻译成本地机器码，一边执行。显然这种一边解释翻译一边执行发方式，可以使我们立即启动和执行程序，省去编译的时间。不过由于需要...",
      "author": {
        "nick": "帅地",
        "homepage": "/u/iamshuaidi"
      }
    },
    {
      "id": "1190000016143805",
      "title": "HashMap ConcurrentHashMap",
      "url": "/a/1190000016143805",
      "desc": "看了一下，除了Spring之外的其他很多题都不会，但是不能拿学校没讲Java作为借口，因为可能讲了也不会。",
      "author": {
        "nick": "张喜硕",
        "homepage": "/u/zhangxishuo"
      }
    },
    {
      "id": "1190000016143109",
      "title": "【跃迁之路】【565天】程序员高效学习方法论探索系列（实验阶段322-2018.08.24）",
      "url": "/a/1190000016143109",
      "desc": "从2018.7.1起，【跃迁之路】奖励金计划正式起航，从今以后，， 每月1日，我会将自己个人上月收入的1%计入【跃迁之路】奖励金池，积累到足够金额后，将适时用于奖励那些虽然身处困境，却依然不放弃努力，通过坚持...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000016142952",
      "title": "写出优质Java代码的4个技巧",
      "url": "/a/1190000016142952",
      "desc": "我们平时的编程任务不外乎就是将相同的技术套件应用到不同的项目中去，对于大多数情况来说，这些技术都是可以满足目标的。然而，有的项目可能需要用到一些特别的技术，因此工程师们得深入研究，去寻找那些最简单...",
      "author": {
        "nick": "茶轴的青春",
        "homepage": "/u/chazhoudeqingchun"
      }
    },
    {
      "id": "1190000016142217",
      "title": "正则表达式及多语言操作指南",
      "url": "/a/1190000016142217",
      "desc": "正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式是对字符串（包括普通字...",
      "author": {
        "nick": "青春无罪",
        "homepage": "/u/spartajet"
      }
    },
    {
      "id": "1190000016140649",
      "title": "Spring Boot 最佳实践（一）快速入门",
      "url": "/a/1190000016140649",
      "desc": "在开始了解Spring Boot之前，我们需要先了解一下Spring，因为Spring Boot的诞生和Spring是息息相关的，Spring Boot是Spring发展到一定程度的一个产物，但并不是Spring的替代品，Spring Boot是为了让程序员更好的...",
      "author": {
        "nick": "王磊",
        "homepage": "/u/vipstone"
      }
    },
    {
      "id": "1190000016140145",
      "title": "try catch finally",
      "url": "/a/1190000016140145",
      "desc": "问题描述 笔试 这是京东校招的笔试题： 运行 打印运行结果，就是3。 分析 我们将return与finally拆为几种情况综合分析。 finally之后return {代码...} 看执行结果，我们分析return的原理。 try中执行到return时，...",
      "author": {
        "nick": "张喜硕",
        "homepage": "/u/zhangxishuo"
      }
    }
  ]
}