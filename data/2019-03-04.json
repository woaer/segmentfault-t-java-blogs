{
  "watchNum": "42406",
  "blogs": [
    {
      "id": "1190000018377921",
      "title": "Java8 和 Java9 的主要新特性",
      "url": "/a/1190000018377921",
      "desc": "java 8 之前，HashMap 底层的数据结构是数组+链表实现的， Java 8 之后是数组+链表+红黑树实现的，当链表的长度超过 8 之后，会转换成红黑树。",
      "author": {
        "nick": "AlanKeene",
        "homepage": "/u/alankeene"
      }
    },
    {
      "id": "1190000018375961",
      "title": "Sentinel: 分布式系统的流量防卫兵",
      "url": "/a/1190000018375961",
      "desc": "在 Spring Cloud 体系中，熔断降级我们会使用 Hystrix 框架，限流通常会在 Zuul 中进行处理，Zuul 中没有自带限流的功能，我们可以自己做限流或者集成第三方开源的限流框架。最新一代的网关 Spring Cloud Gateway...",
      "author": {
        "nick": "猿天地",
        "homepage": "/u/yuantiandi"
      }
    },
    {
      "id": "1190000018368825",
      "title": "Spring Cloud Alibaba与Spring Boot、Spring Cloud之间不得不说的版本关系",
      "url": "/a/1190000018368825",
      "desc": "这篇博文是临时增加出来的内容，主要是由于最近连载《Spring Cloud Alibaba基础教程》系列的时候，碰到读者咨询的大量问题中存在一个比较普遍的问题：版本的选择。其实这类问题，在之前写Spring Cloud基础教程的...",
      "author": {
        "nick": "程序猿DD",
        "homepage": "/u/coderdd"
      }
    },
    {
      "id": "1190000018375116",
      "title": "Java 最常见的 200+ 面试题：面试必备",
      "url": "/a/1190000018375116",
      "desc": "这份面试清单是我从 2015 年做 TeamLeader 之后开始收集的，一方面是给公司招聘用，另一方面是想用它来挖掘我在 Java 技术栈中的技术盲点，然后修复和完善它，以此来提高自己的技术水平。虽然我从 2009 年就开始...",
      "author": {
        "nick": "王磊的博客",
        "homepage": "/u/vipstone"
      }
    },
    {
      "id": "1190000018374025",
      "title": "java入门预备知识一",
      "url": "/a/1190000018374025",
      "desc": "java是一种功能强大和多用途的编程语言，具有面向对象、与平台无关的、安全、稳定和多线程等优良特性，可用于开发大型的应用程序，而且特别适合Internet应用的开发。",
      "author": {
        "nick": "四叶草的期待",
        "homepage": "/u/siyecaodeqidai"
      }
    },
    {
      "id": "1190000018373709",
      "title": "程序人生：心中的那朵花",
      "url": "/a/1190000018373709",
      "desc": "3月到的时候，我的脑子中都是各种杂七杂八的预想，关于工作、生活、情感、现实等等，甚至都没来的及准备一下，2019年就已经过了2个月了，越是步入社会越是觉得时间的珍惜。",
      "author": {
        "nick": "Java猫说",
        "homepage": "/u/myself_5ab9f390c6129"
      }
    },
    {
      "id": "1190000018373159",
      "title": "SpringBoot 实战 (十五) | 服务端参数校验之一",
      "url": "/a/1190000018373159",
      "desc": "估计很多朋友都认为参数校验是客户端的职责，不关服务端的事。其实这是错误的，学过 Web 安全的都知道，客户端的验证只是第一道关卡。它的参数验证并不是安全的，一旦被有心人抓到可乘之机，他就可以有各种方法来...",
      "author": {
        "nick": "一个优秀的废人",
        "homepage": "/u/nasus"
      }
    },
    {
      "id": "1190000018373144",
      "title": "Kafka原理你真的知道吗？",
      "url": "/a/1190000018373144",
      "desc": "Apache Kafka最早是由LinkedIn开源出来的分布式消息系统，现在是Apache旗下的一个子项目，并且已经成为开源领域应用最广泛的消息系统之一。Kafka社区非常活跃,从0.9版本开始，Kafka的标语已经从“一个高吞吐量，分...",
      "author": {
        "nick": "公众号_咖啡拿铁",
        "homepage": "/u/gongzhonghao_kafeinatie"
      }
    },
    {
      "id": "1190000018373087",
      "title": "Java虚拟机如何加载类的？",
      "url": "/a/1190000018373087",
      "desc": "上一篇文章谈到Java运行的流程，其中有一环是类加载。今天就继续深入探讨JVM如何加载虚拟机。首先JVM加载类的一般流程分三步：·加载·链接·初始化那么是否全部Java类都是这样三步走的方式加载呢？我们可以从Java的...",
      "author": {
        "nick": "勤思",
        "homepage": "/u/qinsi"
      }
    },
    {
      "id": "1190000018372995",
      "title": "【跃迁之路】【741天】程序员高效学习方法论探索系列（实验阶段498-2019.3.3）",
      "url": "/a/1190000018372995",
      "desc": "从2017.10.6起，开启这个系列，目标只有一个：探索新的学习方法，实现跃迁式成长 实验期2年（2017.10.06 - 2019.10.06） 我将以自己为实验对象。 我将开源我的学习方法，方法不断更新迭代，全程记录分享 实验结束...",
      "author": {
        "nick": "Wall_Breaker",
        "homepage": "/u/wall_breaker"
      }
    },
    {
      "id": "1190000018372717",
      "title": "JavaSe笔记03-关于操作符,运算符和位运算符",
      "url": "/a/1190000018372717",
      "desc": "运算符 Java运算符，是一种特殊的符号。用表示数据的运算，赋值和比较。 算数运算符 赋值运算符 比较运算符 位运算符 逻辑运算符 三目运算符 1. 算数运算符 {代码...} a. 自增：++ 不同行： {代码...} 相同行：在...",
      "author": {
        "nick": "luochenxi",
        "homepage": "/u/luochenxii"
      }
    },
    {
      "id": "1190000018371933",
      "title": "1003-检查替换后的词是否有效",
      "url": "/a/1190000018371933",
      "desc": "给定有效字符串 \"abc\"。 对于任何有效的字符串 V，我们可以将 V 分成两个部分 X 和 Y，使得 X + Y（X 与 Y 连接）等于 V。（X 或 Y 可以为空。）那么，X + \"abc\" + Y 也同样是有效的。 例如，如果 S = \"abc\"，则...",
      "author": {
        "nick": "Null",
        "homepage": "/u/null_ryan"
      }
    },
    {
      "id": "1190000018371918",
      "title": "JavaSe笔记02-添加判断和字符char的认识",
      "url": "/a/1190000018371918",
      "desc": "字节数就是决定数据类型的内存空间的大小，也决定了数据类型的字面值范围。在开发过程中，我们定义个变量，合理数据类型的选择是根据你的字面值去决定的，反之:什么样子字面值就决定你选择一个合理的数据类型。",
      "author": {
        "nick": "luochenxi",
        "homepage": "/u/luochenxii"
      }
    },
    {
      "id": "1190000018371628",
      "title": "1002-查找常用字符",
      "url": "/a/1190000018371628",
      "desc": "给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。 ...",
      "author": {
        "nick": "Null",
        "homepage": "/u/null_ryan"
      }
    },
    {
      "id": "1190000018371488",
      "title": "JavaSe笔记01-关于数据类型",
      "url": "/a/1190000018371488",
      "desc": "1:Java基础数据类型 公式：1byte=8bit;bit是内存中0，1代码存储的最小单位。 1.1 整数：包含正整数，负整数和0。 {代码...} 1.2 浮点型：精度(单精度和双精度) {代码...} 1.3 字符型 {代码...} 1.4 布尔型 {代码....",
      "author": {
        "nick": "luochenxi",
        "homepage": "/u/luochenxii"
      }
    }
  ]
}