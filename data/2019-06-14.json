{
  "watchNum": "54703",
  "blogs": [
    {
      "id": "1190000019480095",
      "title": "面试问我 Java 逃逸分析，瞬间被秒杀了。。",
      "url": "/a/1190000019480095",
      "desc": "当时我被问得一脸蒙逼，瞬间被秒杀得体无完肤，当时我压根就不知道他在考什么知识点，难道对象不是在堆中分配吗？最后就没然后了，回去等通知了。。",
      "author": {
        "nick": "Java技术栈",
        "homepage": "/u/javastack"
      }
    },
    {
      "id": "1190000019479965",
      "title": "最长公共前缀（LCP）",
      "url": "/a/1190000019479965",
      "desc": "Leetcode: 编写一个函数来查找字符串数组中的最长公共前缀。如果不存在公共前缀，返回空字符串 \"\"。",
      "author": {
        "nick": "yin",
        "homepage": "/u/yin_655159"
      }
    },
    {
      "id": "1190000019479326",
      "title": "Hibernate事务管理",
      "url": "/a/1190000019479326",
      "desc": "事务只是一个工作单位(单元)。 在这种情况下，如果一个步骤失败，则整个事务失败(称为原子性)。 ACID属性(原子性，一致性，隔离性和持久性)可以描述事务。",
      "author": {
        "nick": "开发者学习指南",
        "homepage": "/u/aliyundaxuexiaoliu"
      }
    },
    {
      "id": "1190000019478751",
      "title": "从简历被拒到收割今日头条 offer，我用一年时间破茧成蝶！",
      "url": "/a/1190000019478751",
      "desc": "本文是 无精疯 同学投稿的面试经历 关注微信公众号：进击的java程序员K，即可获取最新BAT面试资料一份",
      "author": {
        "nick": "进击的java程序员",
        "homepage": "/u/javagaojijiagou_5b18fe1e8778a"
      }
    },
    {
      "id": "1190000019478707",
      "title": "ThreadLocal实现原理",
      "url": "/a/1190000019478707",
      "desc": "如果这个类被用在多线程环境内，则会存在线程安全问题，那么可以对这两个方法添加synchronized关键字进行同步处理，不过这样会大大降低程序的性能，也可以将connection变成局部变量：",
      "author": {
        "nick": "leon",
        "homepage": "/u/leon_5cdd85db2cdb3"
      }
    },
    {
      "id": "1190000019477583",
      "title": "springboot+quartz+jsoup+kafka",
      "url": "/a/1190000019477583",
      "desc": "最近在学习springboot，光看官方文档比较枯燥，于是想用一个项目把各种框架和技术串联起来，思来想去觉得爬虫是一个不错的idea。",
      "author": {
        "nick": "xiaop",
        "homepage": "/u/xiaop_5b0f517e68bdd"
      }
    },
    {
      "id": "1190000019475480",
      "title": "springCloud学习3（Netflix Hystrix弹性客户端）",
      "url": "/a/1190000019475480",
      "desc": "所有的系统都会遇到故障，分布式系统单点故障概率更高。如何构建应用程序来应对故障，是每个软件开发人员工作的关键部分。但是通常在构建系统时，大多数工程师只考虑到基础设施或关键服务彻底发生故障，使用诸如...",
      "author": {
        "nick": "flex",
        "homepage": "/u/flex_5af4f84597dc9"
      }
    },
    {
      "id": "1190000019475300",
      "title": "【测试相关】mock与stub的区别",
      "url": "/a/1190000019475300",
      "desc": "复习软工二的时候遇到的占坑考完试回来写",
      "author": {
        "nick": "Noora",
        "homepage": "/u/noora_5cb2ecd92531a"
      }
    },
    {
      "id": "1190000019474742",
      "title": "Spring DataJPA Redis教程(基础版)",
      "url": "/a/1190000019474742",
      "desc": "本教程主要详细讲解Spring Data Redis,它向Redis提供Spring Data平台的抽象.",
      "author": {
        "nick": "qianmoQ",
        "homepage": "/u/qianmoq"
      }
    },
    {
      "id": "1190000019474275",
      "title": "【修炼内功】[JVM] 虚拟机栈及字节码基础",
      "url": "/a/1190000019474275",
      "desc": "在浅谈虚拟机内存模型一文中有简单介绍过，虚拟机栈是线程私有的，每个方法在执行的同时都会创建一个栈帧，方法执行时栈帧入栈，方法结束时栈帧出栈，虚拟机中栈帧的入栈顺序就是方法的调用顺序",
      "author": {
        "nick": "林舍",
        "homepage": "/u/manerfan"
      }
    },
    {
      "id": "1190000019474258",
      "title": "LinkedList源码",
      "url": "/a/1190000019474258",
      "desc": "静态内部类，该类不能直接访问LinkedLIst的非静态成员（属性和方法），因为Java的约束：静态方法不能直接访问非静态的成员。",
      "author": {
        "nick": "布尔bl",
        "homepage": "/u/chenzhuantou"
      }
    },
    {
      "id": "1190000019473338",
      "title": "jdk环境配置",
      "url": "/a/1190000019473338",
      "desc": "久违的从win7第一次换到了win10 1903系统，久违的上了实验吧想练一练ctf然后发现，诶，我java环境呢？忘记配了，，，熟练的点来安装文件，安装一气呵成，cmd命令，java，没问题！javac！'JAVAC' 不是内部或外部命...",
      "author": {
        "nick": "体贴金",
        "homepage": "/u/titiejin"
      }
    },
    {
      "id": "1190000019472811",
      "title": "Struts2 和 SpringMVC的区别?",
      "url": "/a/1190000019472811",
      "desc": "△开发方式不同：Struts2：基于类开发，传递参数通过类的属性，只能设置为多例SpringMvc：基于方法开发(一个url对应一个方法)，请求参数传递到方法形参，可以为单例也可以为多例(建议单例)",
      "author": {
        "nick": "巅峰大词典",
        "homepage": "/u/lingfeng23"
      }
    },
    {
      "id": "1190000019472361",
      "title": "策略模式",
      "url": "/a/1190000019472361",
      "desc": "定义：定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化不会影响到使用算法的用户。类型：行为型适用场景：",
      "author": {
        "nick": "LuoJKL",
        "homepage": "/u/luojkl"
      }
    },
    {
      "id": "1190000019471602",
      "title": "正则表达式的规则及应用",
      "url": "/a/1190000019471602",
      "desc": "第三阶段 JAVA常见对象的学习 正则表达式 (一) 正则表达式概述 (1) 简单概述 就是符合一定规则的字符串、 (2) 常见规则 {代码...} (3) 常见功能 {代码...} 正则表达式是非常强大的，我们通过几个简单的例子来看一...",
      "author": {
        "nick": "BWH_Steven",
        "homepage": "/u/bwh_steven"
      }
    }
  ]
}